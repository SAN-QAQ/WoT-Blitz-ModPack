[material][a] property float chainPointCount = 1.0;
[material][a] property float chunkLength = 1.0;
[material][a] property float2 chunkOffset = const0List2;
[material][cp] property float4 chainPoints[32] : "bigarray";

uint uintMod(uint a, uint b)
{
	return a - (a / b) * b;
}

inline float getModificationFactor(float2 a, float2 b)
{
	const float2 ab = float2(a.x * b.y, b.x * a.y);

	return sign(ab.x - ab.y) * sqrt((-ab.y * 2.0 + ab.x) * ab.x + (ab.y * ab.y)) * (1.0 / dot(a, b));
}

#if NEED_CHAIN_TEXCOORD_OFFSETS
	[material][ct] property float4 chainTexCoordOffsets[16] : "bigarray";

	__forceinline float getTexCoordOffset(uint index)
	{
		index = uintMod(index, uint(chainPointCount));

		const uint arrayIndex = index / uint(4);
		const uint componentOffset = uintMod(index, uint(4));

		return chainTexCoordOffsets[arrayIndex][componentOffset];
	}
#endif

__forceinline float2 getChainPoint(uint index)
{
	index = uintMod(index, uint(chainPointCount));

	const uint arrayIndex = index / uint(2);
	const uint componentOffset = uintMod(index, uint(2)) * uint(2);

	return float2(chainPoints[arrayIndex][componentOffset], chainPoints[arrayIndex][componentOffset + 1]);
}
