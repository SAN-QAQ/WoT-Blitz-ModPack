Header:
    version: 155
ImportedPackages:
- "~res:/UI/Screens3/Common/OverlayBlur.yaml"
- "~res:/UI/Screens3/Lobby/Common/PlayerName.yaml"
Prototypes:
-   class: "UIControl"
    name: "OverlayBasic"
    size: [1200.000000, 1200.000000]
    refreshStylesOnInteract: false
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Common/Overlay/OverlayOpen.animation"
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        ModalInput: {}
        UIVirtualActionEventComponent0:
            virtualKeyAction: "Escape"
            keyDownEvent: "OnKeyCloseRequested"
        UIVirtualActionEventComponent1:
            virtualKeyAction: "Extra1"
            keyDownEvent: "EXTRA1_ACTION"
        UIVirtualActionEventComponent2:
            virtualKeyAction: "Extra2"
            keyDownEvent: "EXTRA2_ACTION"
        UIShortcutEventComponent:
            shortcuts: "OnKeyCloseRequested,Escape;OnKeyCloseRequested,Back;SHIFT_D,SHIFT+D"
        UIDataParamsComponent:
            params:
            - ["vector<ResourceModel>", "headerCurrencies", "[ ]", "[ { \"quantity\" = 5000; \"type\" = ResourceType.gold; }; { \"quantity\" = 123456; \"type\" = ResourceType.credits; }; ]"]
            - ["bool", "headerCurrenciesClickable", "false", "false"]
            - ["bool", "hideHeader", "false", "false"]
            - ["bool", "isFooterOverContent", "false", "true"]
            - ["bool", "fullWidthFooter", "false", "true"]
            - ["int", "footerHeight", "0", "0"]
            - ["int", "tabBarHeight", "0", "0"]
            - ["string", "closeButtonIcon", "\"\"", "\"\""]
            - ["control", "titleContent", "null", "null"]
            - ["control", "backContent", "null", "null"]
            - ["int", "contentHeight", "0", "800"]
            - ["bool", "scaleBg", "false", "false"]
            - ["control", "popoverContent", "null", "null"]
            - ["control", "footerContent", "null", "null"]
            - ["control", "rightCornerContent", "null", "null"]
            - ["control", "tabContent", "null", "null"]
            - ["string", "playerName", "\"\"", "\"OverlayPlayerName\""]
            - ["string", "clanTag", "\"\"", "\"OL_TAG\""]
            - ["string", "title", "\"\"", "\"#Overlay Title\""]
            - ["control", "content", "null", "null"]
            - ["string", "customBgURL", "\"\"", "\"\""]
            - ["bool", "alighBgCenter", "true", "true"]
            - ["bool", "hasCustomBg", "false", "false"]
            - ["bool", "isFooterVisible", "true", "true"]
            - ["bool", "forcedFullSize", "false", "false"]
            - ["bool", "wasPushed", "true", "true"]
            - ["string", "customBgStyle", "\"\"", "\"black-bg\""]
            - ["bool", "manualCloseEnabled", "true", "true"]
            - ["string", "imageFromClient", "\"\"", "\"\""]
            events:
            - "OVERLAY_CONTENT_HEIGHT_CHANGED"
            - "ON_STATS_ITEM_PRESSED"
            - "OVERLAY_CLOSE_START"
            - "BACK_EVENT"
            - "OVERLAY_OPEN_FINISH"
            - "EXTRA1_ACTION"
            - "EXTRA2_ACTION"
            - "SHIFT_D"
            - "KEY_CLOSE_REQUESTED"
        UIDataLocalVarsComponent:
            data:
            - ["bool", "animationFinished", "false"]
            - ["int", "currentResultH", "0"]
        UIDataLocalBindingsComponent:
            data:
            - ["int", "overallH", "tabBarHeight + footerHeight + 80 + contentHeight"]
            - ["bool", "fullSize", "forcedFullSize or (screenHeight < 768 or (overallH + 64 > screenHeight))"]
            - ["int", "resultH", "when fullSize -> screenHeight - 64, overallH < 576 -> 576, overallH"]
            - ["int", "resultContentH", "resultH - tabBarHeight - footerHeight - 80"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Common/Overlay/OverlayBasic.actions"
        UIDataOnEventComponent0:
            eventName: "OVERLAY_OPEN_FINISH"
            modelFieldExpression: "animationFinished"
            dataExpression: "true"
        UIDataOnEventComponent1:
            eventName: "START_OVERLAY_CLOSING"
            modelFieldExpression: "animationFinished"
            dataExpression: "false"
        UIEventOnDataComponent0:
            watchedDataExpression: "resultH"
            ifExpression: "animationFinished or not wasPushed"
            eventName: "UpdateCurrentHeight"
            eventData: "resultH"
        UIEventOnDataComponent1:
            watchedDataExpression: "resultContentH"
            ifExpression: "resultContentH > 0"
            eventName: "OVERLAY_CONTENT_HEIGHT_CHANGED"
            eventData: "resultContentH"
        StyleSheet:
            styles: "~res:/UI/Screens3/Lobby/Common/Overlay/Overlay.style.yaml"
    children:
    -   prototype: "OverlayBlur/BlurAndFade"
        name: "BlurAndFade"
        input: true
        refreshStylesOnInteract: false
        components:
            UIInputEventComponent:
                onTouchUpInside: "OnManualClose"
        children:
        -   path: "Blur"
            components:
                UIOpacityComponent: {}
                Sound: {}
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["UIOpacityComponent.opacity", "when wasPushed -> 0, 1"]
        -   path: "Fade"
            components:
                UIOpacityComponent: {}
            bindings:
            - ["UIOpacityComponent.opacity", "when wasPushed -> 0, 0.600000"]
    -   class: "UIControl"
        name: "Overlay"
        refreshStylesOnInteract: false
        components:
            UIOpacityComponent:
                opacity: 0.000000
            ClipContent: {}
            Anchor:
                hCenterAnchorEnabled: true
            LinearLayout:
                enabled: true
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "960.000000"
                verticalPolicy: "FixedSize"
        bindings:
        - ["Anchor.vCenterAnchorEnabled", "not fullSize"]
        - ["Anchor.bottomAnchorEnabled", "fullSize"]
        - ["SizePolicy.verticalValue", "currentResultH"]
        children:
        -   class: "UIControl"
            name: "Bg"
            input: false
            components:
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIControl"
                name: "DefaultBg"
                size: [32.000000, 32.000000]
                input: false
                components:
                    Background:
                        drawType: "DRAW_FILL"
                    UIRoundedCornersComponent: {}
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
                bindings:
                - ["classes", "when not customBgStyle.empty() -> customBgStyle, hasCustomBg -> \"grey-shark-bg\", \"grey-shark-90-bg\""]
                - ["UIRoundedCornersComponent.radius", "when fullSize -> \"14;14;0;0;\", 14"]
            -   class: "UIControl"
                name: "CustomBg"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    LinearLayout:
                        orientation: "TopDown"
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "hasCustomBg"]
                children:
                -   class: "UIControl"
                    name: "Image"
                    input: false
                    components:
                        Anchor:
                            leftAnchorEnabled: true
                            topAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        UIChildComponent0:
                            childType: "kControl"
                            condition: "imageFromClient != \"\" and not scaleBg"
                            control: "ImageFromClient"
                        UIChildComponent1:
                            childType: "kControl"
                            condition: "imageFromClient != \"\" and scaleBg"
                            control: "ImageFromClientScaled"
                        UIChildComponent2:
                            childType: "kControl"
                            condition: "not scaleBg"
                            control: "Image"
                        UIChildComponent3:
                            childType: "kControl"
                            condition: "scaleBg"
                            control: "ImageScaled"
                -   class: "UIControl"
                    name: "Fade"
                    input: false
                    components:
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "FixedSize"
                    bindings:
                    - ["visible", "not scaleBg and resultH > 1200"]
                    children:
                    -   class: "UIControl"
                        name: "Gradient"
                        input: false
                        components:
                            Background:
                                drawType: "DRAW_SCALE_TO_RECT"
                                sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_vertical_0-100"
                            Anchor:
                                bottomAnchorEnabled: true
                                bottomAnchor: 100.000000
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfParent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Color.style.yaml"
                        bindings:
                        - ["classes", "when not customBgStyle.empty() -> customBgStyle, \"grey-shark-bg\""]
        -   class: "UIControl"
            name: "BackContent"
            input: false
            components:
                Anchor:
                    leftAnchorEnabled: true
                    topAnchorEnabled: true
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "not isNull(backContent)"
                    control: "backContent"
        -   class: "UIControl"
            name: "Header"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 80.000000
            bindings:
            - ["visible", "not hideHeader"]
            children:
            -   class: "UIControl"
                name: "Bg"
                visible: false
                input: false
                components:
                    LinearLayout:
                        orientation: "TopDown"
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                children:
                -   class: "UIControl"
                    name: "DefaultBg"
                    input: false
                    classes: "grey-shark-90-bg"
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                        UIRoundedCornersComponent:
                            radius: " 14;14;0"
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "Separator"
                visible: false
                input: false
                classes: "white-wild-sand-5-bg"
                components:
                    Background: {}
                    Anchor:
                        bottomAnchorEnabled: true
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "FixedSize"
                        verticalValue: 1.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "OverlayTitle"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIChildComponent0:
                        childType: "kControl"
                        condition: "isNull(titleContent)"
                        control: "OverlayTitle"
                    UIChildComponent1:
                        childType: "kControl"
                        condition: "not isNull(titleContent)"
                        control: "titleContent"
            -   class: "UIControl"
                name: "RightContent"
                input: false
                components:
                    Anchor:
                        rightAnchorEnabled: true
                        rightAnchor: 16.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "PercentOfParent"
                    UIChildComponent0:
                        childType: "kControl"
                        condition: "not isNull(rightCornerContent)"
                        control: "rightCornerContent"
        -   class: "UIControl"
            name: "TabBarHolder"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "not isNull(tabContent)"
                    control: "tabContent"
        -   class: "UIControl"
            name: "Content"
            input: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "not isNull(content)"
                    control: "content"
        -   class: "UIControl"
            name: "CloseButton"
            input: false
            components:
                Anchor:
                    leftAnchorEnabled: true
                    leftAnchor: 16.000000
                    topAnchorEnabled: true
                    topAnchor: 16.000000
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfFirstChild"
                    verticalPolicy: "PercentOfFirstChild"
                UIChildComponent0:
                    condition: "manualCloseEnabled"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/IconButton.yaml"
                    args:
                        "locked": "false"
                        "visible": "manualCloseEnabled"
                        "isBgVisible": "false"
                        "image": "when empty(closeButtonIcon) -> \"~res:/Gfx/Shared/icons/icon_close_n\", closeButtonIcon"
                        "type": "eButtonType.OPTIONAL_LIGHT"
                        "enabled": "true"
                        "hasSound": "false"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "OnManualClose", ""]
                UIIdentifierComponent:
                    id: "close_button"
        -   class: "UIControl"
            name: "Footer"
            input: false
            components:
                Anchor: {}
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "Formula"
                    verticalFormula: "safeAreaInsets.bottom + lastChild"
            bindings:
            - ["visible", "isFooterVisible"]
            - ["Anchor.bottomAnchorEnabled", "isFooterOverContent"]
            - ["IgnoreLayout.enabled", "isFooterOverContent"]
            children:
            -   class: "UIControl"
                name: "Bg"
                input: false
                components:
                    Background: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "ContentArea"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalFormula: "when fullWidthFooter -> parent, parent < 1200 -> 800, 1040"
                        verticalPolicy: "PercentOfMaxChild"
                    UIChildComponent0:
                        childType: "kControl"
                        condition: "not isNull(footerContent)"
                        control: "footerContent"
        -   class: "UIControl"
            name: "PopoverBlock"
            input: false
            components:
                Anchor:
                    bottomAnchorEnabled: true
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfMaxChild"
            children:
            -   class: "UIControl"
                name: "ContentArea"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalFormula: "maxChild"
                        verticalPolicy: "PercentOfMaxChild"
                    UIChildComponent0:
                        childType: "kControl"
                        condition: "not isNull(popoverContent)"
                        control: "popoverContent"
    -   class: "UIControl"
        name: "HeaderCurrencies"
        input: false
        components:
            Anchor:
                rightAnchorEnabled: true
                topAnchorEnabled: true
                topAnchor: 4.000000
            LinearLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
        children:
        -   class: "UIControl"
            name: "CurrencyContainer"
            size: [32.000000, 32.000000]
            input: false
            components:
                UIOpacityComponent: {}
                LinearLayout:
                    spacing: 20.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "FixedSize"
                    verticalValue: 40.000000
                UIRepeatComponent:
                    control: "~res:/UI/Screens3/Lobby/StatsInfoPanelItem.yaml"
                    dataContainer: "headerCurrencies"
                    args:
                        "isVisible": "_item.type != ResourceType.undefined and _item.type != ResourceType.real_currency"
                        "enabled": "headerCurrenciesClickable"
                        "forceFullValue": "true"
                        "resource": "_item"
                    eventActions:
                    - ["ON_STATS_ITEM_PRESSED", "ON_STATS_ITEM_PRESSED", "_item.type"]
        -   class: "UIControl"
            name: "RightSafeArea"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "max(safeAreaInsets.right, 8)"
                    verticalPolicy: "PercentOfParent"
Slots:
-   class: "UIControl"
    name: "Image"
    size: [1000.000000, 1000.000000]
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "ImageContent"
        input: false
        components:
            Background:
                drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
            UIUrlImageComponent: {}
            Anchor:
                topAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 1200.000000
                verticalPolicy: "PercentOfContent"
        bindings:
        - ["UIUrlImageComponent.imageUrl", "customBgURL"]
        - ["Anchor.leftAnchorEnabled", "not alighBgCenter"]
        - ["Anchor.hCenterAnchorEnabled", "alighBgCenter"]
-   class: "UIControl"
    name: "ImageScaled"
    input: false
    components:
        Background:
            drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
            align: ["HCENTER", "TOP"]
        UIUrlImageComponent:
            upscaleForHighResolution: true
        UIRoundedCornersComponent: {}
        Anchor:
            hCenterAnchorEnabled: true
            topAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    bindings:
    - ["UIUrlImageComponent.imageUrl", "customBgURL"]
    - ["UIRoundedCornersComponent.radius", "when fullSize -> \"14;14;0;0;\", 14"]
-   class: "UIControl"
    name: "ImageFromClient"
    input: false
    components:
        Background: {}
        UIRoundedCornersComponent:
            radius: "14;14;0;0"
        Anchor:
            leftAnchorEnabled: true
            topAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfContent"
            verticalPolicy: "PercentOfContent"
    bindings:
    - ["Background.sprite", "imageFromClient"]
-   class: "UIControl"
    name: "ImageFromClientScaled"
    input: false
    components:
        Background:
            drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
        UIRoundedCornersComponent:
            radius: "14;14;0;0"
        Anchor:
            leftAnchorEnabled: true
            topAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 1200.000000
            verticalPolicy: "PercentOfContent"
    bindings:
    - ["Background.sprite", "imageFromClient"]
-   class: "UIControl"
    name: "Rounded"
    input: false
    classes: "grey-shark-bg"
    components:
        Background:
            leftRightStretchCap: 15.000000
            topBottomStretchCap: 15.000000
        UIRoundedCornersComponent: {}
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "FixedSize"
            verticalValue: 15.000000
        StyleSheet:
            styles: "~res:/UI/Screens3/Color.style.yaml"
    bindings:
    - ["UIRoundedCornersComponent.radius", "\"0;0;14;14;\""]
-   class: "UIControl"
    name: "OverlayTitle"
    input: false
    components:
        Anchor:
            hCenterAnchorEnabled: true
            vCenterAnchorEnabled: true
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "PercentOfMaxChild"
            verticalPolicy: "PercentOfChildrenSum"
    children:
    -   class: "UIControl"
        name: "Title"
        input: false
        classes: "t-subtitle regular white-wild-sand-50-text"
        components:
            UITextComponent: {}
            Anchor:
                hCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["UITextComponent.text", "localize(title)"]
    -   prototype: "PlayerName/PlayerName"
        name: "PlayerName"
        components:
            Anchor:
                hCenterAnchorEnabled: true
            UIDataParamsComponent:
                args:
                    "clanTag": "clanTag"
                    "playerName": "playerName"
-   class: "UIControl"
    name: "imageRounded"
    visible: false
    input: false
    components:
        Background:
            usePostProcessedSprite: true
        UIPostProcessInputComponent:
            id: "customBg"
        UIPostProcessTextureComponent0:
            materialPath: "~res:/Materials/2d.Textured.material"
            renderRequestingType: "ON_SIZE_CHANGED"
        UIRoundedCornersComponent: {}
        Anchor:
            hCenterAnchorEnabled: true
            topAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    bindings:
    - ["UIRoundedCornersComponent.radius", "when fullSize -> \"14;14;0;0;\", 14"]
