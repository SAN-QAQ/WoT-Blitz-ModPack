Header:
    version: 141
ImportedPackages:
- "~res:/UI/Screens3/Common/BlurModified.yaml"
Prototypes:
-   class: "UIControl"
    name: "Timer"
    input: false
    components:
        LinearLayout:
            padding: "0;4"
            useRtl: true
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "FixedSize"
        UIDataParamsComponent:
            params:
            - ["float", "blurScale", "0.500000", "0.500000"]
            - ["bool", "enableAlert", "false", "false"]
            - ["bool", "shortFormat", "false", "true"]
            - ["string", "colorStyle", "\"white-wild-sand\"", "\"white-wild-sand\""]
            - ["string", "bgColorStyle", "\"\"", "\"\""]
            - ["bool", "visible", "true", "true"]
            - ["int64", "serverTime", "1548670002L", "1548670002L"]
            - ["int64", "time", "15131323123L", "15131323123L"]
            - ["bool", "bgVisible", "false", "false"]
            - ["bool", "iconVisible", "true", "true"]
            - ["int64", "alertTime", "0L", "0L"]
            - ["string", "customIcon", "\"\"", "\"\""]
            - ["eTimerSize", "timerSize", "eTimerSize.Small", "eTimerSize.Small"]
        UIDataLocalVarsComponent:
            data:
            - ["string", "defaultIcon", "when timerSize == eTimerSize.Small or timerSize == eTimerSize.Medium -> \"~res:/Gfx/Lobby/icons/icon_timer\", timerSize == eTimerSize.Big -> \"~res:/Gfx/Lobby/icons/icon_timer_m\", \"\""]
            - ["string", "fontStyle", "when timerSize == eTimerSize.Small -> \"t-caption bold\", timerSize == eTimerSize.Medium -> \"t-subtitle regular\", timerSize == eTimerSize.Big -> \"t-title regular\", \"\""]
            - ["int", "verticalSize", "when timerSize == eTimerSize.Small -> 24, timerSize == eTimerSize.Medium -> 32, timerSize == eTimerSize.Big -> 48, 0"]
        UIDataLocalBindingsComponent:
            data:
            - ["string", "iconColorFormatted", "colorStyle + \"-bg\""]
            - ["string", "textColorFormatted", "colorStyle + \"-text\""]
            - ["bool", "isExpiring", "(alertTime > 0L and (time - serverTime) < alertTime) or enableAlert"]
            - ["string", "iconColorClass", "when isExpiring -> \"red-red-bg\", iconColorFormatted"]
            - ["string", "textColorClass", "when isExpiring -> \"red-red-text\", textColorFormatted"]
            - ["string", "icon", "when not empty(customIcon) -> customIcon, defaultIcon"]
    bindings:
    - ["visible", "visible"]
    - ["SizePolicy.verticalValue", "verticalSize"]
    children:
    -   class: "UIControl"
        name: "Bg"
        input: false
        components:
            Background: {}
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
        bindings:
        - ["visible", "bgVisible"]
        children:
        -   prototype: "BlurModified/BlurModified"
            name: "Blur"
            components:
                UIDataParamsComponent:
                    args:
                        "bgStyle": "bgColorStyle"
                        "blurScale": "blurScale"
                        "roundCorner": "\"3\""
    -   class: "UIControl"
        name: "Icon"
        input: false
        components:
            Background:
                drawType: "DRAW_SCALE_PROPORTIONAL"
                perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
        bindings:
        - ["visible", "iconVisible"]
        - ["classes", "iconColorClass"]
        - ["Background.sprite", "icon"]
    -   class: "UIControl"
        name: "Value"
        input: false
        components:
            UITextComponent: {}
            Anchor:
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            UIIdentifierComponent:
                id: "timer_text"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["classes", "fontStyle + \" \" + textColorClass"]
        - ["UITextComponent.text", "when shortFormat -> timeDiffShort(time - serverTime), timeDiff(time - serverTime)"]
