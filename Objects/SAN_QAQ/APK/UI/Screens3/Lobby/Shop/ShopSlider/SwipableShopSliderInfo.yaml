Header:
    version: 151
Prototypes:
-   class: "UIControl"
    name: "SwipableShopSliderInfo"
    size: [1680.000000, 729.000000]
    input: false
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Shop/ShopSlider/SwipableShopSliderInfoInit.animation"
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        UIDataParamsComponent:
            params:
            - ["vector<ResourceModel>", "headerCurrencies", "[ ]", "[ { \"quantity\" = 5000; \"type\" = ResourceType.gold; }; { \"quantity\" = 123456; \"type\" = ResourceType.credits; }; ]"]
            - ["int", "initProductIndex", "0", "2"]
            - ["AppDataModel", "app", "null", "{ }"]
            - ["SessionDataModel", "session", "null", "{ }"]
            - ["string", "taxMessage", "\"\"", "\"All prices include tax\""]
            - ["ShopSlider", "slider", "null", "{ }"]
            - ["map<int,StuffResourceWithDescription>", "chests", "{ }", "{ }"]
            - ["bool", "hasOpenedOverlays", "false", "true"]
            - ["bool", "arabicLocalization", "false", "false"]
            - ["map<int,bool>", "showInfoButtons", "{ }", "{ }"]
            - ["bool", "wasPushed", "true", "true"]
            - ["bool", "showLoading", "false", "false"]
            - ["bool", "alternativeAction", "false", "true"]
            events:
            - "ON_PRESENT_CLICKED(int id)"
            - "ON_MAIN_REWARD_CLICKED(int id)"
            - "ON_BUY_CLICKED(int id)"
            - "ON_REWARD_CLICKED(ResourceDetailed resource, string attachId)"
            - "ON_INFO_CLICKED(int id)"
        UIDataLocalVarsComponent:
            data:
            - ["int", "footerH", "122"]
            - ["int", "currentIndex", "when not isNull(slider) and slider.products.Size() > initProductIndex -> initProductIndex, 0"]
            - ["bool", "debugMode", "false"]
            - ["int", "rightIndex", "0"]
            - ["int", "leftIndex", "0"]
            - ["float", "leftPosition", "0.000000"]
            - ["float", "rightPosition", "0.000000"]
            - ["float", "leftProportion", "1.000000"]
            - ["float", "rightProportion", "1.000000"]
        UIDataLocalBindingsComponent:
            data:
            - ["float", "pageWidth", "when screenWidth < 1232 -> 960.000000, 1200.000000"]
            - ["float", "farPosition", "-2 * pageWidth"]
            - ["int", "pageCount", "when not isNull(slider) -> slider.products.Size(), 0"]
            - ["ShopProduct", "currentProduct", "when pageCount > currentIndex -> slider.products[currentIndex], null"]
            - ["int", "currentProductId", "when not isNull(currentProduct) -> currentProduct.id, -1"]
            - ["string", "leftBgUrl", "when pageCount > leftIndex -> slider.products[leftIndex].backgroundUrl, \"\""]
            - ["string", "rightBgUrl", "when pageCount > rightIndex -> slider.products[rightIndex].backgroundUrl, \"\""]
            - ["string", "buttonCaption", "when isNull(currentProduct) -> \"shop/Buy\", app.constants.nsb and currentProduct.paymentType == eShopPaymentType.EXTERNAL -> \"shop/eShop/NS\", not isNull(currentProduct.piggyBank) -> \"#common:Button/Claim\", chests.Contains(currentProduct.id) -> \"Chests/Open\", isNull(currentProduct.salePrice) or currentProduct.salePrice.resources.Empty() -> \"shop/FreeBundle/Get\", \"shop/Buy\""]
            - ["ResourceModel", "resourcesOrigin0", "when not isNull(currentProduct) and Size(currentProduct.salePrice.resources) >= 1 -> currentProduct.salePrice.resources[0], null"]
            - ["ResourceModel", "resourcesOrigin1", "when not isNull(currentProduct) and Size(currentProduct.salePrice.resources) >= 2 -> currentProduct.salePrice.resources[1], null"]
            - ["ResourceType", "currencyType0", "when not isNull(currentProduct) and Size(currentProduct.salePrice.resources) >= 1 -> currentProduct.salePrice.resources[0].type, ResourceType.undefined"]
            - ["ResourceType", "currencyType1", "when not isNull(currentProduct) and Size(currentProduct.salePrice.resources) == 2 -> currentProduct.salePrice.resources[1].type, ResourceType.undefined"]
            - ["bool", "isCurrency0Exist", "when currencyType0 == ResourceType.stuff -> Contains(session.artefacts.artefactIds, currentProduct.salePrice.resources[0].name), not (indexOf(session.stats.resources, \"type\", currencyType0) == -1)"]
            - ["bool", "isCurrency1Exist", "when currencyType1 == ResourceType.stuff -> Contains(session.artefacts.artefactIds, currentProduct.salePrice.resources[1].name), not (indexOf(session.stats.resources, \"type\", currencyType1) == -1)"]
            - ["int", "quantity0", "when currencyType0 == ResourceType.stuff and isCurrency0Exist -> session.artefacts.artefactIds[currentProduct.salePrice.resources[0].name], when isCurrency0Exist -> session.stats.resources[indexOf(session.stats.resources, \"type\", currencyType0)].quantity, 0"]
            - ["int", "quantity1", "when currencyType1 == ResourceType.stuff and isCurrency1Exist -> session.artefacts.artefactIds[currentProduct.salePrice.resources[1].name], when isCurrency1Exist -> session.stats.resources[indexOf(session.stats.resources, \"type\", currencyType1)].quantity, 0"]
            - ["ResourceModel", "currency0", "{ \"quantity\" = quantity0; \"type\" = currencyType0; \"grade\" = (when not isNull(resourcesOrigin0) -> resourcesOrigin0.grade, ArtefactGrade.rare); \"icon\" = (when not isNull(resourcesOrigin0) -> resourcesOrigin0.icon, \"\"); \"iconUrl\" = (when not isNull(resourcesOrigin0) -> resourcesOrigin0.iconUrl, \"\"); \"showGrade\" = (when not isNull(resourcesOrigin0) -> resourcesOrigin0.showGrade, false); \"isAvatar\" = (when not isNull(resourcesOrigin0) -> resourcesOrigin0.isAvatar, false); \"name\" = (when not isNull(resourcesOrigin0) -> resourcesOrigin0.name, \"\"); }"]
            - ["ResourceModel", "currency1", "{ \"quantity\" = quantity1; \"type\" = currencyType1; \"grade\" = (when not isNull(resourcesOrigin1) -> resourcesOrigin1.grade, ArtefactGrade.rare); \"icon\" = (when not isNull(resourcesOrigin1) -> resourcesOrigin1.icon, \"\"); \"iconUrl\" = (when not isNull(resourcesOrigin1) -> resourcesOrigin1.iconUrl, \"\"); \"showGrade\" = (when not isNull(resourcesOrigin1) -> resourcesOrigin1.showGrade, false); \"isAvatar\" = (when not isNull(resourcesOrigin1) -> resourcesOrigin1.isAvatar, false); \"name\" = (when not isNull(resourcesOrigin1) -> resourcesOrigin1.name, \"\"); }"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Shop/ShopSlider/SwipableShopSliderInfo.actions"
        UIDataOnEventComponent0:
            eventName: "PREVIOUS_PRODUCT"
            modelFieldExpression: "currentIndex"
            dataExpression: "when currentIndex - 1 >= 0 -> currentIndex - 1, slider.products.Size() - 1"
        UIDataOnEventComponent1:
            eventName: "TOGGLE_DEBUG"
            modelFieldExpression: "debugMode"
            dataExpression: "not debugMode"
        UIDataOnEventComponent2:
            eventName: "NEXT_PRODUCT"
            modelFieldExpression: "currentIndex"
            dataExpression: "when currentIndex + 1 < slider.products.Size() -> currentIndex + 1, 0"
        UIDataOnEventComponent3:
            eventName: "CHANGED_SELECTED_ITEM"
            modelFieldExpression: "currentIndex"
            dataExpression: "when _event > 0 and _event < slider.products.Size() -> _event, 0"
        UIEventOnDataComponent0:
            watchedDataExpression: "pageCount"
            eventName: "UpdateCurrentIndex"
    children:
    -   class: "UIControl"
        name: "Overlay"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/Overlay/OverlayBasic.yaml"
                args:
                    "headerCurrencies": "[ currency0; currency1; ]"
                    "backContent": "Image"
                    "isFooterOverContent": "true"
                    "fullWidthFooter": "true"
                    "footerHeight": "footerH"
                    "closeButtonIcon": "when hasOpenedOverlays -> \"~res:/Gfx/Lobby/icons/icon_arrow-back\", \"\""
                    "isFooterVisible": "true"
                    "footerContent": "Footer"
                    "wasPushed": "wasPushed"
                    "contentHeight": "600"
                    "rightCornerContent": "when showInfoButtons.Contains(currentProductId) and showInfoButtons[currentProductId] -> InfoButton, null"
                    "titleContent": "null"
                    "hasCustomBg": "false"
                    "content": "Swiper"
                eventActions:
                - ["SHIFT_D", "TOGGLE_DEBUG", ""]
                - ["OVERLAY_CONTENT_HEIGHT_CHANGED", "OVERLAY_CONTENT_HEIGHT_CHANGED", "_event"]
                - ["EXTRA2_ACTION", "MainActionRequested", ""]
                - ["BACK_EVENT", "BACK_EVENT", ""]
    -   class: "UIControl"
        name: "Loading"
        input: true
        exclusiveInput: true
        components:
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            ModalInput: {}
            UIChildComponent0:
                condition: "showLoading"
                prototypePath: "~res:/UI/Screens3/Common/LoadingOverlay.yaml"
        bindings:
        - ["visible", "showLoading"]
    -   class: "UIControl"
        name: "NavigationPanel"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "isGamepad"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "NavigationPanel"
Slots:
-   class: "UIControl"
    name: "Swiper"
    size: [960.000000, 600.000000]
    input: false
    components:
        ClipContent:
            top: false
            bottom: false
        SizePolicy:
            horizontalPolicy: "FixedSize"
            verticalPolicy: "PercentOfParent"
        UISwipeComponent:
            mode: "Page"
            direction: "RightLeft"
            swipeOffsetEvent: "SwipeOffset"
            swipeOffsetEventData: "_leftIndex, _rightIndex, _leftPosition, _rightPosition, _leftProportion, _rightProportion, _isInertion"
            swipeFinishedEvent: "SwipeFinished"
            swipeCancelEvent: "SwipeCanceled"
            pagesLooped: true
            pageChangedEvent: "PageChanged"
            pageChangedEventData: "_pageIndex"
            pageChangingEvent: "PageChanging"
            pageChangingEventData: "_pageIndex"
        UIRepeatComponent:
            control: "~res:/UI/Screens3/Lobby/Shop/ShopSlider/ShopSliderInfoContentWrapper.yaml"
            dataContainer: "slider.products"
            args:
                "isVisible": "_index == leftIndex or _index == rightIndex"
                "proportion": "when _index == leftIndex -> leftProportion, (when _index == rightIndex -> rightProportion, 0.000000)"
                "chest": "when chests.Contains(_item.id) -> chests[_item.id], null"
                "point": "when _index == leftIndex -> leftPosition, (when _index == rightIndex -> rightPosition, farPosition)"
                "screenW": "screenW"
                "width": "int(pageWidth)"
                "app": "app"
                "product": "_item"
                "taxMessage": "taxMessage"
                "session": "session"
            eventActions:
            - ["ON_REWARD_CLICKED", "ON_REWARD_CLICKED", "_event.resource, _event.attachId"]
            - ["ON_MAIN_REWARD_CLICKED", "ON_MAIN_REWARD_CLICKED", "currentProductId"]
            - ["ON_BUY_CLICKED", "ON_BUY_CLICKED", "currentProductId"]
            - ["ON_PRESENT_CLICKED", "ON_PRESENT_CLICKED", "currentProductId"]
    bindings:
    - ["SizePolicy.horizontalValue", "pageWidth"]
    - ["UISwipeComponent.pageCount", "pageCount"]
    - ["UISwipeComponent.currentPageIndex", "currentIndex"]
-   class: "UIControl"
    name: "InfoButton"
    input: false
    components:
        Anchor:
            hCenterAnchorEnabled: true
            vCenterAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfMaxChild"
            verticalPolicy: "PercentOfMaxChild"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/IconButton.yaml"
            args:
                "isBgVisible": "false"
                "type": "eButtonType.OPTIONAL_DARK"
                "sound": "eButtonSound.OPEN"
                "image": "\"~res:/Gfx/Lobby/icons/icon_info_xs\""
            eventActions:
            - ["ON_CLICK_BUTTON", "ON_INFO_CLICKED", "currentProductId"]
-   class: "UIControl"
    name: "Footer"
    size: [1232.000000, 122.000000]
    input: false
    components:
        Anchor:
            hCenterAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "when parent < 1200 -> 832, 1072"
            verticalPolicy: "Formula"
            verticalFormula: "childrenSum + 24"
    children:
    -   class: "UIControl"
        name: "ButtonsWrapper"
        input: false
        components:
            LinearLayout:
                spacing: 15.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfMaxChild"
        bindings:
        - ["visible", "pageCount > 1"]
        children:
        -   class: "UIControl"
            name: "PreviousProductButton"
            input: false
            components:
                Anchor:
                    leftAnchorEnabled: true
                    leftAnchor: 24.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfFirstChild"
                    verticalPolicy: "PercentOfFirstChild"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Button/TextIconButton.yaml"
                    args:
                        "icon": "\"~res:/Gfx/Lobby/icons/icon_arrow_s\""
                        "iconColorStyle": "\"white-wild-sand-bg\""
                        "iconIsLeft": "true"
                        "caption": "localize(\"#hangar:NewsPopup/Back\")"
                        "type": "eButtonType.OPTIONAL_DARK"
                        "size": "eButtonSize.NORMAL"
                        "sound": "eButtonSound.CHOOSE"
                        "enabled": "true"
                        "locked": "false"
                        "iconFlip": "FLIP_HORIZONTAL"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "PREVIOUS_PRODUCT", ""]
        -   class: "UIControl"
            name: "PaginatorWrapper"
            input: false
            components:
                Anchor:
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    horizontalMin: 100.000000
                    verticalPolicy: "PercentOfMaxChild"
            children:
            -   class: "UIControl"
                name: "Paginator"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                    Background:
                        usePostProcessedSprite: true
                    UIPostProcessTextureComponent0:
                        materialPath: "~res:/Materials.custom/2d.Textured.Blur.material"
                        needClearAlphaAfterRender: true
                        scale: 0.500000
                        useVirtualCoordinateSystem: true
                        minFilter: "Linear"
                        magFilter: "Linear"
                    UIPostProcessTextureComponent1:
                        materialPath: "~res:/Materials.custom/2d.Textured.HBlur.material"
                        scale: 0.500000
                        useVirtualCoordinateSystem: true
                        minFilter: "Linear"
                        magFilter: "Linear"
                    UIPostProcessTextureComponent2:
                        materialPath: "~res:/Materials.custom/2d.Textured.UpscaleClamp.material"
                        scale: 0.500000
                        useVirtualCoordinateSystem: true
                        minFilter: "Linear"
                        magFilter: "Linear"
                    UIRoundedCornersComponent:
                        radius: "8"
                    SizePolicy:
                        horizontalPolicy: "PercentOfMaxChild"
                        verticalPolicy: "PercentOfMaxChild"
                    UIChildComponent0:
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Paginator/Paginator.yaml"
                        args:
                            "selectedItem": "currentIndex"
                            "pointCount": "pageCount"
                        eventActions:
                        - ["CHANGED_SELECTED_ITEM", "CHANGED_SELECTED_ITEM", "_event"]
        -   class: "UIControl"
            name: "NextProductButton"
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                    rightAnchor: 24.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Button/TextIconButton.yaml"
                    args:
                        "icon": "\"~res:/Gfx/Lobby/icons/icon_arrow_s\""
                        "iconColorStyle": "\"white-wild-sand-bg\""
                        "iconIsLeft": "false"
                        "caption": "localize(\"#hangar:NewsPopup/Next\")"
                        "type": "eButtonType.OPTIONAL_DARK"
                        "size": "eButtonSize.NORMAL"
                        "sound": "eButtonSound.CHOOSE"
                        "enabled": "true"
                        "locked": "false"
                        "iconFlip": "0"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "NEXT_PRODUCT", ""]
        -   class: "UIControl"
            name: "spacer"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
-   class: "UIControl"
    name: "NavigationPanel"
    input: false
    components:
        LinearLayout:
            spacing: 24.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "Back"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/Back\""
                    "icon": "eNintendoSwitchControls.B"
    -   class: "UIControl"
        name: "Information"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "buttonCaption"
                    "icon": "eNintendoSwitchControls.Y"
-   class: "UIControl"
    name: "Image"
    size: [1000.000000, 1000.000000]
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "ImageContentLeft"
        input: false
        components:
            Background:
                drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
            UIOpacityComponent: {}
            UIUrlImageComponent: {}
            Anchor:
                leftAnchorEnabled: true
                topAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 1200.000000
                verticalPolicy: "PercentOfContent"
        bindings:
        - ["UIOpacityComponent.opacity", "leftProportion"]
        - ["UIUrlImageComponent.imageUrl", "leftBgUrl"]
    -   class: "UIControl"
        name: "ImageContentRight"
        input: false
        components:
            Background:
                drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
            UIOpacityComponent: {}
            UIUrlImageComponent: {}
            Anchor:
                leftAnchorEnabled: true
                topAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 1200.000000
                verticalPolicy: "PercentOfContent"
        bindings:
        - ["UIOpacityComponent.opacity", "rightProportion"]
        - ["UIUrlImageComponent.imageUrl", "rightBgUrl"]
