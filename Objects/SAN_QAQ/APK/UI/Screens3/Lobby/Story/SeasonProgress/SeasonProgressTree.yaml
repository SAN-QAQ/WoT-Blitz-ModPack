Header:
    version: 161
ImportedPackages:
- "~res:/UI/Screens3/Common/BlurModified.yaml"
- "~res:/UI/Screens3/Common/HorizontalScrollBar.yaml"
- "~res:/UI/Screens3/Common/VerticalScrollBar.yaml"
- "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
- "~res:/UI/Screens3/Lobby/Common/IconButtonNoBlur.yaml"
- "~res:/UI/Screens3/Lobby/Common/VehicleParamsPanel/Items/Section.yaml"
Prototypes:
-   class: "UIControl"
    name: "SeasonProgressTree"
    size: [1386.000000, 640.000000]
    input: false
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Story/SeasonProgress/SeasonProgressTree.animation"
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        UIDataParamsComponent:
            params:
            - ["AppDataModel", "app", "null", "{ }"]
            - ["SessionDataModel", "session", "null", "{ }"]
            - ["StoryScreenViewModel", "viewModel", "null", "{ \"aggregatedStories\" = [ ]; \"selectedStory\" = { \"name\" = \"season_2\"; }; \"treeViewModel\" = { \"groups\" = { \"common\" = { \"steps\" = { 1 = { \"step\" = { \"id\" = 1; \"rewards\" = [ { \"type\" = ResourceType.vehicle; }; ]; }; \"isSelected\" = true; \"isHighlighted\" = false; }; 2 = { \"step\" = { \"id\" = 2; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 3 = { \"step\" = { \"id\" = 3; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = true; }; 4 = { \"step\" = { \"id\" = 4; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 5 = { \"step\" = { \"id\" = 5; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = true; }; 6 = { \"step\" = { \"id\" = 6; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 7 = { \"step\" = { \"id\" = 7; \"rewards\" = [ { \"type\" = ResourceType.vehicle; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = true; }; 8 = { \"step\" = { \"id\" = 8; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 9 = { \"step\" = { \"id\" = 9; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = true; }; 10 = { \"step\" = { \"id\" = 10; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 11 = { \"step\" = { \"id\" = 11; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 12 = { \"step\" = { \"id\" = 12; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 13 = { \"step\" = { \"id\" = 13; \"rewards\" = [ { \"type\" = ResourceType.vehicle; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 14 = { \"step\" = { \"id\" = 14; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 15 = { \"step\" = { \"id\" = 15; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 16 = { \"step\" = { \"id\" = 16; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 17 = { \"step\" = { \"id\" = 17; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; 18 = { \"step\" = { \"id\" = 18; \"rewards\" = [ { \"type\" = ResourceType.module; }; ]; }; \"isSelected\" = false; \"isHighlighted\" = false; }; }; }; }; }; }"]
            events:
            - "SHOW_STEP_INFO(int id)"
            - "SHOW_CHEST_INFO(int id)"
            - "SELECT_STEP(int id)"
            - "SELECT_COMPOSITE_STEP(string name)"
            - "PARALLAX_SHIFT(float shift)"
        UIDataLocalVarsComponent:
            data:
            - ["bool", "isInited", "false"]
            - ["bool", "isScrollWithBgAlign", "false"]
            - ["int", "tankParamsIndex", "0"]
            - ["int", "contentPadding", "40"]
            - ["int", "stepHeight", "112"]
            - ["int", "stepVehicleWidth", "240"]
            - ["int", "stepModuleWidth", "64"]
            - ["float", "bgWidth", "3187"]
            - ["float", "bgHeight", "512"]
            - ["int", "totalStepsCount", "viewModel.treeViewModel.groups.common.steps.Size()"]
            - ["int", "totalTanksCount", "viewModel.season.tanks.Size()"]
            - ["int", "totalModulesCount", "totalStepsCount - totalTanksCount"]
            - ["int", "lastTankModulesCount", "viewModel.season.tanks[totalTanksCount - 1].modules.Size()"]
            - ["float", "minParallaxK", "1.300000"]
            - ["float", "parallaxK", "0.000000"]
            - ["float", "bgLastModule", "0.800000"]
            - ["float", "shift", "0.000000"]
            - ["float", "bgShift", "0.000000"]
            - ["float", "stepsShift", "0.000000"]
            - ["bool", "isBgScrolling", "false"]
            - ["bool", "isScrollingInterrupted", "false"]
            - ["int", "bgScrollTankIndex", "0"]
            - ["int", "progressTankIndex", "viewModel.season.cacheProgress.tankIndex"]
            - ["int", "progressEntityIndex", "viewModel.season.cacheProgress.entityIndex"]
            - ["float", "progressPercent", "viewModel.season.cacheProgress.progressPercent"]
            - ["int", "progressSummaryProxy", "viewModel.season.cacheProgress.summaryProxy"]
            - ["int", "nextProgressTankIndex", "progressTankIndex"]
            - ["int", "nextProgressEntityIndex", "progressEntityIndex"]
            - ["bool", "isProgressAnimationActive", "false"]
        UIDataLocalBindingsComponent:
            data:
            - ["float", "contentWidth", "screenWidth - (when not viewModel.isFullScreen -> 170, 0)"]
            - ["SeasonViewModel", "season", "viewModel.season"]
            - ["ResourceDetailed", "proxy", "viewModel.selectedStory.stage.proxies[viewModel.season.proxyName]"]
            - ["int", "totalStepsCount", "viewModel.treeViewModel.groups.common.steps.Size()"]
            - ["SeasonTank", "lastTank", "season.tanks[viewModel.season.tanks.Size() - 1]"]
            - ["int", "lastStepId", "lastTank.modules[lastTank.modules.Size() - 1].stepId"]
            - ["StoryStepModel", "lastStep", "when viewModel.treeViewModel.groups.common.steps.Contains(lastStepId) -> viewModel.treeViewModel.groups.common.steps[lastStepId].step, viewModel.treeViewModel.groups.common.steps[1].step"]
            - ["StoryStepModel", "selectedStep", "when isNull(viewModel.treeViewModel.selectedStep) -> lastStep, viewModel.treeViewModel.selectedStep.step"]
            - ["int", "selectedStepCurrent", "when isNull(selectedStep) -> 0, selectedStep.isFinished -> selectedStep.price[0].stuff.quantity, proxy.stuff.quantity"]
            - ["int", "selectedStepTotal", "when isNull(selectedStep) -> 0, selectedStep.isFinished -> selectedStep.price[0].stuff.quantity, selectedStep.net.price.Empty() -> selectedStep.gross.price[viewModel.season.proxyName].stuff.quantity - viewModel.season.proxySpent, selectedStep.net.price[viewModel.season.proxyName].stuff.quantity + proxy.stuff.quantity"]
            - ["bool", "isClaimButtonVisible", "progressSummaryProxy >= selectedStepTotal"]
            - ["bool", "isStepReadyToComplete", "when not isNull(selectedStep) -> selectedStep.net.price.Empty() and not selectedStep.isFinished, false"]
            - ["ResourceDetailed", "selectedReward", "when not isNull(selectedStep) -> selectedStep.rewards[0], lastReward"]
            - ["bool", "isVehicleSelected", "selectedReward.type == ResourceType.vehicle"]
            - ["bool", "isModuleSelected", "selectedReward.type == ResourceType.module"]
            - ["int", "selectedTankIndex", "when isNull(selectedStep) -> 0, viewModel.season.tankIndexByStepId[selectedStep.id]"]
            - ["int", "selectedEntityIndex", "when isNull(selectedStep) -> 0, viewModel.season.tanks[selectedTankIndex].entityIndexByStepId[selectedStep.id]"]
            - ["int", "selectedTankModulesCount", "season.tanks[selectedTankIndex].modules.Size()"]
            - ["SeasonEntity", "selectedEntity", "when selectedEntityIndex == 0 -> viewModel.season.tanks[selectedTankIndex].info, viewModel.season.tanks[selectedTankIndex].modules[selectedEntityIndex - 1]"]
            - ["int", "progressTankModulesCount", "season.tanks[progressTankIndex].modules.Size()"]
            - ["bool", "isFinishedProgress", "season.realProgress.tankIndex >= season.tanks.Size() or (season.realProgress.tankIndex + 1 == season.tanks.Size() and season.realProgress.entityIndex == season.tanks[season.realProgress.tankIndex].modules.Size() and season.realProgress.progressPercent >= 1.000000)"]
            - ["bool", "needProgressAnimation", "progressTankIndex * 100 + progressEntityIndex + progressPercent * 0.500000 + 0.000001 < season.realProgress.tankIndex * 100 + season.realProgress.entityIndex + season.realProgress.progressPercent * 0.500000"]
            - ["bool", "needResetCache", "progressTankIndex * 100 + progressEntityIndex + progressPercent * 0.500000 > season.realProgress.tankIndex * 100 + season.realProgress.entityIndex + season.realProgress.progressPercent * 0.500000 or progressSummaryProxy > season.realProgress.summaryProxy"]
            - ["int", "needProgressStepsCount", "when needProgressAnimation -> season.realProgress.stepId - season.cacheProgress.stepId + 1, 0"]
            - ["float", "stepAnimationTime", "0.800000"]
            - ["float", "totalAnimationTime", "min(5.000000, needProgressStepsCount * stepAnimationTime)"]
            - ["int", "stepSpacing", "when screenHeight > 1000 -> 40, 28"]
            - ["int", "stepsWidth", "totalTanksCount * (stepSpacing + stepVehicleWidth) + totalModulesCount * (stepSpacing + stepModuleWidth) + 2 * contentPadding - stepSpacing"]
            - ["float", "parallaxK", "1.000000 * screenHeight / bgHeight * bgWidth / stepsWidth"]
            - ["float", "parallaxScale", "when parallaxK > minParallaxK -> 1.000000, minParallaxK / parallaxK"]
            - ["float", "bgScale", "parallaxScale * screenHeight / bgHeight"]
            - ["float", "progressTankWidthWithSteps", "progressTankModulesCount * (stepModuleWidth + stepSpacing) + stepVehicleWidth + stepSpacing"]
            - ["float", "selectedTankWidthWithSteps", "selectedTankModulesCount * (stepModuleWidth + stepSpacing) + stepVehicleWidth + stepSpacing"]
            - ["float", "stepsEnding", "max(0, contentWidth - contentPadding * 2 - (lastTankModulesCount * (stepModuleWidth + stepSpacing) + stepVehicleWidth))"]
            - ["float", "stepsTotalWidth", "stepsWidth + stepsEnding"]
            - ["float", "scrollConvertStepsToBg", "1.000000 * (screenWidth - bgWidth * bgScale) / (contentWidth - stepsTotalWidth)"]
            - ["float", "scrollConvertBgToSteps", "1.000000 * (contentWidth - stepsTotalWidth) / (screenWidth - bgWidth * bgScale)"]
            - ["float", "scrollBgTankDelta", "bgWidth * bgScale / totalTanksCount"]
            - ["float", "scrollBgModuleDelta", "(scrollBgTankDelta - contentWidth * (when selectedTankIndex + 1 == totalTanksCount -> 1.000000, bgLastModule)) / selectedTankModulesCount"]
            - ["float", "scrollBgForSelectedStep", "max(0, min(bgWidth * bgScale - screenWidth, scrollBgTankDelta * selectedTankIndex + selectedEntityIndex * scrollBgModuleDelta))"]
            - ["float", "scrollBgForLastTankStep", "max(0, min(bgWidth * bgScale - screenWidth, scrollBgTankDelta * selectedTankIndex + selectedTankModulesCount * scrollBgModuleDelta))"]
            - ["float", "scrollStepsForSelectedStepZero", "selectedEntity.tanksBefore * (stepVehicleWidth + stepSpacing) + (selectedEntity.modulesBefore) * (stepModuleWidth + stepSpacing) - (when selectedEntityIndex == 0 -> 0, (selectedEntityIndex - 1) * (stepModuleWidth + stepSpacing) + (stepVehicleWidth + stepSpacing))"]
            - ["float", "scrollStepsModuleDelta", "(scrollBgForLastTankStep * scrollConvertBgToSteps - scrollStepsForSelectedStepZero) / selectedTankModulesCount"]
            - ["float", "scrollStepsForSelectedStep", "scrollStepsForSelectedStepZero + scrollStepsModuleDelta * selectedEntityIndex"]
            - ["float", "rightPanelYSize", "when screenHeight >= 1080 -> 520, screenHeight >= 800 -> 480, screenHeight >= 680 -> 448, 408"]
            - ["float", "rightPanelSpacing", "when screenHeight >= 1080 -> 20, screenHeight >= 800 -> 10, 6"]
            - ["float", "rightPanelParamSpacing", "when screenHeight >= 1080 -> 20, screenHeight >= 800 -> 16, 12"]
        UIDataLocalControlComponent0:
            name: "header"
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Headers/HeaderContent.yaml"
            args:
                "leftContent": "HeaderLeftContent"
                "rightContent": "HeaderRightContent"
                "button": "null"
                "backButton": "when viewModel.isFullScreen -> backButton, null"
        UIDataLocalControlComponent1:
            name: "backButton"
            prototypePath: "~res:/UI/Screens3/Lobby/Common/BackButton.yaml"
            eventActions:
            - ["ON_CLICK_BUTTON", "BACK_EVENT", ""]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Story/SeasonProgress/SeasonProgressTree.actions"
        UIDataOnEventComponent0:
            eventName: "ON_SELECT_TAB"
            modelFieldExpression: "tankParamsIndex"
            dataExpression: "_event"
        UIEventOnDataComponent0:
            watchedDataExpression: "needProgressAnimation"
            ifExpression: "needProgressAnimation and not season.isWaitingForStepCompletion"
            eventName: "START_PROGRESS_ANIMATION"
        UIEventOnDataComponent1:
            watchedDataExpression: "needResetCache"
            ifExpression: "not needProgressAnimation"
            eventName: "RESET_PROGRESS"
        UIEventOnDataComponent2:
            watchedDataExpression: "season.isWaitingForStepCompletion"
            ifExpression: "season.isWaitingForStepCompletion == false"
            eventName: "RESET_PROGRESS"
    children:
    -   class: "UIControl"
        name: "BgWithParallax"
        input: false
        components:
            ClipContent: {}
            Anchor:
                rightAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "when not viewModel.isFullScreen -> parent + 170 + safeAreaInsets.left, parent"
                verticalPolicy: "PercentOfParent"
        children:
        -   class: "UIControl"
            name: "Content"
            input: false
            components:
                Anchor:
                    leftAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["Anchor.leftAnchor", "when isInited -> (when isScrollingInterrupted -> shift, bgShift), isScrollWithBgAlign -> -scrollBgForSelectedStep, -scrollStepsForSelectedStep * scrollConvertStepsToBg"]
            children:
            -   class: "UIControl"
                name: "ParallaxBg"
                input: false
                components:
                    Anchor:
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        verticalPolicy: "FixedSize"
                    ScalePolicy:
                        horizontalFormula: "bgScale"
                        verticalFormula: "bgScale"
                    UILayoutEventComponent:
                        sizeChangedEvent: "BG_SIZE_CHANGED"
                        sizeChangedEventData: "_size"
                    UIChildComponent0:
                        childType: "kOldExpression"
                        control: "\"~res:/UI/Screens3/Lobby/Story/SeasonProgress/seasons/\" + viewModel.selectedStory.name + \"/BgWithFx.yaml\""
                        args:
                            "resources": "viewModel.selectedStory.resources"
                bindings:
                - ["SizePolicy.horizontalValue", "bgWidth * bgScale"]
                - ["SizePolicy.verticalValue", "bgHeight * bgScale"]
        -   class: "UIControl"
            name: "Fade"
            visible: true
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIControl"
                name: "LeftTop"
                position: [-499.000000, -400.000000]
                angle: 45.000000
                input: false
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_horizontal_0-100"
                        spriteModification: ["FLIP_HORIZONTAL"]
                        color: [0.000000, 0.000000, 0.000000, 1.000000]
                    UIOpacityComponent:
                        opacity: 0.500000
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: 400.000000
                        topAnchorEnabled: true
                        topAnchor: -400.000000
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 550.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 1500.000000
            -   class: "UIControl"
                name: "Top"
                input: false
                classes: "black-25-bg"
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_vertical_0-100"
                        spriteModification: ["FLIP_VERTICAL"]
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "FixedSize"
                        verticalValue: 72.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "Left"
                input: false
                classes: "black-bg"
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_horizontal_0-100"
                        spriteModification: ["FLIP_HORIZONTAL"]
                        perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
                    UIOpacityComponent:
                        opacity: 0.000000
                    Anchor:
                        leftAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        horizontalValue: 30.000000
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "Right"
                input: false
                classes: "black-bg"
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_horizontal_0-100"
                        spriteModification: []
                        perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
                    UIOpacityComponent:
                        opacity: 0.000000
                    Anchor:
                        rightAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        horizontalValue: 30.000000
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "Bottom"
                visible: true
                input: false
                classes: "black-bg"
                components:
                    Background:
                        drawType: "DRAW_SCALE_TO_RECT"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_radial-half_horizontal"
                        spriteModification: []
                        perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
                    UIOpacityComponent:
                        opacity: 0.300000
                    Anchor:
                        hCenterAnchorEnabled: true
                        bottomAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        horizontalValue: 300.000000
                        verticalPolicy: "PercentOfParent"
                        verticalValue: 40.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
    -   class: "UIControl"
        name: "Content"
        input: false
        components:
            ClipContent: {}
            Anchor:
                leftAnchorEnabled: true
                rightAnchorEnabled: true
                topAnchorEnabled: true
                bottomAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIAnchorSafeAreaComponent: {}
        bindings:
        - ["ClipContent.left", "not viewModel.isFullScreen"]
        - ["UIAnchorSafeAreaComponent.leftSafeInset", "when viewModel.isFullScreen -> eInsetType.INSET, eInsetType.NONE"]
        children:
        -   class: "UIControl"
            name: "StepsWithScroll"
            input: false
            components:
                Anchor:
                    bottomAnchorEnabled: true
                LinearLayout:
                    orientation: "TopDown"
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIControl"
                name: "ScrollArea"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                children:
                -   class: "UIScrollView"
                    name: "StepsScrollView"
                    visible: true
                    autoUpdate: true
                    centerContent: true
                    components:
                        ClipContent:
                            enabled: false
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    children:
                    -   class: "UIScrollViewContainer"
                        name: "scrollContainerControl"
                        refreshStylesOnInteract: false
                        scrollDirection: "kHorizontal"
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfMaxChild"
                                verticalPolicy: "PercentOfParent"
                            UILayoutEventComponent:
                                positionChangedEvent: "SCROLL_STEPS_POSITION_CHANGED"
                                positionChangedEventData: "_position"
                            UIInputEventComponent:
                                onTouchDown: "INTERRUPT_SCROLL"
                            UIChildComponent0:
                                childType: "kControl"
                                condition: "true"
                                control: "Steps"
                -   prototype: "HorizontalScrollBar/HorizontalScrollBar"
                    name: "HorizontalScrollBar"
                    visible: false
                    components:
                        UIScrollBarComponent:
                            delegate: "../ScrollView"
        -   class: "UIControl"
            name: "Header"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 72.000000
            children:
            -   class: "UIControl"
                name: "Content"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Headers/Header.yaml"
                        args:
                            "bgStyle": "\"\""
                            "content": "header"
                            "needSafeArea": "false"
                            "isFullScreen": "true"
        -   class: "UIControl"
            name: "Panels"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "Formula"
                    verticalFormula: "parent - 180"
            children:
            -   class: "UIControl"
                name: "LeftPanel"
                input: false
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        topAnchorEnabled: true
                        topAnchor: 12.000000
                    LinearLayout:
                        orientation: "TopDown"
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 300.000000
                        verticalPolicy: "PercentOfChildrenSum"
                    UIChildComponent0:
                        childType: "kControl"
                        control: "LeftPanel"
                bindings:
                - ["Anchor.leftAnchor", "contentPadding"]
            -   class: "UIControl"
                name: "RightPanel"
                input: false
                components:
                    Anchor:
                        rightAnchorEnabled: true
                        vCenterAnchorEnabled: true
                        vCenterAnchor: -36.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        childType: "kControl"
                        control: "RightPanel"
                bindings:
                - ["Anchor.rightAnchor", "contentPadding"]
Slots:
-   class: "UIControl"
    name: "HeaderLeftContent"
    input: false
    components:
        LinearLayout:
            spacing: 8.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "BackButton"
        visible: false
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/BackButton.yaml"
                eventActions:
                - ["ON_CLICK_BUTTON", "BACK_EVENT", ""]
    -   class: "UIControl"
        name: "EventName"
        input: false
        classes: "t-subtitle regular color=white-wild-sand-text"
        components:
            UITextComponent:
                colorInheritType: "COLOR_IGNORE_PARENT"
            Anchor:
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
        bindings:
        - ["UITextComponent.text", "localize(viewModel.selectedStory.resources.strings[\"header\"])"]
    -   class: "UIControl"
        name: "Timer"
        visible: true
        input: false
        components:
            Anchor:
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: ""
                prototypePath: "~res:/UI/Screens3/Lobby/Common/Timer.yaml"
                args:
                    "colorStyle": "\"white-wild-sand-50\""
                    "serverTime": "session.serverTime"
                    "time": "viewModel.selectedStory.stage.finishTime"
                    "customIcon": "when viewModel.selectedStory.stage.type == eStageType.PROCESS -> \"~res:/Gfx/Lobby/icons/icon_battles_xs\", viewModel.selectedStory.stage.type == eStageType.BUY -> \"~res:/Gfx/Lobby/icons/icon_coin_s\", viewModel.selectedStory.stage.type == eStageType.INFORM -> \"~res:/Gfx/Lobby/icons/icon_info_xs\", \"\""
                    "alertTime": "3600L"
-   class: "UIControl"
    name: "HeaderRightContent"
    size: [32.000000, 48.000000]
    input: false
    components:
        LinearLayout:
            spacing: 8.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "ProxiesPanel"
        input: false
        components:
            LinearLayout:
                spacing: 8.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfParent"
        children:
        -   class: "UIControl"
            name: "Proxies"
            input: false
            components:
                Anchor:
                    vCenterAnchorEnabled: true
                LinearLayout:
                    spacing: 8.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfParent"
                UIRepeatComponent:
                    control: "~res:/UI/Screens3/Lobby/StatsInfoPanelItem.yaml"
                    dataContainer: "viewModel.selectedStory.stage.proxies"
                    args:
                        "enabled": "viewModel.selectedStory.stage.type == eStageType.PROCESS"
                        "serverTime": "session.serverTime"
                        "detailedResource": "_item"
                        "isVisible": "true"
                    eventActions:
                    - ["ON_STATS_ITEM_PRESSED", "SHOW_SEASON_OVERLAY", ""]
    -   class: "UIControl"
        name: "StatsPanel"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfParent"
            UIChildComponent0:
                childType: "kPrototype"
                condition: "true"
                prototypePath: "~res:/UI/Screens3/Lobby/StatsInfoPanelPrototype.yaml"
                args:
                    "showFreeXp": "false"
                    "showCredits": "false"
                    "showPremium": "false"
                    "statsData": "session.stats"
                eventActions:
                - ["SHOP_BUTTON", "SHOP_BUTTON", "_event.requiredResource"]
    -   class: "UIControl"
        name: "Spacer"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "FixedSize"
                verticalPolicy: "PercentOfParent"
        bindings:
        - ["SizePolicy.horizontalValue", "contentPadding - 20"]
-   class: "UIControl"
    name: "Steps"
    input: false
    components:
        Anchor:
            leftAnchorEnabled: true
            bottomAnchorEnabled: true
        Background:
            usePostProcessedSprite: true
        UIRoundedCornersComponent:
            radius: "8"
        UIPostProcessTextureComponent0:
            materialPath: "~res:/Materials.custom/2d.Textured.Blur.material"
            needClearAlphaAfterRender: true
            scale: 0.500000
            useVirtualCoordinateSystem: true
            minFilter: "Linear"
            magFilter: "Linear"
        UIPostProcessTextureComponent1:
            materialPath: "~res:/Materials.custom/2d.Textured.HBlur.material"
            scale: 0.500000
            useVirtualCoordinateSystem: true
            minFilter: "Linear"
            magFilter: "Linear"
        UIPostProcessTextureComponent2:
            materialPath: "~res:/Materials.custom/2d.Textured.UpscaleClamp.material"
            scale: 0.500000
            useVirtualCoordinateSystem: true
            minFilter: "Linear"
            magFilter: "Linear"
        LinearLayout: {}
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
        UIRepeatComponent:
            control: "~res:/UI/Screens3/Lobby/Story/SeasonProgress/SeasonProgressStep.yaml"
            dataContainer: "viewModel.treeViewModel.groups.common.steps"
            args:
                "stepVehicleWidth": "stepVehicleWidth"
                "stepModuleWidth": "stepModuleWidth"
                "stepHeight": "stepHeight"
                "stepSpacing": "stepSpacing"
                "contentPadding": "contentPadding"
                "step": "_item"
                "season": "viewModel.season"
                "progressTankIndex": "progressTankIndex"
                "progressEntityIndex": "progressEntityIndex"
                "progressPercent": "progressPercent"
                "isProgressAnimating": "isProgressAnimationActive"
            eventActions:
            - ["SHOW_TANK_PREVIEW", "SHOW_TANK_PREVIEW", "_event.tankIndex, _event.entityIndex"]
            - ["CLAIM_STEP", "CLAIM_STEP", "_event.stepId"]
            - ["SELECT_STEP", "SCROLL_TO_STEP", "_event.tankIndex, _event.entityIndex"]
            - ["SHOW_STEP_INFO", "SHOW_STEP_INFO", "_event.stepId"]
            elementNameExpression: "\"Step\" + str(_item.step.id)"
        UIChildComponent0:
            childType: "kControl"
            control: "StepsEnding"
    bindings:
    - ["Anchor.bottomAnchor", "max(36, min(screenHeight - 720 + 36, 80))"]
    - ["LinearLayout.padding", "contentPadding - stepSpacing * 0.500000"]
    children:
    -   class: "UIControl"
        name: "ScrollAnchor"
        input: false
        components:
            Anchor:
                leftAnchorEnabled: true
                topAnchorEnabled: true
                topAnchor: -20.000000
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 4.000000
                verticalPolicy: "FixedSize"
                verticalValue: 4.000000
        bindings:
        - ["Anchor.leftAnchor", "stepsShift + contentWidth * 0.500000"]
-   class: "UIControl"
    name: "StepsEnding"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "FixedSize"
            verticalPolicy: "PercentOfParent"
    bindings:
    - ["SizePolicy.horizontalValue", "stepsEnding"]
-   class: "UIControl"
    name: "LeftPanel"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
    children:
    -   class: "UIControl"
        name: "SeasonInfo"
        input: false
        components:
            LinearLayout:
                orientation: "TopDown"
                spacing: 20.000000
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfChildrenSum"
        children:
        -   class: "UIControl"
            name: "NameAndVideoContainer"
            input: false
            components:
                LinearLayout:
                    spacing: 8.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfFirstChild"
            children:
            -   class: "UIControl"
                name: "NameWrapper"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfLastChild"
                        verticalPolicy: "FixedSize"
                        verticalValue: 40.000000
                children:
                -   class: "UIControl"
                    name: "Bg"
                    input: false
                    components:
                        Background:
                            drawType: "DRAW_ALIGNED"
                            sprite: "~res:/Gfx/Lobby/events/2022-Helloween/bg_text-decoration_m"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                -   class: "UIControl"
                    name: "Title"
                    input: false
                    classes: "t-title bold yellow-submarine-text align-left"
                    components:
                        UITextComponent:
                            multiline: "MULTILINE_ENABLED"
                        UIShadowComponent:
                            blurType: "Gauss"
                            color: [1.000000, 0.164706, 0.000000, 1.000000]
                            indent: 10
                            canBeDelayed: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfContent"
                            horizontalMax: 399.000000
                            verticalPolicy: "PercentOfContent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Font.style.yaml"
                    bindings:
                    - ["UITextComponent.text", "localize(viewModel.selectedStory.resources.strings[\"title\"])"]
            -   class: "UIControl"
                name: "PlayVideoButton"
                pivot: [0.500000, 0.500000]
                classes: "hoverable touchable-self button-open-sound"
                components:
                    Anchor:
                        vCenterAnchorEnabled: true
                        vCenterAnchor: 1.000000
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 40.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 40.000000
                    UIInputEventComponent:
                        onTouchUpInside: "ON_SHOW_STORY_INTRO_VIDEO"
                    Sound: {}
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Common/Touch.style.yaml;~res:/UI/Screens3/Common/Hover.style.yaml;~res:/UI/Screens3/ButtonSound.style.yaml"
                bindings:
                - ["visible", "when viewModel.season.videoLoaded.Contains(\"videoStart\") -> viewModel.season.videoLoaded[\"videoStart\"], false"]
                children:
                -   class: "UIControl"
                    name: "Bg"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    children:
                    -   prototype: "BlurModified/BlurModified"
                        name: "Blur"
                        components:
                            UIDataParamsComponent:
                                args:
                                    "bgStyle": "\"white-wild-sand-15-bg\""
                                    "roundCorner": "\"20\""
                -   class: "UIControl"
                    name: "Hover"
                    size: [32.000000, 32.000000]
                    input: false
                    classes: "hover white-wild-sand-15-bg"
                    components:
                        Background: {}
                        UIOpacityComponent: {}
                        UIRoundedCornersComponent:
                            radius: "20"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Common/Hover.style.yaml"
                -   class: "UIControl"
                    name: "Icon"
                    size: [32.000000, 32.000000]
                    input: false
                    classes: "yellow-submarine-bg"
                    components:
                        Background:
                            drawType: "DRAW_ALIGNED"
                            sprite: "~res:/Gfx/Lobby/icons/icon_play_s"
                        UIShadowComponent:
                            blurType: "Gauss"
                            color: [1.000000, 0.164706, 0.000000, 1.000000]
                            indent: 10
                            canBeDelayed: true
                        Anchor:
                            hCenterAnchorEnabled: true
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfContent"
                            verticalPolicy: "PercentOfContent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
        -   class: "UIControl"
            name: "Description"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfChildrenSum"
            children:
            -   class: "UIControl"
                name: "Glow"
                visible: true
                input: false
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_text-glow"
                        color: [0.000000, 0.000000, 0.000000, 1.000000]
                    UIOpacityComponent:
                        opacity: 0.600000
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        horizontalValue: 160.000000
                        verticalPolicy: "PercentOfParent"
                        verticalValue: 400.000000
            -   class: "UIControl"
                name: "Text"
                input: false
                classes: "t-subtitle regular color=white-wild-sand-text"
                components:
                    RichContent:
                        baseClasses: "t-subtitle regular color=white-wild-sand-text"
                    RichContentAliases0:
                        aliases:
                        - ["proxy", "<control control=\"~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml\" args1=\"resource=proxy\" args2=\"hideGrade=true\" args3=\"currencySize=eCurrencySize.HUGE_REGULAR\" args4=\"forceHideValue=true\"/>"]
                        - ["orange", "<span class=\"t-subtitle bold color=orange-orange-peel-text\" />"]
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        horizontalMax: 380.000000
                        verticalPolicy: "PercentOfChildrenSum"
                    FlowLayout:
                        hSpacing: 4.000000
                        vSpacing: 4.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
                bindings:
                - ["RichContent.text", "localize(viewModel.selectedStory.resources.strings[\"description\"])"]
        -   class: "UIControl"
            name: "InfoButton"
            input: true
            components:
                LinearLayout:
                    spacing: 4.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildComponent0:
                    condition: "viewModel.selectedStory.stage.type == eStageType.PROCESS"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Button/OrangeButton.yaml"
                    args:
                        "caption": "localize(\"season_event_1/Event/Button\")"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "SHOW_SEASON_OVERLAY", ""]
-   class: "UIControl"
    name: "RightPanel"
    size: [260.000000, 400.000000]
    input: false
    components:
        Anchor:
            topAnchorEnabled: true
            topAnchor: -16.000000
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "lastChild + 50"
            verticalPolicy: "FixedSize"
    bindings:
    - ["SizePolicy.verticalValue", "rightPanelYSize"]
    children:
    -   class: "UIControl"
        name: "Blur"
        input: false
        components:
            UIPostProcessSourceComponent0:
                id: "RewardMaskedBlur"
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        children:
        -   prototype: "BlurModified/BlurModified"
            name: "Blur"
    -   class: "UIControl"
        name: "Bg"
        input: false
        classes: "grey-shark-25-bg"
        components:
            Background:
                drawType: "DRAW_STRETCH_BOTH"
                sprite: "~res:/Gfx/Lobby/backgrounds/bg_r8"
                leftRightStretchCap: 8.000000
                topBottomStretchCap: 8.000000
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
    -   class: "UIControl"
        name: "Content"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
                padding: "8; 12"
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 280.000000
                verticalPolicy: "PercentOfParent"
        bindings:
        - ["LinearLayout.spacing", "rightPanelSpacing"]
        children:
        -   class: "UIControl"
            name: "Header"
            input: false
            components:
                LinearLayout:
                    dynamicSpacing: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 48.000000
            children:
            -   class: "UIControl"
                name: "VehicleInfo"
                input: false
                components:
                    Anchor:
                        vCenterAnchorEnabled: true
                        vCenterAnchor: -4.000000
                    LinearLayout:
                        dynamicSpacing: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "isVehicleSelected"]
                children:
                -   class: "UIControl"
                    name: "Stats"
                    input: false
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfFirstChild"
                            verticalPolicy: "PercentOfFirstChild"
                        UIChildComponent0:
                            childType: "kPrototype"
                            condition: "not isNull(selectedReward.vehicle)"
                            prototypePath: "~res:/UI/Screens3/Lobby/Common/Vehicle/VehicleInfo.yaml"
                            args:
                                "orientation": "eOrientation.RightToLeft"
                                "size": "eVehicleInfoSize.medium"
                                "class": "selectedReward.vehicle.info.tankClass"
                                "level": "selectedReward.vehicle.info.level"
                                "type": "when selectedReward.vehicle.info.isPremium -> eVehicleDescriptionType.PREMIUM, selectedReward.vehicle.info.isCollectible -> eVehicleDescriptionType.COLLECTIBLE, selectedReward.vehicle.stats.isPremiumized -> eVehicleDescriptionType.PREMIUMISED, eVehicleDescriptionType.NORMAL"
                                "elite": "selectedReward.vehicle.stats.isElite"
                    bindings:
                    - ["visible", "isVehicleSelected"]
                -   class: "UIControl"
                    name: "Spacer"
                    input: false
                    components:
                        SizePolicy:
                            horizontalPolicy: "FixedSize"
                            horizontalValue: 4.000000
                            verticalPolicy: "PercentOfParent"
                -   class: "UIControl"
                    name: "VehicleName"
                    position: [137.000000, 4.000000]
                    input: false
                    components:
                        UITextComponent:
                            shadowOffset: [1.000000, 1.000000]
                            shadowColor: [0.274510, 0.274510, 0.274510, 1.000000]
                            fitting: "FITTING_POINTS"
                        Anchor:
                            vCenterAnchorEnabled: true
                            vCenterAnchor: 1.000000
                        SizePolicy:
                            horizontalPolicy: "PercentOfContent"
                            horizontalMax: 94.000000
                            verticalPolicy: "PercentOfContent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Font.style.yaml;"
                    bindings:
                    - ["visible", "isVehicleSelected"]
                    - ["classes", "\"t-headline bold \" + (when not isNull(selectedReward.vehicle) and (selectedReward.vehicle.info.isPremium or selectedReward.vehicle.stats.isPremiumized) -> \"yellow-lightning-text\", not isNull(selectedReward.vehicle) and selectedReward.vehicle.info.isCollectible -> \"blue-rimmi-text\", \"white-wild-sand-text\")"]
                    - ["UITextComponent.text", "when not isNull(selectedReward.vehicle) -> localize(selectedReward.vehicle.info.shortName), \"\""]
                -   prototype: "IconButtonNoBlur/IconButton"
                    name: "PreviewButton"
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                            vCenterAnchor: 2.000000
                        UIDataParamsComponent:
                            args:
                                "visible": "true"
                                "image": "\"~res:/Gfx/Lobby/icons/icon_eye_s\""
                                "type": "eButtonType.OPTIONAL_LIGHT"
                                "isBgVisible": "false"
                                "buttonSize": "40"
                                "enabled": "true"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SHOW_TANK_PREVIEW", "selectedTankIndex, selectedEntityIndex"]
            -   class: "UIControl"
                name: "ModuleInfo"
                input: false
                components:
                    LinearLayout:
                        spacing: 4.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "isModuleSelected"]
                children:
                -   class: "UIControl"
                    name: "Text"
                    input: false
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                        LinearLayout:
                            orientation: "TopDown"
                            dynamicPadding: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfMaxChild"
                            verticalPolicy: "PercentOfChildrenSum"
                    children:
                    -   class: "UIControl"
                        name: "TextGradient"
                        visible: false
                        input: false
                        components:
                            Background:
                                drawType: "DRAW_SCALE_TO_RECT"
                                sprite: "~res:/Gfx/Lobby/backgrounds/bg_radial-loading_shadow"
                            Anchor:
                                hCenterAnchorEnabled: true
                                vCenterAnchorEnabled: true
                                vCenterAnchor: 2.000000
                            IgnoreLayout: {}
                            SizePolicy:
                                horizontalPolicy: "FixedSize"
                                horizontalValue: 400.000000
                                verticalPolicy: "PercentOfParent"
                                verticalValue: 150.000000
                    -   class: "UIControl"
                        name: "ModuleName"
                        input: false
                        classes: "t-headline bold white-wild-sand-text"
                        components:
                            UITextComponent:
                                shadowOffset: [1.000000, 1.000000]
                                shadowColor: [0.274510, 0.274510, 0.274510, 1.000000]
                                fitting: "FITTING_POINTS"
                            Anchor:
                                leftAnchorEnabled: true
                                vCenterAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfContent"
                                verticalPolicy: "PercentOfContent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml;"
                        bindings:
                        - ["UITextComponent.text", "localize(viewModel.season.tankParams.itemTypeName + \"_upper\")"]
                    -   class: "UIControl"
                        name: "ModuleInfo"
                        input: false
                        classes: "t-caption regular white-wild-sand-50-text"
                        components:
                            UITextComponent:
                                shadowOffset: [1.000000, 1.000000]
                                shadowColor: [0.274510, 0.274510, 0.274510, 1.000000]
                                fitting: "FITTING_POINTS"
                            Anchor:
                                leftAnchorEnabled: true
                                vCenterAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfContent"
                                horizontalMax: 152.000000
                                verticalPolicy: "PercentOfContent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml;"
                        bindings:
                        - ["UITextComponent.text", "localize(viewModel.season.tankParams.itemName)"]
            -   class: "UIControl"
                name: "TabIcons"
                input: false
                components:
                    Anchor:
                        vCenterAnchorEnabled: true
                        vCenterAnchor: -4.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        horizontalValue: 90.000000
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Tabs/IconTabsBarNoBlur.yaml"
                        args:
                            "activeTab": "tankParamsIndex"
                            "info": "[ { \"sprite\" = \"~res:/Gfx/Lobby/icons/icon_list_s\"; \"tabSize\" = eTabSize.M; }; { \"sprite\" = \"~res:/Gfx/Lobby/icons/icon_extended-list_s\"; \"tabSize\" = eTabSize.M; }; ]"
        -   class: "UIControl"
            name: "Params"
            input: false
            components:
                LinearLayout:
                    orientation: "TopDown"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIScrollView"
                name: "Brief"
                autoUpdate: true
                components:
                    ClipContent:
                        right: false
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "tankParamsIndex == 0"]
                children:
                -   class: "UIScrollViewContainer"
                    name: "scrollContainerControl"
                    scrollDirection: "kVertical"
                    components:
                        LinearLayout:
                            orientation: "TopDown"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfChildrenSum"
                    children:
                    -   class: "UIControl"
                        name: "Basic"
                        size: [260.000000, 268.000000]
                        input: false
                        components:
                            Anchor:
                                hCenterAnchorEnabled: false
                            LinearLayout:
                                enabled: true
                                orientation: "TopDown"
                                padding: "0;8"
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfChildrenSum"
                            UIRepeatComponent:
                                control: "~res:/UI/Screens3/Lobby/Common/VehicleParamsPanel/Params/BaseParam.yaml"
                                dataContainer: "viewModel.season.tankParams.sectionsByType[\"base\"].content"
                                args:
                                    "isIconVisible": "true"
                                    "tankParams": "viewModel.season.tankParams"
                                    "vSpacing": "4"
                                    "item": "_item"
                        bindings:
                        - ["visible", "tankParamsIndex == 0"]
                        - ["LinearLayout.spacing", "rightPanelParamSpacing"]
                -   prototype: "VerticalScrollBar/VerticalScrollBar"
                    name: "VerticalScrollBar"
                    position: [348.000000, 0.000000]
                    components:
                        Anchor:
                            enabled: true
                            rightAnchorEnabled: true
                            rightAnchor: -10.000000
                            topAnchorEnabled: true
                            topAnchor: 8.000000
                            bottomAnchorEnabled: true
                            bottomAnchor: 8.000000
                        IgnoreLayout: {}
                        UIScrollBarComponent:
                            delegate: ".."
            -   class: "UIScrollView"
                name: "Details"
                autoUpdate: true
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalFormula: "parent + 48"
                        verticalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "tankParamsIndex == 1"]
                children:
                -   class: "UIScrollViewContainer"
                    name: "scrollContainerControl"
                    scrollDirection: "kVertical"
                    components:
                        LinearLayout:
                            padding: "20"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfChildrenSum"
                    children:
                    -   class: "UIControl"
                        name: "ModuleParams"
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfMaxChild"
                        bindings:
                        - ["visible", "isModuleSelected"]
                        children:
                        -   prototype: "Section/SectionPrototype"
                            name: "SectionPrototype"
                            components:
                                UIDataParamsComponent:
                                    args:
                                        "tankParams": "viewModel.season.tankParams"
                                        "sectionType": "viewModel.season.tankParams.itemTypeName"
                                        "collapsible": "false"
                                        "hideUnchanged": "false"
                                        "hideHeader": "true"
                                        "overrideSectionName": "localize(viewModel.season.tankParams.itemTypeName + \"_upper\") + \" \" + localize(viewModel.season.tankParams.itemName)"
                    -   class: "UIControl"
                        name: "VehicleParams"
                        input: false
                        components:
                            LinearLayout:
                                orientation: "TopDown"
                                spacing: 4.000000
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfChildrenSum"
                            UIRepeatComponent:
                                control: "~res:/UI/Screens3/Lobby/Common/VehicleParamsPanel/Items/Section.yaml"
                                dataContainer: "viewModel.season.tankParams.mainSectionNames"
                                args:
                                    "tankParams": "viewModel.season.tankParams"
                                    "sectionType": "_item"
                                    "collapsible": "true"
                            UIIdentifierComponent:
                                id: "detailed_sections"
                        bindings:
                        - ["visible", "isVehicleSelected"]
                -   prototype: "VerticalScrollBar/VerticalScrollBar"
                    name: "VerticalScrollBar"
                    position: [348.000000, 0.000000]
                    components:
                        Anchor:
                            enabled: true
                            rightAnchorEnabled: true
                            rightAnchor: 2.000000
                            topAnchorEnabled: true
                            topAnchor: 8.000000
                            bottomAnchorEnabled: true
                            bottomAnchor: 8.000000
                        IgnoreLayout: {}
                        UIScrollBarComponent:
                            delegate: ".."
        -   class: "UIControl"
            name: "Bottom"
            input: false
            components:
                LinearLayout:
                    orientation: "TopDown"
                    spacing: 6.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfChildrenSum"
            children:
            -   class: "UIControl"
                name: "Progress"
                input: false
                components:
                    UIOpacityComponent: {}
                    LinearLayout:
                        orientation: "TopDown"
                        padding: "-2;0"
                        spacing: 4.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfChildrenSum"
                bindings:
                - ["visible", "not selectedStep.isFinished"]
                - ["UIOpacityComponent.opacity", "when isClaimButtonVisible -> 0.000000, 1.000000"]
                children:
                -   class: "UIControl"
                    name: "Price"
                    input: false
                    components:
                        Anchor:
                            hCenterAnchorEnabled: true
                        LinearLayout:
                            spacing: 2.000000
                        SizePolicy:
                            horizontalPolicy: "PercentOfChildrenSum"
                            verticalPolicy: "PercentOfMaxChild"
                    bindings:
                    - ["visible", "not selectedStep.isFinished"]
                    children:
                    -   class: "UIControl"
                        name: "CurrentValue"
                        input: false
                        classes: "t-subtitle bold color=white-wild-sand-text"
                        components:
                            UITextComponent:
                                colorInheritType: "COLOR_IGNORE_PARENT"
                                align: ["LEFT", "VCENTER"]
                            SizePolicy:
                                horizontalPolicy: "PercentOfContent"
                                verticalPolicy: "PercentOfContent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
                        bindings:
                        - ["UITextComponent.text", "str1000Separated(min(max(0, progressSummaryProxy), selectedStepTotal))"]
                    -   class: "UIControl"
                        name: "Separator"
                        input: false
                        classes: "t-subtitle bold color=white-wild-sand-50-text"
                        components:
                            UITextComponent:
                                text: " / "
                                colorInheritType: "COLOR_IGNORE_PARENT"
                                align: ["LEFT", "VCENTER"]
                            Anchor:
                                bottomAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfContent"
                                verticalPolicy: "PercentOfContent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
                    -   class: "UIControl"
                        name: "MaxValue"
                        input: false
                        classes: "t-subtitle bold color=white-wild-sand-50-text"
                        components:
                            UITextComponent:
                                colorInheritType: "COLOR_IGNORE_PARENT"
                                align: ["LEFT", "VCENTER"]
                            Anchor:
                                bottomAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfContent"
                                verticalPolicy: "PercentOfContent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
                        bindings:
                        - ["UITextComponent.text", "str1000Separated(selectedStepTotal)"]
                    -   class: "UIControl"
                        name: "Price"
                        input: false
                        components:
                            Anchor:
                                hCenterAnchorEnabled: true
                                vCenterAnchorEnabled: true
                            LinearLayout:
                                spacing: 4.000000
                            SizePolicy:
                                horizontalPolicy: "PercentOfChildrenSum"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml"
                                args:
                                    "forceHideValue": "true"
                                    "resource": "proxy"
                        bindings:
                        - ["Anchor.hCenterAnchor", "when isVehicleSelected -> 8, 0"]
                -   class: "UIControl"
                    name: "ProgressBar"
                    input: false
                    components:
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "FixedSize"
                            verticalValue: 6.000000
                        UIChildComponent0:
                            condition: ""
                            prototypePath: "~res:/UI/Screens3/Lobby/Story/SeasonProgress/SeasonProgressBar.yaml"
                            args:
                                "bgStyle": "\"white-wild-sand-15-bg\""
                                "isProgressAnimating": "isProgressAnimationActive and progressSummaryProxy < selectedStepTotal"
                                "progressPercent": "min(100.000000, 100.000000 * max(0, progressSummaryProxy) / selectedStepTotal)"
            -   prototype: "ButtonNoBlur/Button"
                name: "ResearchButton"
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                    UIDataParamsComponent:
                        args:
                            "caption": "when isClaimButtonVisible -> \"season_event/Event/Collect\", \"season_event/Event/SpeedUp\""
                            "type": "when isClaimButtonVisible -> eButtonType.POSITIVE, eButtonType.OPTIONAL_LIGHT"
                            "size": "eButtonSize.NORMAL"
                            "enabled": "not selectedStep.isFinished"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "START_STEP_COMPLETE", ""]
                bindings:
                - ["visible", "enabled"]
                children:
                -   class: "UIParticles"
                    name: "DiscountFX"
                    position: [45.000000, 20.000000]
                    size: [32.000000, 32.000000]
                    pivot: [0.500000, 0.500000]
                    input: false
                    effectPath: "~res:/3d/FX/UI/DiscountFX.sc2"
                    autoStart: true
                    components:
                        Anchor:
                            hCenterAnchorEnabled: true
                            vCenterAnchorEnabled: true
                        ScalePolicy:
                            horizontalFormula: "parentSize.X / 90"
                            verticalFormula: "parentSize.Y / 40"
                    bindings:
                    - ["visible", "type == eButtonType.POSITIVE"]
            -   prototype: "ButtonNoBlur/Button"
                name: "GoToTank"
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                    UIDataParamsComponent:
                        args:
                            "caption": "\"#hangar_showcase:ToTankButton\""
                            "type": "eButtonType.OPTIONAL_LIGHT"
                            "size": "eButtonSize.NORMAL"
                            "enabled": "selectedStep.isFinished and isVehicleSelected"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "GO_TO_TANK", ""]
                bindings:
                - ["visible", "enabled"]
            -   class: "UIControl"
                name: "FinishedStatus"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        hCenterAnchor: -4.000000
                        vCenterAnchorEnabled: true
                    LinearLayout:
                        dynamicPadding: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "PercentOfMaxChild"
                bindings:
                - ["visible", "selectedStep.isFinished and isModuleSelected"]
                children:
                -   class: "UIControl"
                    name: "Icon"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        Background:
                            sprite: "~res:/Gfx/Lobby/icons/icon_tick_m"
                            color: [0.635294, 0.635294, 0.635294, 1.000000]
                -   class: "UIControl"
                    name: "Text"
                    input: false
                    classes: "t-caption bold color=white-wild-sand-50-text"
                    components:
                        UITextComponent:
                            colorInheritType: "COLOR_IGNORE_PARENT"
                            align: ["LEFT", "VCENTER"]
                        Anchor:
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfContent"
                            verticalPolicy: "PercentOfContent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
                    bindings:
                    - ["UITextComponent.text", "localize(\"season_event/Event/Researched\")"]
