Header:
    version: 161
Prototypes:
-   class: "UIControl"
    name: "FooterContent"
    input: false
    components:
        LinearLayout:
            spacing: 16.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
        UIDataParamsComponent:
            params:
            - ["StoryStepModel", "bonusStep", "null", "{ }"]
            - ["bool", "showDescription", "false", "false"]
            - ["string", "buyBundleTipDescription", "\"\"", "\"event/lockStage/hint\""]
            - ["string", "bundleTitle", "\"\"", "\"bundleTitle\""]
            - ["string", "extendedBundleTitle", "\"\"", "\"extendedBundleTitle\""]
            - ["bool", "isBundleObtained", "false", "false"]
            - ["Story", "story", "null", "{ }"]
            - ["StatsDataModel", "statsData", "null", "{ }"]
            - ["StoryBattlePass", "battlePass", "null", "null"]
            - ["StoryStepModel", "selectedStep", "null", "{ \"rewards\" = [ { \"type\" = ResourceType.vehicle; }; ]; \"repeats\" = { \"quantity\" = 0; }; \"price\" = [ { \"type\" = ResourceType.stuff; \"stuff\" = { \"name\" = \"prx_spr19\"; \"title\" = \"storage/Items/spring_event_2019/Title\"; \"description\" = \"storage/Items/spring_event_2019/Description\"; \"quantity\" = 888; \"grade\" = ArtefactGrade.common; \"icon\" = \"~res:/Gfx/UI/StorageItemIcons/prx_spr19.psd\"; \"iconUrl\" = \"\"; }; }; { \"type\" = ResourceType.stuff; \"stuff\" = { \"name\" = \"prx_spr19\"; \"title\" = \"storage/Items/spring_event_2019/Title\"; \"description\" = \"storage/Items/spring_event_2019/Description\"; \"quantity\" = 999; \"grade\" = ArtefactGrade.common; \"icon\" = \"~res:/Gfx/UI/StorageItemIcons/prx_spr19.psd\"; \"iconUrl\" = \"\"; }; }; ]; \"net\" = { \"price\" = { \"prx_spr19\" = { \"type\" = ResourceType.stuff; \"stuff\" = { \"name\" = \"prx_spr19\"; \"title\" = \"storage/Items/spring_event_2019/Title\"; \"description\" = \"storage/Items/spring_event_2019/Description\"; \"quantity\" = 666; \"grade\" = ArtefactGrade.common; \"icon\" = \"~res:/Gfx/UI/StorageItemIcons/prx_spr19.psd\"; \"iconUrl\" = \"\"; }; }; \"prx_spr20\" = { \"type\" = ResourceType.stuff; \"stuff\" = { \"name\" = \"prx_spr19\"; \"title\" = \"storage/Items/spring_event_2019/Title\"; \"description\" = \"storage/Items/spring_event_2019/Description\"; \"quantity\" = 777; \"grade\" = ArtefactGrade.common; \"icon\" = \"~res:/Gfx/UI/StorageItemIcons/prx_spr19.psd\"; \"iconUrl\" = \"\"; }; }; }; }; \"isFinished\" = false; \"isMain\" = false; }"]
            events:
            - "OPEN_EXCHANGE_DIALOG"
            - "BUY_QUEST_BOOSTER"
            - "BUY_GOLD_STEP"
            - "OPEN_BATTLEPASS"
            - "ON_LOCKED_BUTTON_PRESSED"
            - "OPEN_STORE(string eventShop)"
            - "TO_STORE_DIALOG(eRequiredResource requiredResource)"
            - "ON_COMPLETE_BUTTON_PRESSED(bool isChest)"
        UIDataLocalBindingsComponent:
            data:
            - ["string", "imagePath", "when (not isNull(selectedStep) and selectedStep.toStore) -> story.resources.graphics[\"buttondeco\"], \"\""]
            - ["bool", "isLocalImage", "imagePath.StartsWith(\"~res:/\")"]
            - ["bool", "isFame2024", "story.name == \"2024-FAME\""]
            - ["bool", "isSpring2024", "story.name == \"2024-SPRING\""]
            - ["bool", "isStepReadyToComplete", "when not isNull(selectedStep) -> selectedStep.net.price.Empty() and not selectedStep.isFinished, false"]
            - ["bool", "isStepBonusReady", "when (not isNull(selectedStep) and selectedStep.isInChain and not selectedStep.stepWithBonusGroupName.empty() and isStepReadyToComplete) -> true, (when (not isNull(bonusStep) and selectedStep.isFinished) -> bonusStep.net.price.Empty(), false)"]
            - ["bool", "isStepForGold", "not isNull(selectedStep) and story.tree.stepsForGold.Contains(selectedStep.id)"]
            - ["bool", "isStepForFreeXp", "not isNull(selectedStep) and selectedStep.compositeName == \"freeXp\""]
            - ["bool", "isFreeStep", "not isNull(selectedStep) and (not isNull(selectedStep.price[0].stuff) and selectedStep.price[0].stuff.quantity == 0 or not isNull(selectedStep.price[0].basic) and selectedStep.price[0].basic.quantity == 0)"]
            - ["bool", "showContent", "when (isFame2024 and selectedStep.id == 6) or (isFame2024 and selectedStep.id == 10) -> true, when (not isNull(selectedStep) and not (isFame2024 or selectedStep.toStore or selectedStep.isFinished)) -> true, false"]
            - ["string", "completeButtonLabel", "when not isStepReadyToComplete or isStepForGold -> \"#common:DialogButton/Buy\", \"#common:Button/Claim\""]
            - ["string", "buyoutLabel", "when story.stage.type == eStageType.PROCESS -> \"template_event/ProgressStage/LackingCurrency/Line2\", story.stage.type == eStageType.BUY -> \"#common:Cost\", \"\""]
            - ["bool", "isEnoughCurrencyForOneStep", "isStepReadyToComplete and selectedStep.net.unlockPath.Size() == 1"]
            - ["bool", "isEnoughCurrencyForSomeStep", "isStepReadyToComplete and selectedStep.net.unlockPath.Size() > 1"]
            - ["string", "costLabelBuy", "when not isNull(selectedStep) and selectedStep.net.price.Size() == 1 -> \"template_event/ProgressStage/LackingCurrency\", not isNull(selectedStep) and selectedStep.net.price.Size() > 1 -> \"template_event/ProgressStage/LackingCurrencies\", \"\""]
            - ["string", "costLabelNotEnough", "when story.stage.type == eStageType.PROCESS -> \"template_event/ProgressStage/LackingCurrency/Line1\", story.stage.type == eStageType.BUY -> costLabelBuy, \"\""]
            - ["string", "costLabel", "when not isNull(selectedStep) and not isStepReadyToComplete -> costLabelNotEnough, \"\""]
            - ["string", "buyLabel", "when story.stage.type == eStageType.BUY -> \"#common:Cost\", story.stage.type == eStageType.PROCESS -> \"template_event/ProgressStage/LackingCurrency/Line2\", \"\""]
            - ["string", "stepDescriptionLabel", "\"\""]
            - ["bool", "isRequiredProxyForBuyout", "not isNull(selectedStep) and selectedStep.canBuy and not selectedStep.requiredProxyForBuyout.Empty()"]
            - ["bool", "isLeftProxyForBuyout", "not isNull(selectedStep) and selectedStep.canBuy and not selectedStep.leftProxyForBuyout.Empty()"]
            - ["bool", "showBuyout", "when not isNull(selectedStep) -> selectedStep.net.buyout.type != ResourceType.undefined and empty(stepDescriptionLabel) and not isLeftProxyForBuyout, false"]
            - ["bool", "isButtonEnabled", "when not isNull(selectedStep) -> (selectedStep.canBuy and not isLeftProxyForBuyout) or isStepReadyToComplete, false"]
            - ["bool", "isEnvelope", "when not isNull(selectedStep) -> selectedStep.groupName == \"envelope\", false"]
            - ["bool", "isQuestBooster", "when not isNull(selectedStep) -> selectedStep.groupName == \"questBoosters\", false"]
            - ["ResourceDetailed", "buyout", "when not isNull(selectedStep) -> selectedStep.net.buyout, null"]
    children:
    -   class: "UIControl"
        name: "PriceContent"
        input: false
        components:
            Anchor:
                enabled: true
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfChildrenSum"
        children:
        -   class: "UIControl"
            name: "BuyBundleTip"
            position: [300.000000, 9.000000]
            input: false
            components:
                Anchor:
                    enabled: true
                    hCenterAnchorEnabled: false
                    rightAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfFirstChild"
                    verticalPolicy: "PercentOfFirstChild"
            bindings:
            - ["visible", "showDescription"]
            children:
            -   class: "UIControl"
                name: "Description"
                input: false
                classes: "t-body regular yellow-chalky-text"
                components:
                    RichContent:
                        baseClasses: "t-overline bold white-wild-sand-text"
                        classesInheritance: false
                        contentLimit: 500
                    RichContentAliases0:
                        aliases:
                        - ["orange", "<span class=\"t-overline bold yellow-lightning-text\" />"]
                    Anchor:
                        rightAnchorEnabled: true
                        vCenterAnchorEnabled: true
                        vCenterAnchor: -2.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        horizontalValue: 100.000000
                        verticalPolicy: "PercentOfFirstChild"
                    FlowLayout:
                        enabled: true
                        hSpacing: 4.000000
                        skipInvisible: true
                        useRtl: true
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Font.style.yaml"
                bindings:
                - ["RichContent.text", "when not empty(extendedBundleTitle) -> localize(buyBundleTipDescription, { \"bundleTitle\" = localize(bundleTitle); \"extendedBundleTitle\" = localize(extendedBundleTitle); }), localize(\"event/lockStage/singlebundle/hint\", { \"bundleTitle\" = localize(bundleTitle); })"]
        -   class: "UIControl"
            name: "ContentHolder"
            input: false
            components:
                Anchor:
                    enabled: true
                    hCenterAnchorEnabled: false
                    rightAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfFirstChild"
                    verticalPolicy: "PercentOfFirstChild"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "isQuestBooster"
                    control: "QuestBoosterContent"
                UIChildComponent1:
                    childType: "kControl"
                    condition: "not isQuestBooster"
                    control: "Content"
            bindings:
            - ["visible", "showContent"]
    -   class: "UIControl"
        name: "ButtonWrapper"
        position: [287.000000, 0.000000]
        size: [100.000000, 100.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfLastChild"
                verticalPolicy: "PercentOfLastChild"
        children:
        -   class: "UIControl"
            name: "ButtonIconAbove"
            input: false
            components:
                Background:
                    drawType: "DRAW_SCALE_TO_RECT"
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                    vCenterAnchor: -51.000000
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 98.000000
                    verticalPolicy: "FixedSize"
                    verticalValue: 57.000000
            bindings:
            - ["Background.sprite", "when isLocalImage -> imagePath, \"\""]
        -   class: "UIControl"
            name: "ButtonUrlIconAbove"
            input: false
            components:
                Background:
                    drawType: "DRAW_SCALE_TO_RECT"
                UIUrlImageComponent: {}
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                    vCenterAnchor: -51.000000
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 98.000000
                    verticalPolicy: "FixedSize"
                    verticalValue: 57.000000
            bindings:
            - ["UIUrlImageComponent.imageUrl", "when not isLocalImage -> imagePath, \"\""]
        -   class: "UIControl"
            name: "CompleteButton"
            position: [0.000000, 26.000000]
            size: [168.000000, 48.000000]
            input: false
            components:
                Anchor:
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    horizontalValue: 100.000000
                    verticalPolicy: "PercentOfMaxChild"
                UIAttachLayoutMasterComponent:
                    attachId: "STORY_FOOTER_MAIN_BUTTON"
                UIChildComponent0:
                    condition: "when not isNull(selectedStep) -> (selectedStep.isInChain and not selectedStep.stepWithBonusGroupName.empty()), false"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "\"#common:Button/Claim\""
                        "enabled": "isBundleObtained and isStepBonusReady"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "ON_COMPLETE_BUTTON_PRESSED", "false"]
                UIChildComponent1:
                    condition: "selectedStep.toStore"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "iconPath": "\"~res:/Gfx/Lobby/icons/icon_shop.psd\""
                        "caption": "\"#common:Button/ToStore\""
                        "enabled": "true"
                        "sound": "eButtonSound.OPEN"
                        "type": "eButtonType.ALTERNATIVE"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "OPEN_STORE", "story.resources.strings.toStoreSectionName"]
                UIChildComponent2:
                    condition: "not isNull(battlePass) and battlePass.isRequired and battlePass.isSelected"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "\"#common:DialogButton/Buy\""
                        "sound": "when not isNull(battlePass.price.realCurrency) -> eButtonSound.OK, eButtonSound.OPEN"
                        "enabled": "true"
                    eventActions:
                    - ["OPEN_EXCHANGE_DIALOG", "OPEN_EXCHANGE_DIALOG", ""]
                    - ["ON_CLICK_BUTTON", "OPEN_BATTLEPASS", ""]
                UIChildComponent3:
                    condition: "story.name == \"2023-BLACK\" and not isStepReadyToComplete"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "\"#common:DialogButton/Buy\""
                        "sound": "eButtonSound.OK"
                        "enabled": "true"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "TO_STORE_DIALOG", "eRequiredResource.kGold"]
                UIChildComponent4:
                    childType: "kPrototype"
                    condition: "isStepForFreeXp"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "when isFreeStep or (isRequiredProxyForBuyout and not isLeftProxyForBuyout) -> \"#common:Button/Claim\", \"#common:DialogButton/Buy\""
                        "sound": "eButtonSound.OPEN"
                        "enabled": "isButtonEnabled"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "ON_COMPLETE_BUTTON_PRESSED", "true"]
                UIChildComponent5:
                    condition: "selectedStep.groupName == \"roll\""
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "\"#common:DialogButton/Open\""
                        "sound": "eButtonSound.OPEN"
                        "enabled": "isButtonEnabled"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "ON_COMPLETE_BUTTON_PRESSED", "true"]
                UIChildComponent6:
                    condition: "isStepForGold"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "\"#common:DialogButton/Buy\""
                        "sound": "eButtonSound.OK"
                        "enabled": "true"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "BUY_GOLD_STEP", ""]
                UIChildComponent7:
                    condition: "isQuestBooster"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "completeButtonLabel"
                        "sound": "eButtonSound.OK"
                        "enabled": "isButtonEnabled"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "BUY_QUEST_BOOSTER", ""]
                UIChildComponent8:
                    condition: "not isNull(selectedStep) and isStepReadyToComplete and selectedStep.multiBuy"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "completeButtonLabel"
                        "sound": "eButtonSound.OK"
                        "enabled": "isButtonEnabled"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "OPEN_EXCHANGE_DIALOG", ""]
                UIChildComponent9:
                    condition: "isEnvelope"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "when isStepReadyToComplete -> \"#common:DialogButton/Open\", \"#common:DialogButton/Buy\""
                        "enabled": "isButtonEnabled"
                        "sound": "when isStepReadyToComplete -> eButtonSound.OPEN, eButtonSound.OK"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "ON_COMPLETE_BUTTON_PRESSED", "false"]
                UIChildComponent10:
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
                    args:
                        "caption": "completeButtonLabel"
                        "enabled": "isButtonEnabled"
                        "sound": "eButtonSound.OK"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "ON_COMPLETE_BUTTON_PRESSED", "false"]
            children:
            -   class: "UIControl"
                name: "LockedTapArea"
                size: [32.000000, 32.000000]
                classes: "button-open-sound"
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIInputEventComponent:
                        onTouchUpInside: "ON_LOCKED_BUTTON_PRESSED"
                    Sound: {}
                    StyleSheet:
                        styles: "~res:/UI/Screens3/ButtonSound.style.yaml"
                bindings:
                - ["visible", "isLeftProxyForBuyout"]
                - ["input", "isLeftProxyForBuyout"]
Slots:
-   class: "UIControl"
    name: "Content"
    input: false
    components:
        LinearLayout:
            orientation: "TopDown"
            spacing: 4.000000
        SizePolicy:
            horizontalPolicy: "PercentOfMaxChild"
            verticalPolicy: "PercentOfChildrenSum"
    bindings:
    - ["visible", "showContent"]
    children:
    -   class: "UIControl"
        name: "Cost"
        input: false
        components:
            Anchor:
                rightAnchorEnabled: true
            LinearLayout:
                spacing: 4.000000
                useRtl: true
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
        children:
        -   class: "UIControl"
            name: "Label"
            input: false
            classes: "t-body regular white-wild-sand-50-text"
            components:
                UITextComponent: {}
                Anchor:
                    rightAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
            bindings:
            - ["UITextComponent.text", "localize(costLabel)"]
        -   class: "UIControl"
            name: "PriceWrapper"
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                LinearLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfMaxChild"
            children:
            -   class: "UIControl"
                name: "Price"
                input: false
                components:
                    LinearLayout:
                        spacing: 4.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "PercentOfFirstChild"
                    UIRepeatComponent:
                        control: "~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml"
                        dataContainer: "when (not isNull(bonusStep) and selectedStep.isFinished) -> (when isStepBonusReady -> bonusStep.price, bonusStep.net.price), isNull(selectedStep) -> null, isStepReadyToComplete -> selectedStep.price, selectedStep.net.price"
                        args:
                            "currencySize": "eCurrencySize.BODY"
                            "canAfford": "when isLeftProxyForBuyout -> false, isStepReadyToComplete and _item.type == ResourceType.gold -> _item.basic.quantity <= statsData.gold.quantity, isStepReadyToComplete and _item.type == ResourceType.credits -> _item.basic.quantity <= statsData.credits.quantity, isStepReadyToComplete -> true, _item.type == ResourceType.stuff -> _item.stuff.quantity <= 0, _item.basic.quantity <= 0"
                            "resource": "_item"
                            "shortTime": "isStepReadyToComplete"
                            "forceFullValue": "true"
                bindings:
                - ["visible", "isNull(battlePass) or not battlePass.isRequired or not battlePass.isSelected"]
            -   class: "UIControl"
                name: "BattlePassPrice"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        condition: "not isNull(battlePass) and battlePass.isRequired"
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml"
                        args:
                            "currencySize": "eCurrencySize.BODY"
                            "canAfford": "true"
                            "resource": "battlePass.price"
                bindings:
                - ["visible", "not isNull(battlePass) and battlePass.isRequired and battlePass.isSelected"]
    -   class: "UIControl"
        name: "Buyout"
        input: false
        components:
            Anchor:
                rightAnchorEnabled: true
            LinearLayout:
                spacing: 4.000000
                useRtl: true
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
        children:
        -   class: "UIControl"
            name: "Label"
            input: false
            classes: "t-body regular white-wild-sand-50-text"
            components:
                UITextComponent: {}
                Anchor:
                    rightAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
            bindings:
            - ["visible", "showBuyout"]
            - ["UITextComponent.text", "localize(buyoutLabel)"]
        -   class: "UIControl"
            name: "Price"
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfFirstChild"
                    verticalPolicy: "PercentOfFirstChild"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml"
                    args:
                        "currencySize": "eCurrencySize.BODY"
                        "canAfford": "when not isNull(buyout) -> (when buyout.type == ResourceType.gold and not isNull(buyout.basic) and not isNull(statsData.gold) -> (statsData.gold.quantity >= buyout.basic.quantity), buyout.type == ResourceType.credits and not isNull(buyout.basic) and not isNull(statsData.credits) -> (statsData.credits.quantity >= buyout.basic.quantity), false), false"
                        "resource": "when not isNull(selectedStep) -> selectedStep.net.buyout, null"
                        "forceFullValue": "true"
            bindings:
            - ["visible", "showBuyout"]
    -   class: "UIControl"
        name: "StepDescriptionLabel"
        input: false
        classes: "t-body regular white-wild-sand-text"
        components:
            UITextComponent: {}
            Anchor:
                rightAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["visible", "not empty(stepDescriptionLabel)"]
        - ["UITextComponent.text", "localize(stepDescriptionLabel)"]
-   class: "UIControl"
    name: "QuestBoosterContent"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
    bindings:
    - ["visible", "showContent"]
    children:
    -   class: "UIControl"
        name: "BuyoutPrice"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml"
                args:
                    "currencySize": "eCurrencySize.BODY"
                    "canAfford": "when not isNull(selectedStep) and not isNull(selectedStep.net.buyout.basic) and not isNull(statsData.gold) -> statsData.gold.quantity >= selectedStep.net.buyout.basic.quantity, false"
                    "resource": "when not isNull(selectedStep) -> selectedStep.net.buyout, null"
                    "forceFullValue": "true"
