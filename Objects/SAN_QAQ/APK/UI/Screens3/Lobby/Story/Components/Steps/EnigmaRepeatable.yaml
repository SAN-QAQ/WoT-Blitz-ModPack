Header:
    version: 161
ImportedPackages:
- "~res:/UI/Screens3/Common/BlurModified.yaml"
Prototypes:
-   class: "UIControl"
    name: "EnigmaRepeatable"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfLastChild"
            verticalPolicy: "PercentOfLastChild"
        UIDataParamsComponent:
            params:
            - ["bool", "showGrade", "true", "true"]
            - ["eSelectionBorderType", "selectionType", "eSelectionBorderType.kRect", "eSelectionBorderType.kR8"]
            - ["bool", "showPrice", "true", "true"]
            - ["bool", "showPlus", "true", "true"]
            - ["float", "roundedCorners", "0", "12"]
            - ["string", "text", "\"\"", "\"Набор взломщика\""]
            - ["StoryStepViewModel", "model", "null", "{ \"step\" = { \"rewards\" = [ { \"type\" = ResourceType.vehicle; }; ]; \"repeats\" = { }; \"isFinished\" = false; \"isMain\" = false; }; \"isSelected\" = true; }"]
            - ["bool", "canAfford", "false", "true"]
            events:
            - "DESELECT"
            - "SHOW_STEP_INFO(int id)"
            - "SELECT_STEP(int id)"
        UIDataLocalVarsComponent:
            data:
            - ["color", "mainColor", "rgba(3022366, 0.700000)"]
            - ["float", "selectedOpacity", "when model.isSelected and not model.step.isFinished -> 1.000000, 0.000000"]
        UIDataLocalBindingsComponent:
            data:
            - ["bool", "isCompositeStep", "not isNull(model.compositeStep) and not model.compositeStep.steps.Empty()"]
            - ["StoryStepModel", "step", "when isCompositeStep -> model.compositeStep.steps[model.compositeStep.currentIndex], model.step"]
            - ["bool", "isLocked", "when isCompositeStep and model.compositeStep.currentIndex > 0 -> not model.compositeStep.steps[model.compositeStep.currentIndex - 1].isFinished, false"]
            - ["float", "contentOpacity", "when step.isFinished -> 0.100000, isLocked -> 0.500000, 1.000000"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Story/Components/Repeatable.actions"
    children:
    -   class: "UIControl"
        name: "ContentHolder"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonDecorator.yaml"
                args:
                    "content": "Content"
                    "sound": "when not model.isSelected -> eButtonSound.CHOOSE, eButtonSound.OPEN"
                    "isSelected": "when not step.isFinished -> model.isSelected, false"
                    "hasInput": "not step.isFinished"
                    "ltrbSafeZone": "vec4(8.000000, 16.000000, 8.000000, 38.000000)"
                eventActions:
                - ["PUSH", "PUSH", "_event.scale, _event.opacity, _event.time"]
                - ["PULL", "PULL", "_event.time"]
                - ["HOVER", "HOVER", "_event.brightness, _event.time"]
                - ["CANCEL_HOVER", "CANCEL_HOVER", "_event.time"]
                - ["SELECT", "SELECT", "_event.time"]
                - ["CANCEL_SELECT", "CANCEL_SELECT", "_event.time"]
                - ["ON_TOUCH", "ON_TOUCH", "step.id"]
Slots:
-   class: "UIControl"
    name: "Content"
    pivot: [0.500000, 0.500000]
    input: false
    components:
        UIOpacityComponent: {}
        Anchor:
            hCenterAnchorEnabled: true
            vCenterAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
    children:
    -   class: "UIControl"
        name: "Body"
        input: false
        components:
            UIOpacityComponent: {}
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 240.000000
                verticalPolicy: "FixedSize"
                verticalValue: 128.000000
        bindings:
        - ["UIOpacityComponent.opacity", "contentOpacity"]
        children:
        -   class: "UIControl"
            name: "Bg"
            input: false
            components:
                UIOpacityComponent:
                    ignoreParentOpacity: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["visible", "not step.isMain"]
            children:
            -   prototype: "BlurModified/BlurModified"
                name: "Blur"
                components:
                    UIDataParamsComponent:
                        args:
                            "bgStyle": "\"grey-shark-25-bg\""
                            "roundCorner": "roundedCorners"
        -   class: "UIControl"
            name: "Content"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIControl"
                name: "Grade"
                position: [72.000000, 0.000000]
                size: [108.000000, 112.000000]
                input: false
                components:
                    Background:
                        drawType: "DRAW_ALIGNED"
                        sprite: "~res:/Gfx/UI/Storage/Items_back"
                        perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
                    UIOpacityComponent: {}
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 112.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 112.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
                bindings:
                - ["visible", "showGrade"]
                - ["classes", "str(step.rewards[0UL].stuff.grade, ArtefactGrade, \"color\") + \"-bg\""]
                - ["UIOpacityComponent.opacity", "when step.rewards[0UL].stuff.grade == ArtefactGrade.unknown -> 0.000000, 1.000000"]
            -   class: "UIControl"
                name: "ContentImage"
                position: [72.000000, 0.000000]
                size: [100.000000, 116.000000]
                input: false
                components:
                    Background:
                        drawType: "DRAW_SCALE_PROPORTIONAL"
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 112.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 112.000000
                bindings:
                - ["Background.sprite", "step.rewards[0UL].stuff.icon"]
            -   class: "UIControl"
                name: "ContentImageUrl"
                position: [72.000000, 0.000000]
                size: [100.000000, 116.000000]
                input: false
                components:
                    Background:
                        drawType: "DRAW_SCALE_PROPORTIONAL"
                    UIUrlImageComponent: {}
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 112.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 112.000000
                bindings:
                - ["UIUrlImageComponent.imageUrl", "step.rewards[0UL].stuff.iconUrl"]
            -   class: "UIControl"
                name: "Text"
                input: false
                classes: "t-subtitle bold white-wild-sand-text"
                components:
                    UITextComponent:
                        fitting: "FITTING_POINTS"
                    Anchor:
                        hCenterAnchorEnabled: true
                        bottomAnchorEnabled: true
                        bottomAnchor: 8.000000
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalFormula: "parent - 16"
                        verticalPolicy: "PercentOfContent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Font.style.yaml"
                bindings:
                - ["UITextComponent.text", "localize(text)"]
        -   class: "UIControl"
            name: "Brightness"
            input: false
            classes: "white-wild-sand-10-bg"
            components:
                Background: {}
                UIOpacityComponent:
                    opacity: 0.000000
                UIRoundedCornersComponent: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["UIRoundedCornersComponent.radius", "roundedCorners"]
        -   class: "UIControl"
            name: "Selected"
            input: false
            components:
                UIOpacityComponent:
                    ignoreParentOpacity: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Selection.yaml"
                    args:
                        "selectionType": "selectionType"
                        "isVisible": "true"
            bindings:
            - ["UIOpacityComponent.opacity", "selectedOpacity"]
        -   class: "UIControl"
            name: "CornerIcon"
            input: false
            components:
                UIOpacityComponent:
                    ignoreParentOpacity: true
                Anchor:
                    rightAnchorEnabled: true
                    rightAnchor: 6.000000
                    topAnchorEnabled: true
                    topAnchor: 6.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfFirstChild"
                    verticalPolicy: "PercentOfFirstChild"
            children:
            -   class: "UIControl"
                name: "Info"
                input: false
                classes: "white-wild-sand-50-bg"
                components:
                    Background:
                        drawType: "DRAW_ALIGNED"
                        sprite: "~res:/Gfx/Lobby/icons/icon_info_xs"
                    UIOpacityComponent: {}
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 16.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 16.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
                bindings:
                - ["UIOpacityComponent.opacity", "selectedOpacity"]
    -   class: "UIControl"
        name: "Price"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                bottomAnchorEnabled: true
                bottomAnchor: -32.000000
            LinearLayout:
                spacing: 8.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIRepeatComponent:
                control: "~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml"
                dataContainer: "when not step.isFinished -> step.price, null"
                args:
                    "currencySize": "eCurrencySize.BIG"
                    "plusVisible": "showPlus and (_index != (step.price.Size() - 1))"
                    "canAfford": "canAfford"
                    "resource": "_item"
        bindings:
        - ["visible", "not step.isFinished and showPrice"]
CustomData:
    Guides:
        EnigmaRepeatable:
            Vertical:
            - 308.000000
