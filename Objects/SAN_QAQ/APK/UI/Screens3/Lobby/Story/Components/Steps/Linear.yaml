Header:
    version: 161
Prototypes:
-   class: "UIControl"
    name: "Linear"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
        UIDataParamsComponent:
            params:
            - ["StoryStepViewModel", "model", "null", "{ \"step\" = { \"rewards\" = [ { \"type\" = ResourceType.vehicle; \"stuff\" = { \"quantity\" = 100500; }; }; { \"type\" = ResourceType.gold; \"basic\" = { \"quantity\" = 1000; }; }; { \"type\" = ResourceType.premium; \"basic\" = { \"quantity\" = 86400; }; }; ]; \"repeats\" = { \"quantity\" = 10; }; \"isFinished\" = false; \"isMain\" = true; }; \"isSelected\" = true; }"]
            - ["int", "firstId", "1", "1"]
            - ["StoryStepModel", "inProgressStep", "null", "{ }"]
            - ["int", "mainRewardIndex", "0", "0"]
            - ["string", "bgImage", "\"\"", "\"http://smartdlc.wgtest.net/assets/Gfx/Lobby/events/2024-CELEBS/2024-CELEBS_bg_5\""]
            - ["float", "maximumProgress", "0.000000", "151.000000 / 256.000000"]
            - ["int", "selectOffset", "-1", "0"]
            events:
            - "SHOW_STEP_INFO(int id)"
            - "SELECT_STEP(int id)"
        UIDataLocalVarsComponent:
            data:
            - ["float", "offsetSize", "160.000000"]
            - ["float", "offset", "when model.isSelected -> offsetSize, 0.000000"]
            - ["float", "iconBrightness", "-70.000000"]
            - ["float", "selectedOpacity", "when model.isSelected and not model.step.isFinished -> 1.000000, 0.000000"]
        UIDataLocalBindingsComponent:
            data:
            - ["float", "bgOpacity", "when model.step.isFinished -> 1.000000, 0.700000"]
            - ["float", "rewardOpacity", "1.000000"]
            - ["int", "inProgressStepNetPrice", "when not isNull(inProgressStep) and inProgressStep.net.price.Contains(inProgressStep.price[0].stuff.name) -> inProgressStep.net.price[inProgressStep.price[0].stuff.name].stuff.quantity, 0"]
            - ["int", "inProgressStepPrice", "when not isNull(inProgressStep) and not inProgressStep.price.Empty() -> inProgressStep.price[0].stuff.quantity, 0"]
            - ["float", "inProgressStepProgress", "when (inProgressStepPrice - inProgressStepNetPrice) > 0 -> (float(inProgressStepPrice - inProgressStepNetPrice) / float(inProgressStepPrice)), 0.000000"]
            - ["float", "progressValue", "when isNull(inProgressStep) or inProgressStep.id > model.step.id -> maximumProgress, inProgressStep.id == model.step.id -> inProgressStepProgress * maximumProgress, 0.000000"]
            - ["bool", "isRepeatable", "model.step.repeats.quantity > 1 or model.step.repeats.isInfinite"]
            - ["int", "repeatsLeft", "model.step.repeats.quantity - model.step.repeats.timesCompleted"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Story/Components/Steps/Linear.actions"
    children:
    -   class: "UIControl"
        name: "ContentHolder"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonDecorator.yaml"
                args:
                    "content": "Content"
                    "sound": "when model.isSelected -> eButtonSound.OPEN, eButtonSound.CHOOSE"
                    "isSelected": "when not model.step.isFinished -> model.isSelected, false"
                    "hasInput": "not model.step.isFinished"
                    "ltrbSafeZone": "vec4(2.000000, 2.000000, 2.000000, 2.000000)"
                    "pushScale": "vec2(0.980000, 0.980000)"
                eventActions:
                - ["PUSH", "PUSH", "_event.scale, _event.opacity, _event.time"]
                - ["PULL", "PULL", "_event.time"]
                - ["HOVER", "HOVER", "_event.brightness, _event.time"]
                - ["CANCEL_HOVER", "CANCEL_HOVER", "_event.time"]
                - ["SELECT", "SELECT", "_event.time"]
                - ["CANCEL_SELECT", "CANCEL_SELECT", "_event.time"]
                - ["ON_TOUCH", "ON_TOUCH", "model.step.id"]
Slots:
-   class: "UIControl"
    name: "FxWrapper"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    bindings:
    - ["visible", "model.step.net.price.Empty() and not model.step.isFinished"]
    children:
    -   class: "UIParticles"
        name: "Fx"
        scale: [3.200000, 3.200000]
        pivot: [0.500000, 0.500000]
        input: false
        effectPath: "~res:/3d/FX/UI/BattlePass/GlowReward.sc2"
        autoStart: true
        components:
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
-   class: "UIControl"
    name: "Content"
    input: false
    components:
        ClipContent: {}
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
    children:
    -   class: "UIControl"
        name: "Body"
        pivot: [0.500000, 0.500000]
        input: false
        components:
            UIOpacityComponent: {}
            ClipContent:
                left: false
                right: false
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
        children:
        -   class: "UIControl"
            name: "Bg"
            input: false
            components:
                UIOpacityComponent: {}
                UITextureComponent:
                    materialPath: "~res:/Materials.custom/2d.Textured.HSV.material"
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "max (content, 164)"
                    verticalPolicy: "Formula"
                    verticalFormula: "max (content, 640)"
            bindings:
            - ["UIOpacityComponent.opacity", "bgOpacity"]
            - ["UITextureComponent.spritePath", "bgImage"]
            - ["UITextureComponent.materialParams", "\"progress,\" + str(progressValue) + \"; hue,0; saturation,0; value,-70\""]
        -   class: "UIControl"
            name: "BrightnessWrapper"
            input: false
            components:
                UIOpacityComponent:
                    opacity: 0.070000
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIControl"
                name: "Brightness"
                input: false
                classes: "white-wild-sand-bg"
                components:
                    Background: {}
                    UIOpacityComponent:
                        opacity: 0.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
        -   class: "UIControl"
            name: "SafeArea"
            input: false
            components:
                Anchor:
                    bottomAnchorEnabled: true
                LinearLayout:
                    orientation: "TopDown"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfChildrenSum"
            children:
            -   class: "UIControl"
                name: "Group"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "FixedSize"
                        verticalValue: 640.000000
                children:
                -   class: "UIControl"
                    name: "SelectedWrapper"
                    input: false
                    components:
                        Anchor:
                            bottomAnchorEnabled: true
                        LinearLayout:
                            orientation: "TopDown"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfChildrenSum"
                    bindings:
                    - ["visible", "selectOffset >= 0"]
                    - ["Anchor.bottomAnchor", "selectOffset"]
                    children:
                    -   class: "UIControl"
                        name: "Top"
                        pivot: [0.000000, 0.500000]
                        input: false
                        components:
                            UIOpacityComponent: {}
                            ClipContent: {}
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "FixedSize"
                        bindings:
                        - ["UIOpacityComponent.opacity", "selectedOpacity"]
                        - ["SizePolicy.verticalValue", "offset"]
                        children:
                        -   class: "UIControl"
                            name: "BgHolder"
                            input: false
                            components:
                                Anchor:
                                    topAnchorEnabled: true
                                SizePolicy:
                                    horizontalPolicy: "PercentOfParent"
                                    verticalPolicy: "PercentOfFirstChild"
                                UIChildComponent0:
                                    childType: "kControl"
                                    control: "Backgrounds"
                    -   class: "UIControl"
                        name: "Selected"
                        input: false
                        classes: "orange-orange-peel-bg"
                        components:
                            Background: {}
                            UIOpacityComponent: {}
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "FixedSize"
                                verticalValue: 4.000000
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Color.style.yaml"
                        bindings:
                        - ["UIOpacityComponent.opacity", "selectedOpacity"]
                -   class: "UIControl"
                    name: "RewardWrapper"
                    input: false
                    components:
                        UIOpacityComponent: {}
                        Anchor:
                            hCenterAnchorEnabled: true
                            topAnchorEnabled: true
                            topAnchor: 304.000000
                        LinearLayout:
                            orientation: "TopDown"
                            spacing: 24.000000
                            skipInvisible: false
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfChildrenSum"
                    bindings:
                    - ["visible", "not model.step.isFinished"]
                    - ["UIOpacityComponent.opacity", "rewardOpacity"]
                    children:
                    -   class: "UIControl"
                        name: "RewardHolder"
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "FixedSize"
                                verticalValue: 160.000000
                            UIChildComponent0:
                                childType: "kPrototype"
                                condition: "not model.step.rewards.Empty() and not (model.step.rewards[mainRewardIndex].type == ResourceType.vehicle and model.step.rewards[mainRewardIndex].vehicle.info.technicalName == \"MS-1obr21\")"
                                prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/Detailed/Big.yaml"
                                args:
                                    "fx": "FxWrapper"
                                    "resource": "model.step.rewards[mainRewardIndex]"
                            UIChildComponent1:
                                childType: "kControl"
                                condition: "not model.step.rewards.Empty() and model.step.rewards[mainRewardIndex].type == ResourceType.vehicle and model.step.rewards[mainRewardIndex].vehicle.info.technicalName == \"MS-1obr21\""
                                control: "MS1"
                    -   class: "UIControl"
                        name: "OtherRewards"
                        input: false
                        components:
                            Anchor:
                                hCenterAnchorEnabled: true
                            LinearLayout:
                                orientation: "TopDown"
                            SizePolicy:
                                horizontalPolicy: "PercentOfMaxChild"
                                verticalPolicy: "PercentOfChildrenSum"
                            UIRepeatComponent:
                                control: "~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml"
                                dataContainer: "model.step.rewards"
                                args:
                                    "resource": "when _index != mainRewardIndex -> _item, null"
                                    "currencySize": "eCurrencySize.HUGE_PROXY"
                                    "shortTime": "true"
                -   class: "UIControl"
                    name: "IdWrapper"
                    input: false
                    components:
                        Anchor:
                            bottomAnchorEnabled: true
                            bottomAnchor: 376.000000
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "Formula"
                            verticalFormula: "lastChild + 4"
                    bindings:
                    - ["visible", "not model.step.isFinished"]
                    children:
                    -   class: "UIControl"
                        name: "Bg"
                        input: false
                        classes: "grey-shark-70-bg"
                        components:
                            Background: {}
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfParent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Color.style.yaml"
                    -   class: "UIControl"
                        name: "Info"
                        input: false
                        classes: "white-wild-sand-50-bg"
                        components:
                            Background:
                                drawType: "DRAW_ALIGNED"
                                sprite: "~res:/Gfx/Lobby/icons/icon_info_xs"
                                perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
                            UIOpacityComponent: {}
                            Anchor:
                                hCenterAnchorEnabled: true
                                vCenterAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "FixedSize"
                                horizontalValue: 16.000000
                                verticalPolicy: "FixedSize"
                                verticalValue: 16.000000
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Color.style.yaml"
                        bindings:
                        - ["visible", "not model.step.isFinished"]
                        - ["UIOpacityComponent.opacity", "selectedOpacity"]
                    -   class: "UIControl"
                        name: "Id"
                        input: false
                        classes: "t-body bold white-wild-sand-text not-localize"
                        components:
                            UIOpacityComponent: {}
                            UITextComponent: {}
                            Anchor:
                                hCenterAnchorEnabled: true
                                vCenterAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfContent"
                                verticalPolicy: "PercentOfContent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml"
                        bindings:
                        - ["UIOpacityComponent.opacity", "1.000000 - selectedOpacity"]
                        - ["UITextComponent.text", "(model.step.id - (firstId - 1)) % 10000"]
                -   class: "UIControl"
                    name: "RepeatLabel"
                    input: false
                    components:
                        Anchor:
                            hCenterAnchorEnabled: true
                            bottomAnchorEnabled: true
                            bottomAnchor: 336.000000
                        SizePolicy:
                            horizontalPolicy: "PercentOfFirstChild"
                            verticalPolicy: "PercentOfFirstChild"
                        UIChildComponent0:
                            condition: "isRepeatable and repeatsLeft > 1"
                            prototypePath: "~res:/UI/Screens3/Common/RemainingLabel.yaml"
                            args:
                                "isShort": "false"
                                "isInfinite": "model.step.repeats.isInfinite"
                                "left": "repeatsLeft"
                                "bgStyle": "\"red-tamarillo-bg\""
                -   class: "UIControl"
                    name: "Completed"
                    input: false
                    components:
                        UITextureComponent:
                            spritePath: "~res:/Gfx/Lobby/icons/icon_tick_xl"
                        Anchor:
                            hCenterAnchorEnabled: true
                            bottomAnchorEnabled: true
                            bottomAnchor: 209.000000
                        SizePolicy:
                            horizontalPolicy: "PercentOfContent"
                            verticalPolicy: "PercentOfContent"
                    bindings:
                    - ["visible", "model.step.isFinished"]
            -   class: "UIControl"
                name: "Spacer"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "Formula"
                        verticalFormula: "safeAreaInsets.bottom"
                bindings:
                - ["visible", "selectOffset >= 0"]
-   class: "UIControl"
    name: "Backgrounds"
    size: [150.000000, 144.000000]
    input: false
    components:
        UIOpacityComponent:
            opacity: 0.500000
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "FixedSize"
            verticalValue: 320.000000
    children:
    -   class: "UIControl"
        name: "Big"
        input: false
        classes: "red-tamarillo-bg"
        components:
            Background:
                drawType: "DRAW_STRETCH_BOTH"
                sprite: "~res:/Gfx/UI/ProfileScreen/rating_gradient"
            Anchor:
                hCenterAnchorEnabled: true
                topAnchorEnabled: true
                topAnchor: 40.000000
                bottomAnchorEnabled: true
                bottomAnchor: 40.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
    -   class: "UIControl"
        name: "Medium"
        input: false
        classes: "red-tamarillo-bg"
        components:
            Background:
                drawType: "DRAW_STRETCH_BOTH"
                sprite: "~res:/Gfx/UI/ProfileScreen/rating_gradient"
            Anchor:
                hCenterAnchorEnabled: true
                topAnchorEnabled: true
                topAnchor: 20.000000
                bottomAnchorEnabled: true
                bottomAnchor: 20.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                horizontalValue: 67.000000
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
    -   class: "UIControl"
        name: "Small"
        input: false
        classes: "red-tamarillo-bg"
        components:
            Background:
                drawType: "DRAW_STRETCH_BOTH"
                sprite: "~res:/Gfx/UI/ProfileScreen/rating_gradient"
            Anchor:
                hCenterAnchorEnabled: true
                topAnchorEnabled: true
                bottomAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                horizontalValue: 28.000000
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
-   class: "UIControl"
    name: "MS1"
    size: [160.000000, 160.000000]
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "Content"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                bottomAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
                spacing: 4.000000
                skipInvisible: false
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfChildrenSum"
        children:
        -   class: "UIControl"
            name: "IconWrapper"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
            children:
            -   class: "UIControl"
                name: "FxHolder"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIChildComponent0:
                        childType: "kControl"
                        control: "FxWrapper"
            -   class: "UIControl"
                name: "Icon"
                scale: [1.300000, 1.300000]
                pivot: [0.500000, 0.500000]
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 160.000000
                        verticalPolicy: "FixedSize"
                    UIChildComponent0:
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/Detailed/VehicleIcon.yaml"
                        args:
                            "vehicle": "model.step.rewards[mainRewardIndex].vehicle"
        -   class: "UIControl"
            name: "Name"
            input: false
            components:
                UITextComponent:
                    fitting: "FITTING_POINTS"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "Formula"
                    verticalFormula: "max(content, 24)"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;"
            bindings:
            - ["classes", "\"t-subtitle bold \" + (when not isNull(model.step.rewards[mainRewardIndex].vehicle) and (model.step.rewards[mainRewardIndex].vehicle.info.isPremium or model.step.rewards[mainRewardIndex].vehicle.stats.isPremiumized) -> \"yellow-lightning-text\", not isNull(model.step.rewards[mainRewardIndex].vehicle) and model.step.rewards[mainRewardIndex].vehicle.info.isCollectible -> \"blue-rimmi-text\", \"white-wild-sand-text\")"]
            - ["UITextComponent.text", "when not isNull(model.step.rewards[mainRewardIndex].vehicle) -> localize(model.step.rewards[mainRewardIndex].vehicle.info.shortName), \"\""]
