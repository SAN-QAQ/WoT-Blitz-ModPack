Header:
    version: 161
ImportedPackages:
- "~res:/UI/Screens3/Common/BlurModified.yaml"
Prototypes:
-   class: "UIControl"
    name: "CustomRepeatable"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
        UIDataParamsComponent:
            params:
            - ["StoryStepViewModel", "model", "null", "{ \"step\" = { \"rewards\" = [ { \"type\" = ResourceType.vehicle; }; ]; \"repeats\" = { \"quantity\" = 3; }; \"isFinished\" = false; \"isMain\" = true; }; \"isSelected\" = true; }"]
            - ["StoryStepModel", "bonus", "null", "{ }"]
            - ["string", "imagePath", "\"\"", "\"~res:/Gfx/Lobby/events/2023-NY/bowl\""]
            - ["bool", "showPrice", "true", "true"]
            - ["control", "overlayIdleFx", "null", "null"]
            - ["control", "overlayReadyFx", "null", "null"]
            - ["control", "fx", "null", "null"]
            events:
            - "DESELECT"
            - "SHOW_STEP_INFO(int id)"
            - "SELECT_STEP(int id)"
        UIDataLocalVarsComponent:
            data:
            - ["float", "iconBrightness", "0.000000"]
            - ["float", "selectedOpacity", "when model.isSelected -> 1.000000, 0.000000"]
        UIDataLocalBindingsComponent:
            data:
            - ["bool", "isCompositeStep", "not isNull(model.compositeStep) and not model.compositeStep.steps.Empty()"]
            - ["bool", "isStepWithBonus", "not isNull(model.stepWithBonus) and not isNull(model.stepWithBonus.step) and not isNull(model.stepWithBonus.bonus)"]
            - ["StoryStepModel", "step", "when isCompositeStep -> model.compositeStep.steps[model.compositeStep.currentIndex], isStepWithBonus and not model.stepWithBonus.isBonusActive -> model.stepWithBonus.step, isStepWithBonus and model.stepWithBonus.isBonusActive -> model.stepWithBonus.bonus, model.step"]
            - ["bool", "hasProgressLine", "isStepWithBonus or not isNull(bonus)"]
            - ["ResourceDetailed", "bonusPrice", "when isStepWithBonus and not model.stepWithBonus.bonus.price.Empty() -> model.stepWithBonus.bonus.price[0], not isNull(bonus) and not bonus.price.Empty() -> bonus.price[0], null"]
            - ["int", "maxProgreesValue", "when not isNull(bonusPrice) and not isNull(bonusPrice.stuff) -> bonusPrice.stuff.quantity, 0"]
            - ["int", "startValue", "when isStepWithBonus and not model.stepWithBonus.bonus.net.price.Empty() -> maxProgreesValue - model.stepWithBonus.bonus.net.price[model.stepWithBonus.bonus.price[0].stuff.name].stuff.quantity, isStepWithBonus and model.stepWithBonus.bonus.net.price.Empty() -> maxProgreesValue, not isNull(bonus) and not bonus.net.price.Empty() -> maxProgreesValue - bonus.net.price[bonus.price[0].stuff.name].stuff.quantity, not isNull(bonus) and bonus.net.price.Empty() -> maxProgreesValue, 0"]
            - ["int", "startCount", "startValue"]
            - ["float", "startProgressValue", "(float(startValue) / float(maxProgreesValue)) * 138.000000"]
            - ["bool", "isFreeStep", "(not isNull(step.price[0].stuff) and step.price[0].stuff.quantity == 0) or (not isNull(step.price[0].basic) and step.price[0].basic.quantity == 0) or (isStepWithBonus and model.stepWithBonus.bonus.net.price.Empty()) or (not isNull(bonus) and bonus.net.price.Empty())"]
            - ["color", "progressShadowColor", "when isFreeStep -> rgb(16722432), rgb(0)"]
            - ["bool", "isReady", "step.net.price.Empty() and not step.isFinished"]
            - ["bool", "isLocked", "when isCompositeStep and model.compositeStep.currentIndex > 0 -> not model.compositeStep.steps[model.compositeStep.currentIndex - 1].isFinished, false"]
            - ["bool", "isRepeatable", "step.repeats.quantity > 1 or step.repeats.isInfinite"]
            - ["int", "repeatsLeft", "when isRepeatable and not step.repeats.isInfinite -> step.repeats.quantity - step.repeats.timesCompleted, 0"]
            - ["float", "contentOpacity", "when step.isFinished -> 0.100000, isLocked -> 0.500000, 1.000000"]
            - ["bool", "readyForFreeOpen", "startValue == maxProgreesValue"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Story/Components/Steps/CustomRepeatable.actions"
    children:
    -   class: "UIControl"
        name: "ContentHolder"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/ButtonDecorator.yaml"
                args:
                    "content": "Content"
                    "sound": "when not model.isSelected -> eButtonSound.CHOOSE, eButtonSound.OPEN"
                    "isSelected": "when not step.isFinished -> model.isSelected, false"
                    "hasInput": "not step.isFinished"
                    "ltrbTapZone": "vec4(8.000000, 8.000000, 8.000000, -18.000000)"
                    "ltrbSafeZone": "vec4(8.000000, 8.000000, 8.000000, 8.000000)"
                eventActions:
                - ["PUSH", "PUSH", "_event.scale, _event.opacity, _event.time"]
                - ["PULL", "PULL", "_event.time"]
                - ["HOVER", "HOVER", "_event.brightness, _event.time"]
                - ["CANCEL_HOVER", "CANCEL_HOVER", "_event.time"]
                - ["SELECT", "SELECT", "_event.time"]
                - ["CANCEL_SELECT", "CANCEL_SELECT", "_event.time"]
                - ["ON_TOUCH", "ON_TOUCH", "step.id"]
Slots:
-   class: "UIControl"
    name: "Overlay"
    size: [160.000000, 160.000000]
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "Completed"
        input: false
        components:
            UIOpacityComponent:
                ignoreParentOpacity: true
            UITextureComponent:
                spritePath: "~res:/Gfx/Lobby/icons/icon_tick_xl"
            Anchor:
                leftAnchorEnabled: true
                leftAnchor: 68.000000
                topAnchorEnabled: true
                topAnchor: 130.000000
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
        bindings:
        - ["visible", "step.isFinished"]
    -   class: "UIControl"
        name: "Locked"
        input: false
        components:
            UIOpacityComponent:
                ignoreParentOpacity: true
            UITextureComponent:
                spritePath: "~res:/Gfx/Lobby/icons/icon_lock_m"
            Anchor:
                leftAnchorEnabled: true
                leftAnchor: 68.000000
                topAnchorEnabled: true
                topAnchor: 130.000000
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
        bindings:
        - ["visible", "isLocked"]
-   class: "UIControl"
    name: "Content"
    pivot: [0.500000, 0.500000]
    input: false
    components:
        UIOpacityComponent: {}
        Anchor:
            hCenterAnchorEnabled: true
            vCenterAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
    bindings:
    - ["UIOpacityComponent.opacity", "contentOpacity"]
    children:
    -   class: "UIControl"
        name: "IconWrapper"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfMaxChild"
        children:
        -   prototype: "BlurModified/BlurModified"
            name: "Blur"
            components:
                UIDataParamsComponent:
                    args:
                        "blurOpacity": "selectedOpacity"
        -   class: "UIControl"
            name: "UnderlayFx"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "isReady and not isNull(fx)"
                    control: "fx"
        -   class: "UIControl"
            name: "Icon"
            input: false
            components:
                UITextureComponent:
                    materialPath: "~res:/Materials.custom/2d.Textured.HSV.material"
                    perPixelAccuracy: "PER_PIXEL_ACCURACY_FORCED"
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
            bindings:
            - ["UITextureComponent.spritePath", "imagePath"]
            - ["UITextureComponent.materialParams", "\"value,\" + str(int(iconBrightness))"]
        -   class: "UIControl"
            name: "OverlayIdleFx"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "not isNull(overlayIdleFx)"
                    control: "overlayIdleFx"
        -   class: "UIControl"
            name: "OverlayReadyFx"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "isReady and not isNull(overlayReadyFx)"
                    control: "overlayReadyFx"
        -   class: "UIControl"
            name: "Overlay"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "step.isFinished or isLocked"
                    control: "Overlay"
    -   class: "UIControl"
        name: "Selected"
        input: false
        components:
            UIOpacityComponent:
                ignoreParentOpacity: true
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/Selection.yaml"
                args:
                    "selectionType": "eSelectionBorderType.kRect"
                    "isVisible": "true"
        bindings:
        - ["UIOpacityComponent.opacity", "selectedOpacity"]
    -   class: "UIControl"
        name: "CornerIcon"
        input: false
        components:
            UIOpacityComponent:
                ignoreParentOpacity: true
            Anchor:
                rightAnchorEnabled: true
                rightAnchor: 8.000000
                topAnchorEnabled: true
                topAnchor: 8.000000
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
        children:
        -   class: "UIControl"
            name: "Info"
            input: false
            classes: "white-wild-sand-50-bg"
            components:
                Background:
                    drawType: "DRAW_ALIGNED"
                    sprite: "~res:/Gfx/Lobby/icons/icon_info_xs"
                UIOpacityComponent: {}
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 16.000000
                    verticalPolicy: "FixedSize"
                    verticalValue: 16.000000
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["UIOpacityComponent.opacity", "selectedOpacity"]
    -   class: "UIControl"
        name: "InfoArea"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                bottomAnchorEnabled: true
                bottomAnchor: 32.000000
            LinearLayout:
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfMaxChild"
        children:
        -   class: "UIControl"
            name: "ProgressBlock"
            input: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                LinearLayout:
                    orientation: "TopDown"
                    spacing: 4.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfLastChild"
                    verticalPolicy: "PercentOfChildrenSum"
            bindings:
            - ["visible", "hasProgressLine"]
            children:
            -   class: "UIControl"
                name: "Text"
                input: false
                classes: "t-caps bold white-wild-sand-text align-left"
                components:
                    UITextComponent:
                        forceBiDiSupport: false
                    UIShadowComponent:
                        radius: 4
                        color: [0.000000, 0.000000, 0.000000, 1.000000]
                        canBeDelayed: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfContent"
                        verticalPolicy: "PercentOfContent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Font.style.yaml"
                bindings:
                - ["UITextComponent.text", "when readyForFreeOpen -> capitalize(localize(\"2023-NY/Content/FreeChest\")), capitalize(localize(\"2023-NY/Content/ForFreeChest\"))"]
            -   class: "UIControl"
                name: "ProgressWrapper"
                input: false
                components:
                    LinearLayout:
                        spacing: 16.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "PercentOfMaxChild"
                children:
                -   class: "UIParticles"
                    name: "FxProgress"
                    scale: [0.700000, 0.700000]
                    pivot: [0.500000, 0.500000]
                    input: false
                    autoStart: true
                    components:
                        Anchor:
                            leftAnchorEnabled: true
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "FixedSize"
                            horizontalValue: 138.000000
                            verticalPolicy: "PercentOfParent"
                    bindings:
                    - ["visible", "readyForFreeOpen"]
                    - ["effectPath", "when readyForFreeOpen -> \"~res:/3d/FX/UI/BattleResult/TeamTable/GlowLineLose.sc2\", \"\""]
                -   class: "UIControl"
                    name: "Progress"
                    input: false
                    classes: "white-wild-sand-15-bg"
                    components:
                        Background: {}
                        UIRoundedCornersComponent:
                            radius: "2"
                        Anchor:
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "FixedSize"
                            horizontalValue: 138.000000
                            verticalPolicy: "FixedSize"
                            verticalValue: 4.000000
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                    children:
                    -   class: "UIControl"
                        name: "ProgressActive"
                        input: false
                        classes: "yellow-chalky-bg"
                        components:
                            Background: {}
                            UIRoundedCornersComponent:
                                radius: "2"
                            Anchor:
                                vCenterAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "FixedSize"
                                verticalPolicy: "FixedSize"
                                verticalValue: 4.000000
                        bindings:
                        - ["SizePolicy.horizontalValue", "startProgressValue"]
                -   class: "UIControl"
                    name: "CountBlock"
                    input: false
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                        LinearLayout:
                            spacing: 10.000000
                        SizePolicy:
                            horizontalPolicy: "PercentOfChildrenSum"
                            verticalPolicy: "PercentOfMaxChild"
                    children:
                    -   class: "UIControl"
                        name: "CountWrapper"
                        input: false
                        components:
                            LinearLayout:
                                spacing: 2.000000
                            SizePolicy:
                                horizontalPolicy: "PercentOfChildrenSum"
                                verticalPolicy: "PercentOfFirstChild"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml"
                        children:
                        -   class: "UIControl"
                            name: "CurrentCount"
                            input: false
                            components:
                                UITextComponent: {}
                                UIShadowComponent:
                                    radius: 4
                                    canBeDelayed: true
                                Anchor:
                                    vCenterAnchorEnabled: true
                                SizePolicy:
                                    horizontalPolicy: "PercentOfContent"
                                    verticalPolicy: "PercentOfContent"
                            bindings:
                            - ["classes", "when readyForFreeOpen -> \"t-caption bold yellow-chalky-text not-localize\", \"t-caption bold white-wild-sand-text not-localize\""]
                            - ["UITextComponent.text", "startCount"]
                            - ["UIShadowComponent.color", "progressShadowColor"]
                        -   class: "UIControl"
                            name: "Slash"
                            input: false
                            classes: "t-caption not-localize regular white-wild-sand-70-text"
                            components:
                                UITextComponent:
                                    text: "/"
                                UIShadowComponent:
                                    radius: 4
                                    canBeDelayed: true
                                Anchor:
                                    vCenterAnchorEnabled: true
                                SizePolicy:
                                    horizontalPolicy: "PercentOfContent"
                                    verticalPolicy: "PercentOfContent"
                            bindings:
                            - ["UIShadowComponent.color", "progressShadowColor"]
                        -   class: "UIControl"
                            name: "TotalCount"
                            input: false
                            classes: "t-caption not-localize regular white-wild-sand-70-text"
                            components:
                                UITextComponent: {}
                                UIShadowComponent:
                                    radius: 4
                                    canBeDelayed: true
                                Anchor:
                                    vCenterAnchorEnabled: true
                                SizePolicy:
                                    horizontalPolicy: "PercentOfContent"
                                    verticalPolicy: "PercentOfContent"
                            bindings:
                            - ["UITextComponent.text", "maxProgreesValue"]
                            - ["UIShadowComponent.color", "progressShadowColor"]
                        -   class: "UIControl"
                            name: "Icon"
                            input: false
                            components:
                                Anchor:
                                    vCenterAnchorEnabled: true
                                SizePolicy:
                                    horizontalPolicy: "PercentOfFirstChild"
                                    verticalPolicy: "PercentOfFirstChild"
                                UIChildComponent0:
                                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml"
                                    args:
                                        "resource": "bonusPrice"
                                        "currencySize": "eCurrencySize.BIG"
                                        "forceHideValue": "true"
    -   class: "UIControl"
        name: "Label"
        input: false
        components:
            Anchor:
                leftAnchorEnabled: true
                leftAnchor: 8.000000
                topAnchorEnabled: true
                topAnchor: 8.000000
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "isRepeatable and (repeatsLeft > 1 or step.repeats.isInfinite)"
                prototypePath: "~res:/UI/Screens3/Common/RemainingLabel.yaml"
                args:
                    "isShort": "false"
                    "isInfinite": "step.repeats.isInfinite"
                    "left": "repeatsLeft"
                    "bgStyle": "\"red-tamarillo-bg\""
        bindings:
        - ["visible", "isRepeatable and (repeatsLeft > 1 or step.repeats.isInfinite) and not (isStepWithBonus and model.stepWithBonus.isBonusActive)"]
    -   class: "UIControl"
        name: "PriceWrapper"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                bottomAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfMaxChild"
        children:
        -   class: "UIControl"
            name: "Price"
            input: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    bottomAnchorEnabled: true
                LinearLayout:
                    spacing: 8.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfMaxChild"
                UIRepeatComponent:
                    control: "~res:/UI/Screens3/Lobby/Common/Resource/CurrencyAdapter.yaml"
                    dataContainer: "when not step.isFinished -> step.price, null"
                    args:
                        "currencySize": "eCurrencySize.BIG"
                        "plusVisible": "_index != (step.price.Size() - 1)"
                        "resource": "_item"
            bindings:
            - ["visible", "showPrice and not step.isFinished and not isFreeStep"]
        -   class: "UIControl"
            name: "Free"
            input: false
            classes: "t-subtitle regular white-wild-sand-text align-left"
            components:
                UITextComponent: {}
                UIShadowComponent:
                    radius: 4
                    textureScale: 0.800000
                    color: [1.000000, 0.164706, 0.000000, 1.000000]
                    canBeDelayed: true
                Anchor:
                    hCenterAnchorEnabled: true
                    bottomAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfParent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
            bindings:
            - ["visible", "isFreeStep"]
            - ["UITextComponent.text", "localize(\"2023-NY/Content/CostFree\")"]
