Header:
    version: 151
Prototypes:
-   class: "UIControl"
    name: "ClanNotificationCell"
    size: [608.000000, 64.000000]
    classes: "grey-shark-25-bg touchable hoverable button-open-sound"
    components:
        Background: {}
        UIRoundedCornersComponent:
            radius: "8"
        Anchor:
            hCenterAnchorEnabled: true
        LinearLayout: {}
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 664.000000
            verticalPolicy: "PercentOfMaxChild"
            verticalMin: 64.000000
            verticalMax: 80.000000
        UIInputEventComponent:
            onTouchUpInside: "NotificationSelected"
            onTouchUpInsideData: "model"
        UIDataParamsComponent:
            params:
            - ["ClanNotification", "model", "null", "{ \"dateTime\" = 0L; }"]
        UIDataLocalVarsComponent:
            data:
            - ["string", "clanRoleString", "localize(str(model.clanRole, eClanRole, \"key\"))"]
            - ["string", "inviteMessage", "\"Clans/Notifications/InviteMessage\""]
            - ["string", "inviteAcceptedMessage", "\"Clans/Notifications/InviteAcceptedMessage\""]
            - ["string", "applicationAcceptedMessage", "\"Clans/Notifications/ApplicationAcceptedMessage\""]
            - ["string", "applicationRejectedMessage", "\"Clans/Notifications/ApplicationRejectedMessage\""]
            - ["string", "newRoleMessage", "\"Clans/Notifications/NewRoleMessage\""]
            - ["string", "dismissMessage", "\"Clans/Notifications/DismissMessage\""]
            - ["string", "quitMessage", "\"Clans/Notifications/PlayerLeft\""]
            - ["string", "message", "when model.type == eClanNotificationType.Invite -> localize(inviteMessage), model.type == eClanNotificationType.InviteAccepted -> localize(inviteAcceptedMessage, { \"userName\" = model.accountName; }), model.type == eClanNotificationType.ApplicationAccepted -> localize(applicationAcceptedMessage), model.type == eClanNotificationType.ApplicationRejected -> localize(applicationRejectedMessage), model.type == eClanNotificationType.NewRole -> localize(newRoleMessage, { \"clanRole\" = clanRoleString; }), model.type == eClanNotificationType.Dismiss -> localize(dismissMessage), model.type == eClanNotificationType.Quit -> localize(quitMessage, { \"userName\" = model.accountName; }), \"\""]
        Sound: {}
        StyleSheet:
            styles: "~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Common/Touch.style.yaml;~res:/UI/Screens3/Common/Hover.style.yaml;~res:/UI/Screens3/ButtonSound.style.yaml"
    children:
    -   class: "UIControl"
        name: "blur"
        components:
            Background:
                usePostProcessedSprite: true
            UIPostProcessTextureComponent0:
                materialPath: "~res:/Materials.custom/2d.Textured.Blur.material"
                needClearAlphaAfterRender: true
                scale: 0.500000
                useVirtualCoordinateSystem: true
                minFilter: "Linear"
                magFilter: "Linear"
            UIPostProcessTextureComponent1:
                materialPath: "~res:/Materials.custom/2d.Textured.HBlur.material"
                scale: 0.500000
                useVirtualCoordinateSystem: true
                minFilter: "Linear"
                magFilter: "Linear"
            UIPostProcessTextureComponent2:
                materialPath: "~res:/Materials.custom/2d.Textured.UpscaleClamp.material"
                scale: 0.500000
                useVirtualCoordinateSystem: true
                minFilter: "Linear"
                magFilter: "Linear"
            UIRoundedCornersComponent:
                radius: "8"
    -   class: "UIControl"
        name: "icon"
        input: false
        classes: "white-wild-sand-bg"
        components:
            Background:
                drawType: "DRAW_ALIGNED"
                sprite: "~res:/Gfx/Lobby/icons/icon_clans_s"
                perPixelAccuracy: "PER_PIXEL_ACCURACY_FORCED"
            Anchor:
                leftAnchorEnabled: true
                leftAnchor: 7.000000
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 56.000000
                verticalPolicy: "FixedSize"
                verticalValue: 56.000000
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
        bindings:
        - ["visible", "model.type != eClanNotificationType.Invite or model.clanIconUrl == \"\""]
    -   class: "UIControl"
        name: "ClanIconContainer"
        input: false
        components:
            LinearLayout:
                padding: "10"
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfParent"
        bindings:
        - ["visible", "model.type == eClanNotificationType.Invite and model.clanIconUrl != \"\""]
        children:
        -   class: "UIControl"
            name: "ClanIcon"
            input: false
            classes: "white-wild-sand-bg"
            components:
                Background:
                    drawType: "DRAW_SCALE_TO_RECT"
                    perPixelAccuracy: "PER_PIXEL_ACCURACY_FORCED"
                UIUrlImageComponent: {}
                Anchor:
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 36.000000
                    verticalPolicy: "FixedSize"
                    verticalValue: 36.000000
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["UIUrlImageComponent.imageUrl", "model.clanIconUrl"]
    -   class: "UIControl"
        name: "Content"
        position: [75.000000, 0.000000]
        size: [931.000000, 84.000000]
        input: false
        components:
            Anchor:
                vCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfChildrenSum"
            UIAnchorSafeAreaComponent:
                leftSafeInset: "INSET"
                rightSafeInset: "INSET"
        children:
        -   class: "UIControl"
            name: "ClanName"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Lobby/Clan/Common/ClanNameWithTag.yaml"
                    args:
                        "fontStyle": "\"t-caption bold yellow-lightning-text\""
                        "tag": "model.clanTag"
                        "name": "model.clanName"
        -   class: "UIControl"
            name: "Description"
            input: false
            components:
                RichContent:
                    baseClasses: "t-caption regular white-wild-sand-text"
                RichContentAliases0:
                    aliases:
                    - ["white_bold", "<span class=\"t-caption bold color=white-wild-sand-text\" />"]
                Anchor:
                    leftAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "min(parentRest, childrenSum)"
                    verticalPolicy: "PercentOfChildrenSum"
                FlowLayout:
                    hSpacing: 4.000000
                    vSpacing: -4.000000
                    useRtl: true
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["RichContent.text", "message"]
    -   class: "UIControl"
        name: "DateTime"
        input: false
        components:
            Anchor:
                vCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfChildrenSum"
        children:
        -   class: "UIControl"
            name: "Date"
            input: false
            classes: "t-caption regular white-wild-sand-70-text"
            components:
                UITextComponent: {}
                Anchor:
                    rightAnchorEnabled: true
                    rightAnchor: 16.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["UITextComponent.text", "date(model.dateTime)"]
        -   class: "UIControl"
            name: "Time"
            input: false
            classes: "t-caption regular white-wild-sand-70-text"
            components:
                UITextComponent: {}
                Anchor:
                    rightAnchorEnabled: true
                    rightAnchor: 16.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["UITextComponent.text", "date(model.dateTime, \"%H:%M\")"]
    -   class: "UIControl"
        name: "BadgeHolder"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor:
                rightAnchorEnabled: true
                rightAnchor: -8.000000
                topAnchorEnabled: true
                topAnchor: -8.000000
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/BadgeHolder.yaml"
                args:
                    "type": "eBadgeType.Camouflage"
        bindings:
        - ["visible", "model.isUnread"]
