Header:
    version: 152
Prototypes:
-   class: "UIControl"
    name: "ClanLeaderboardItem"
    size: [340.000000, 200.000000]
    components:
        Background:
            usePostProcessedSprite: true
        UIPostProcessTextureComponent0:
            materialPath: "~res:/Materials.custom/2d.Textured.Blur.material"
            needClearAlphaAfterRender: true
            needDepth: true
            scale: 0.500000
            useVirtualCoordinateSystem: true
            minFilter: "Linear"
            magFilter: "Linear"
        UIPostProcessTextureComponent1:
            materialPath: "~res:/Materials.custom/2d.Textured.HBlur.material"
            scale: 0.500000
            useVirtualCoordinateSystem: true
            minFilter: "Linear"
            magFilter: "Linear"
        UIPostProcessTextureComponent2:
            materialPath: "~res:/Materials.custom/2d.Textured.UpscaleClamp.material"
            scale: 0.500000
            useVirtualCoordinateSystem: true
            minFilter: "Linear"
            magFilter: "Linear"
        UIRoundedCornersComponent:
            radius: "4;4;0;0"
        Anchor:
            bottomAnchorEnabled: true
        LinearLayout:
            orientation: "TopDown"
            spacing: 4.000000
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "FixedSize"
            verticalValue: 200.000000
        UIDataParamsComponent:
            params:
            - ["SessionDataModel", "session", "null", "{ }"]
            - ["PlayerInfo", "playerInfo", "null", "{ }"]
            - ["int", "place", "0", "2"]
            - ["float", "proportion", "0.000000", "0.500000"]
            - ["color", "startColor", "rgba(255, 194, 38, 1.000000)", "rgba(255, 194, 38, 1.000000)"]
            - ["color", "endColor", "rgba(255, 194, 38, 0.500000)", "rgba(255, 194, 38, 0.300000)"]
            - ["control", "rightContent", "null", "null"]
        UIDataLocalBindingsComponent:
            data:
            - ["bool", "isSelf", "when not isNull(playerInfo) -> session.dbid == playerInfo.nameModel.dbId, false"]
        Sound: {}
    children:
    -   class: "UIControl"
        name: "Spacer"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
    -   class: "UIControl"
        name: "PlayerInfoHolder"
        classes: "button-open-sound"
        components:
            Anchor:
                hCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "FixedSize"
                verticalValue: 77.000000
            UIInputEventComponent:
                onTouchUpInside: "SHOW_MEMBER_PROFILE"
                onTouchUpInsideData: "playerInfo.nameModel"
            UIChildComponent0:
                childType: "kControl"
                condition: "not isNull(playerInfo)"
                control: "PlayerInfo"
            Sound: {}
            StyleSheet:
                styles: "~res:/UI/Screens3/ButtonSound.style.yaml"
        bindings:
        - ["input", "not isNull(playerInfo)"]
    -   class: "UIControl"
        name: "GradientBar"
        input: false
        components:
            Background:
                drawType: "DRAW_FILL"
            UIOpacityComponent: {}
            UIGradientComponent:
                orientation: "TopDown"
            UIRoundedCornersComponent:
                radius: "4;4;0;0"
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "FixedSize"
        bindings:
        - ["UIOpacityComponent.opacity", "when not isNull(playerInfo) -> 0.7500000, 0.250000"]
        - ["UIGradientComponent.startColor", "startColor"]
        - ["UIGradientComponent.finishColor", "endColor"]
        - ["SizePolicy.verticalValue", "proportion * (108 - 50) + 50"]
        children:
        -   class: "UIControl"
            name: "GradientBorderLeft"
            input: false
            components:
                Background:
                    drawType: "DRAW_ALIGNED"
                    sprite: "~res:/Gfx/Lobby/backgrounds/bg_clan_border"
                    align: ["HCENTER", "TOP"]
                UIOpacityComponent:
                    ignoreParentOpacity: true
                Anchor:
                    leftAnchorEnabled: true
                    topAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["UIOpacityComponent.opacity", "when not isNull(playerInfo) -> 1.000000, 0.200000"]
        -   class: "UIControl"
            name: "BorderTop"
            input: false
            components:
                Background:
                    drawType: "DRAW_FILL"
                UIOpacityComponent:
                    ignoreParentOpacity: true
                Anchor:
                    hCenterAnchorEnabled: true
                    topAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "parent-16"
                    verticalPolicy: "FixedSize"
                    verticalValue: 1.000000
            bindings:
            - ["UIOpacityComponent.opacity", "when not isNull(playerInfo) -> 1.000000, 0.200000"]
        -   class: "UIControl"
            name: "GradientBorderRight"
            input: false
            components:
                Background:
                    drawType: "DRAW_ALIGNED"
                    sprite: "~res:/Gfx/Lobby/backgrounds/bg_clan_border"
                    spriteModification: ["FLIP_HORIZONTAL"]
                    align: ["HCENTER", "TOP"]
                UIOpacityComponent:
                    ignoreParentOpacity: true
                Anchor:
                    rightAnchorEnabled: true
                    topAnchorEnabled: true
                    bottomAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["UIOpacityComponent.opacity", "when not isNull(playerInfo) -> 1.000000, 0.200000"]
        -   class: "UIControl"
            name: "LeftContent"
            input: false
            components:
                Background: {}
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIControl"
                name: "Place"
                input: false
                classes: "t-content-h1 bold color=white-wild-sand-50-text"
                components:
                    UITextComponent:
                        colorInheritType: "COLOR_IGNORE_PARENT"
                        align: ["LEFT", "VCENTER"]
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: 8.000000
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfContent"
                        verticalPolicy: "PercentOfContent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
                bindings:
                - ["UITextComponent.text", "place"]
        -   class: "UIControl"
            name: "RightContent"
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                    rightAnchor: 16.000000
                    vCenterAnchorEnabled: true
                LinearLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "not isNull(rightContent)"
                    control: "rightContent"
Slots:
-   class: "UIControl"
    name: "PlayerInfo"
    input: false
    components:
        Anchor:
            hCenterAnchorEnabled: true
        LinearLayout:
            spacing: 8.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            horizontalValue: 100.000000
            verticalPolicy: "FixedSize"
            verticalValue: 77.000000
        StyleSheet:
            styles: "~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Font.style.yaml"
    children:
    -   class: "UIControl"
        name: "PlayerAvatar"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 48.000000
                verticalPolicy: "FixedSize"
                verticalValue: 48.000000
            UIChildComponent0:
                condition: "not isNull(playerInfo)"
                prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/PlayerAvatar.yaml"
                args:
                    "animated": "true"
                    "interactive": "false"
                    "avatar": "playerInfo.avatarModel"
                    "size": "eAvatarSize.MEDIUM"
    -   class: "UIControl"
        name: "Text"
        input: false
        components:
            Anchor:
                vCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfChildrenSum"
        children:
        -   class: "UIControl"
            name: "NickName"
            input: false
            components:
                UITextComponent: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfMaxChild"
                    verticalMin: 20.000000
            bindings:
            - ["classes", "when isSelf -> \"t-body regular yellow-lightning-text\", \"t-body regular white-wild-sand-text\""]
            - ["UITextComponent.text", "when not isNull(playerInfo) -> playerInfo.nameModel.name, \"\""]
        -   class: "UIControl"
            name: "ClanTag"
            visible: false
            input: false
            classes: "t-body bold orange-meteor-text"
            components:
                UITextComponent:
                    text: "# clan tag"
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
