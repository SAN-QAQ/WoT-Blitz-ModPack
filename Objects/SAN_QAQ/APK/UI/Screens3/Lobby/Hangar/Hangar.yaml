Header:
    version: 161
ImportedPackages:
- "~res:/UI/Screens3/Lobby/InventoryPanel/InventoryPanel.yaml"
- "~res:/UI/Screens3/Lobby/Hangar/TournamentButton.yaml"
- "~res:/UI/Screens3/Common/OverlayBlur.yaml"
- "~res:/UI/Screens3/Lobby/Common/IconButtonWithBadge.yaml"
Prototypes:
-   class: "UIControl"
    name: "Hangar"
    size: [960.000000, 640.000000]
    input: false
    components:
        UIAnimationComponent:
            animations: "BACK_EVENT,~res:/UI/Screens3/Lobby/Hangar/BackEvent.animation;_INIT,~res:/UI/Screens3/Lobby/Hangar/HangarInitialization.animation"
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        ModalInput: {}
        UISystemEventComponent:
            onActivated: "Init"
        UIVirtualActionEventComponent0:
            virtualKeyAction: "Extra1"
            keyDownEvent: "BATTLE"
        UIVirtualActionEventComponent1:
            virtualKeyAction: "Extra2"
            keyDownEvent: "INVENTORY"
        UIVirtualActionEventComponent2:
            virtualKeyAction: "ActionLeft"
            keyDownEvent: ""
        UIVirtualActionEventComponent3:
            virtualKeyAction: "ActionUp"
            keyDownEvent: "SWITCH_FILTER"
        UIVirtualActionEventComponent4:
            virtualKeyAction: "ActionDown"
            keyDownEvent: "SHOW_TANKS_TREE_NS"
        UIVirtualActionEventComponent5:
            virtualKeyAction: "OptionalPrevious"
            keyDownEvent: "PREVIOUS_TANK"
        UIVirtualActionEventComponent6:
            virtualKeyAction: "OptionalNext"
            keyDownEvent: "NEXT_TANK"
        UIVirtualActionEventComponent7:
            virtualKeyAction: "Options"
            keyDownEvent: "GO_TO_SHOP"
        UIShortcutEventComponent:
            shortcuts: "CAPTURED_BACK_EVENT,Escape;CAPTURED_BACK_EVENT,Back;SHOW_UI,SHIFT+L;SHOW_DEV_UI,SHIFT+K;OnSwitchRankHint,SHIFT+R"
        UIDataParamsComponent:
            params:
            - ["SquadDataModel", "squadModel", "null", "null"]
            - ["TankModulesTreeModel", "modulesData", "null", "{ }"]
            - ["InventoryPanelViewModel", "inventoryPanel", "null", "{ \"optionalDevices\" = [ { }; { }; { }; ]; }"]
            - ["AppDataModel", "app", "null", "{ \"sDlc\" = { \"isGeneralPackLoaded\" = true; }; \"constants\" = { \"deviceType\" = eScreenSizeType.Small; }; }"]
            - ["LobbyDataModel", "lobby", "null", "{ }"]
            - ["SessionDataModel", "session", "null", "{ }"]
            - ["RatingBattleModel", "battleRating", "null", "{ }"]
            - ["AccountDataModel", "account", "null", "{ \"prebattleModel\" = { \"settings\" = { \"prebattleType\" = PrebattleType.TOURNAMENT; }; }; }"]
            - ["TanksPanelViewModel", "tanksPanel", "null", "{ \"offeredTankSelected\" = false; }"]
            - ["TournamentButtonViewModel", "tournamentButton", "null", "{ \"battlesStartTime\" = 7L; \"tournamentId\" = 1L; }"]
            - ["SquadMembers", "squadMembers", "null", "{ \"friendsVector\" = [ { \"name\" = \"FriendName1\"; \"tag\" = \"testTag\"; }; { \"name\" = \"FriendName2\"; \"tag\" = \"testTag2\"; }; ]; \"invitesVector\" = [ { \"name\" = \"FriendName3\"; \"tag\" = \"WGTag\"; }; ]; }"]
            - ["StoryFragmentViewModel", "storyFragment", "null", "{ \"buttons\" = [ { \"story\" = { \"name\" = \"HALLOWEEN2020\"; \"stage\" = { \"type\" = eStageType.PROCESS; \"finishTime\" = 1554299463L; }; \"tree\" = { \"steps\" = [ { \"id\" = 1; }; { \"id\" = 2; }; { \"id\" = 3; }; ]; }; }; \"progressValue\" = 78; \"progressMax\" = 120; \"isReady\" = false; }; ]; \"aggregatedButtons\" = [ { \"story\" = { \"name\" = \"HALLOWEEN2020\"; \"stage\" = { \"type\" = eStageType.PROCESS; \"finishTime\" = 1554299463L; }; \"tree\" = { \"steps\" = [ { \"id\" = 1; }; { \"id\" = 2; }; { \"id\" = 3; }; ]; }; }; \"progressValue\" = 78; \"progressMax\" = 120; \"isReady\" = false; }; ]; }"]
            - ["BattlePass", "battlePass", "null", "{ }"]
            - ["AuctionHangarEntry", "auction", "{ }", "{ }"]
            - ["StuffQuestList", "stuffQuests", "null", "{ \"quests\" = [ { }; { }; { }; ]; }"]
            events:
            - "ON_READY_FOR_SQUAD_PRESSED"
            - "ON_BACK_TO_SQUAD_SCREEN_PRESSED"
            - "ON_SQUAD_AND_HANGAR_TOGGLE_PRESSED"
            - "OnTankCounterClicked(int counterId)"
            - "SHOW_PROMOTION(int index, ePromotionSize size)"
            - "COPY_SPA"
            - "COPY_ENTITY_ID"
            - "ON_SQUAD_DIALOG_SHOW"
            - "RESET_MULTIPLIER_WITH_AD"
            - "ON_ABILITIES(int playerIndex)"
        UIDataLocalVarsComponent:
            data:
            - ["ItemCompactDescr", "defaultSelectedTankDescr", "{ }"]
            - ["float", "rightBottomHeight", "0.000000"]
            - ["float", "promotionsHeight", "0.000000"]
            - ["float", "rightPartHeight", "0"]
            - ["bool", "forceDisableSquadButtons", "false"]
            - ["map<int,int>", "emptyMap", "{ }"]
            - ["bool", "isFilterNavPanel", "false"]
            - ["bool", "localDevUI", "app.constants.developerUI"]
            - ["bool", "showTestPage", "false"]
            - ["bool", "showUI", "true"]
            - ["bool", "enableBlur", "false"]
            - ["bool", "captureInput", "false"]
            - ["bool", "showXpBonusHint", "false"]
        UIDataLocalBindingsComponent:
            data:
            - ["bool", "isInSquad", "not isNull(squadModel)"]
            - ["bool", "showSquadUI", "isInSquad and squadModel.showSquadUI"]
            - ["OwnedTank", "selectedTank", "session.playerTanks.currentTank"]
            - ["map<eNintendoSwitchControls,string>", "nintendoNavigationFilterLabels", "{ eNintendoSwitchControls.Y = \"Switch/HubridPanel/VehicleFilter/SaveClose\"; eNintendoSwitchControls.X = \"Switch/HubridPanel/VehicleFilter/Reset\"; }"]
            - ["map<eNintendoSwitchControls,string>", "nintendoNavigationHangarPremTankLabels", "{ eNintendoSwitchControls.Up = \"Switch/HubridPanel/Hangar/VehicleFilter\"; eNintendoSwitchControls.Down = \"Switch/HubridPanel/Hangar/TanksTree\"; }"]
            - ["map<eNintendoSwitchControls,string>", "nintendoNavigationHangarLabels", "{ eNintendoSwitchControls.Up = \"Switch/HubridPanel/Hangar/VehicleFilter\"; eNintendoSwitchControls.Down = \"Switch/HubridPanel/Hangar/TanksTree\"; eNintendoSwitchControls.Y = \"Switch/HubridPanel/Hangar/Service\"; }"]
            - ["int", "messagesCountFromClanCanal", "when session.chatInfo.clanMessagesCount > 0 -> 1, 0"]
            - ["eTutorialLesson", "currentLesson", "account.tutorialData.currentLesson"]
            - ["eTutorialHighlights", "currentHighlightControl", "account.tutorialData.currentHighlightControl"]
            - ["bool", "isTournamentPrebattle", "when not isNull(account.prebattleModel.settings) -> when account.prebattleModel.settings.prebattleType == PrebattleType.TOURNAMENT or account.prebattleModel.settings.prebattleType == PrebattleType.QUICK_TOURNAMENT -> true, false, false"]
            - ["bool", "isTournamentParticipant", "isTournamentPrebattle or (tournamentButton.tournamentId > 0L)"]
            - ["string", "playerName", "session.playerName"]
            - ["bool", "isValidTankSelected", "not isNull(selectedTank)"]
            - ["ItemCompactDescr", "selectedTankDescr", "when isValidTankSelected -> selectedTank.info.tankDescriptor, defaultSelectedTankDescr"]
            - ["bool", "tankAbilitiesVisible", "when isValidTankSelected -> selectedTank.abilities.Contains(session.gameModesAccountModel.mode.gameModeOptions.arcadeAbilities), false"]
            - ["int", "ratingBattlesCountDone", "battleRating.calibrationBattlesCount - battleRating.calibrationBattlesLeft"]
            - ["bool", "isNoRatingBattles", "battleRating.calibrationBattlesCount == battleRating.calibrationBattlesLeft or battleRating.calibrationBattlesCount == ratingBattlesCountDone"]
            - ["bool", "isBattleTypeChanged", "lobby.previousBattleType != session.gameModesAccountModel.mode.battleType"]
            - ["bool", "trainingVisible", "account.prebattleModel.settings.prebattleType == PrebattleType.TRAINING"]
            - ["bool", "prebattleIsAvailableForCalibration", "account.prebattleModel.settings.prebattleType == PrebattleType.UNDEFINED or account.prebattleModel.settings.prebattleType == PrebattleType.TOURNAMENT or account.prebattleModel.settings.prebattleType == PrebattleType.QUICK_TOURNAMENT"]
            - ["bool", "notRatingSeasonMismatch", "session.gameModesAccountModel.mode.availabilityStatus != eGameModeAvailability.SEASON_MISMATCH"]
            - ["bool", "offeredTankSelected", "tanksPanel.offeredTankSelected and not isNull(tanksPanel.offeredTank.tank)"]
            - ["bool", "advertisingAvailable", "app.sDlc.isGeneralPackLoaded and not account.tutorialData.isTutorialActive and session.serverConfig.advertising.enabled and not app.netease.neteaseAvailable and not lobby.advertising.playingAd"]
            - ["bool", "hangarAdvertisingAvailable", "advertisingAvailable and session.serverConfig.advertising.hangar.enabled and lobby.advertising.hangarAdAvailable and session.stats.hangarAds.remainingAds > 0 and session.stats.hangarAds.nextViewTime <= session.serverTime"]
            - ["bool", "xpMultiplierAdAvailable", "advertisingAvailable and session.serverConfig.advertising.xpMultiplier.enabled and lobby.advertising.xpMultiplierAdAvailable and session.stats.xpMultiplierAds.remainingAds > 0 and session.stats.xpMultiplierAds.nextViewTime <= session.serverTime"]
            - ["bool", "showTanksPanel", "not (account.tutorialData.isTutorialActive and account.tutorialData.currentLesson < eTutorialLesson.kBattle4)"]
            - ["bool", "isHasRating", "battleRating.state == eBattleRatingState.HAS_RATING"]
            - ["bool", "pingIndicatorVisible", "lobby.pingState == ePingState.MIDDLE or lobby.pingState == ePingState.BAD or lobby.pingState == ePingState.NOT_PINGED"]
            - ["bool", "DLCDownloadButtonVisible", "app.sDlc.state != SmartDLCState.kDone"]
            - ["bool", "DLCDownloadErrorVisible", "app.sDlc.state == SmartDLCState.kError"]
            - ["bool", "DLCDownloadHintVisible", "(not lobby.arePacksAvailableForBattle) and (app.sDlc.state != SmartDLCState.kError) and (app.sDlc.state != SmartDLCState.kDone) and (not offeredTankSelected) and (not isNull(selectedTank)) and (not showSquadUI)"]
            - ["bool", "showPromotions", "app.sDlc.isGeneralPackLoaded and not account.tutorialData.isTutorialActive and not lobby.promotions.promotions.Empty()"]
            - ["eCurrentScreen", "currentScreen", "eCurrentScreen.kHangar"]
            - ["string", "xButtonText", "when account.prebattleModel.settings.prebattleType == PrebattleType.TRAINING and app.sDlc.isGeneralPackLoaded -> \"hangar/TrainingRoomButton\", not isNull(selectedTank) and selectedTank.repairCost > 0 and lobby.arePacksAvailableForBattle and not lobby.punishmentRandomBan -> \"hangar/RepairButton\", \"hangar/BattleButton\""]
            - ["bool", "packLoaded", "app.sDlc.isGeneralPackLoaded"]
            - ["bool", "ranksAvailable", "not isNull(selectedTank) and selectedTank.stats.isElite and selectedTank.dossier.rankState.enabled and packLoaded"]
            - ["bool", "rankUnlockRequired", "ranksAvailable and selectedTank.dossier.rankState.level < 1 and (not app.constants.developerUI or session.rankConfig.showHintForDevs)"]
            - ["bool", "showCounters", "ranksAvailable and selectedTank.dossier.rankState.level > 0"]
            - ["map<int,int>", "tankCounters", "when not isNull(session) and not offeredTankSelected and session.rankConfig.countersInfo.vehicles.Contains(selectedTankDescr.rawDescr) -> session.rankConfig.countersInfo.vehicles[selectedTankDescr.rawDescr].slots, emptyMap"]
            - ["int", "counterId1", "when showCounters and tankCounters.Contains(1) -> tankCounters[1], -1"]
            - ["int", "counterId2", "when showCounters and tankCounters.Contains(2) -> tankCounters[2], -1"]
            - ["int", "counterId3", "when showCounters and tankCounters.Contains(3) -> tankCounters[3], -1"]
            - ["TanksRankCacheEntry", "rankCache", "when not offeredTankSelected and lobby.ranksCache.entries.Contains(selectedTankDescr.rawDescr) -> lobby.ranksCache.entries[selectedTankDescr.rawDescr], null"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Hangar/Hangar.actions"
        UIDataOnEventComponent0:
            eventName: "SHOW_HINT_XP_TIMER"
            modelFieldExpression: "showXpBonusHint"
            dataExpression: "not showXpBonusHint"
        UIDataOnEventComponent1:
            eventName: "SCREEN_PRESSED"
            modelFieldExpression: "showXpBonusHint"
            dataExpression: "false"
        UIDataOnEventComponent2:
            eventName: "CAPTURE_INPUT"
            modelFieldExpression: "captureInput"
            dataExpression: "_event"
        UIDataOnEventComponent3:
            eventName: "ENABLE_BLUR"
            modelFieldExpression: "enableBlur"
            dataExpression: "_event"
        UIDataOnEventComponent4:
            eventName: "SHOW_UI"
            modelFieldExpression: "showUI"
            dataExpression: "not showUI"
        UIDataOnEventComponent5:
            eventName: "SHOW_DEV_UI"
            modelFieldExpression: "localDevUI"
            dataExpression: "not localDevUI"
        UIDataOnEventComponent6:
            eventName: "SHOW_DEBUG_UI_PAGE"
            modelFieldExpression: "showTestPage"
            dataExpression: "not showTestPage"
        UIDataOnEventComponent7:
            eventName: "ON_CLOSE_TEST_PAGE"
            modelFieldExpression: "showTestPage"
            dataExpression: "not showTestPage"
        UIDataOnEventComponent8:
            eventName: "OnSwitchRankHint"
            modelFieldExpression: "session.rankConfig.showHintForDevs"
            dataExpression: "not session.rankConfig.showHintForDevs"
        UIDataOnEventComponent9:
            eventName: "PromotionsSizeChanged"
            modelFieldExpression: "promotionsHeight"
            dataExpression: "_event"
        UIDataOnEventComponent10:
            eventName: "RightBottomSizeChanged"
            modelFieldExpression: "rightBottomHeight"
            dataExpression: "_event"
        UIDataOnEventComponent11:
            eventName: "RightPartSizeChanged"
            modelFieldExpression: "rightPartHeight"
            dataExpression: "_event"
        UIEventOnDataComponent0:
            watchedDataExpression: "selectedTankDescr"
            eventName: "ON_TANK_SELECTION_CHANGED"
        UIEventOnDataComponent1:
            watchedDataExpression: "packLoaded"
            ifExpression: "packLoaded"
            eventName: "AnimateHangarCounters"
        UIEventOnDataComponent2:
            watchedDataExpression: "showSquadUI"
            eventName: "SetHangarOrSquadViewWithAnimation"
    children:
    -   class: "UIControl"
        name: "Content"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        children:
        -   class: "UIControl"
            name: "CountersWrapper"
            input: false
            components:
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Lobby/Inventory/TankProgress/HangarTankCounters.yaml"
                    args:
                        "rankCache": "rankCache"
                        "counterId3": "counterId3"
                        "counterId1": "counterId1"
                        "counterId2": "counterId2"
                        "session": "session"
                        "selectedTankDescr": "selectedTankDescr.rawDescr"
                        "selectedTank": "selectedTank"
                        "showBackground": "packLoaded"
                    eventActions:
                    - ["TriggerHangarCounterSound", "TriggerHangarCounterSound", "_event.sound"]
                    - ["OnTankCounterClicked", "OnTankCounterClicked", "_event.counter"]
        -   class: "UI3DView"
            customClass: "UIHangar3dView"
            name: "HangarScene"
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
        -   class: "UIControl"
            name: "SquadFades"
            input: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["visible", "isInSquad"]
            children:
            -   class: "UIControl"
                name: "RadialTopLeft"
                input: false
                classes: "black-50-bg"
                components:
                    Background:
                        drawType: "DRAW_SCALE_TO_RECT"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_radial-gradient_quarter"
                    Anchor:
                        leftAnchorEnabled: true
                        topAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 480.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 480.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "RadialTopRight"
                input: false
                classes: "black-50-bg"
                components:
                    Background:
                        drawType: "DRAW_SCALE_TO_RECT"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_radial-gradient_quarter"
                        spriteModification: ["FLIP_HORIZONTAL"]
                    Anchor:
                        rightAnchorEnabled: true
                        topAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 480.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 480.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "TopFade"
                position: [0.000000, 0.000000]
                size: [960.000000, 160.000000]
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        topAnchorEnabled: true
                    LinearLayout:
                        orientation: "TopDown"
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfChildrenSum"
                children:
                -   class: "UIControl"
                    name: "FillFade"
                    input: false
                    classes: "black-25-bg"
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                            spriteModification: ["FLIP_VERTICAL"]
                        Anchor:
                            hCenterAnchorEnabled: true
                            topAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "FixedSize"
                            verticalValue: 128.000000
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                -   class: "UIControl"
                    name: "GradientFade"
                    input: false
                    classes: "black-25-bg"
                    components:
                        Background:
                            drawType: "DRAW_SCALE_TO_RECT"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_vertical_0-100"
                            spriteModification: ["FLIP_VERTICAL"]
                        Anchor:
                            hCenterAnchorEnabled: true
                            topAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "FixedSize"
                            verticalValue: 128.000000
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "BottomFade"
                position: [0.000000, 0.000000]
                size: [960.000000, 160.000000]
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        bottomAnchorEnabled: true
                    LinearLayout:
                        orientation: "TopDown"
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfChildrenSum"
                children:
                -   class: "UIControl"
                    name: "GradientFade"
                    input: false
                    classes: "black-25-bg"
                    components:
                        Background:
                            drawType: "DRAW_SCALE_TO_RECT"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_vertical_0-100"
                        Anchor:
                            hCenterAnchorEnabled: true
                            topAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "FixedSize"
                            verticalValue: 128.000000
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                -   class: "UIControl"
                    name: "FillFade"
                    input: false
                    classes: "black-25-bg"
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                            spriteModification: ["FLIP_VERTICAL"]
                        Anchor:
                            hCenterAnchorEnabled: true
                            topAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "FixedSize"
                            verticalValue: 224.000000
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
        -   class: "UIControl"
            name: "Container"
            input: false
            components:
                LinearLayout:
                    orientation: "RightToLeft"
                    skipInvisible: false
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["visible", "not (not showUI and app.constants.developerUI)"]
            children:
            -   class: "UIControl"
                name: "Content"
                input: false
                classes: "notch-tightly-bottom-inset"
                components:
                    Anchor:
                        topAnchorEnabled: true
                        bottomAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                    UIAnchorSafeAreaComponent: {}
                    StyleSheet:
                        styles: "~res:/UI/Screens3/SafeArea.style.yaml"
                children:
                -   class: "UIControl"
                    name: "MainContent"
                    input: false
                    components:
                        UIOpacityComponent: {}
                        LinearLayout:
                            orientation: "TopDown"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    children:
                    -   class: "UIControl"
                        name: "Header"
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "FixedSize"
                                verticalValue: 48.000000
                        children:
                        -   class: "UIControl"
                            name: "OfferedTankBackground"
                            input: false
                            components:
                                Anchor:
                                    hCenterAnchorEnabled: false
                                    rightAnchorEnabled: true
                                    topAnchorEnabled: true
                                SizePolicy:
                                    horizontalPolicy: "Formula"
                                    horizontalFormula: "parent + 88 + safeAreaInsets.left"
                                    verticalPolicy: "PercentOfMaxChild"
                            bindings:
                            - ["visible", "offeredTankSelected"]
                            children:
                            -   class: "UIControl"
                                name: "TopLinearGradient"
                                input: false
                                classes: "black-70-bg"
                                components:
                                    Background:
                                        drawType: "DRAW_SCALE_TO_RECT"
                                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_vertical_0-100"
                                        spriteModification: ["FLIP_VERTICAL"]
                                    Anchor:
                                        hCenterAnchorEnabled: true
                                        topAnchorEnabled: true
                                    SizePolicy:
                                        horizontalPolicy: "PercentOfParent"
                                        verticalPolicy: "FixedSize"
                                        verticalValue: 384.000000
                                    StyleSheet:
                                        styles: "~res:/UI/Screens3/Color.style.yaml"
                            -   class: "UIControl"
                                name: "LeftRadialGradient"
                                input: false
                                classes: "black-35-bg"
                                components:
                                    Background:
                                        drawType: "DRAW_SCALE_TO_RECT"
                                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_radial-gradient_quarter"
                                    Anchor:
                                        leftAnchorEnabled: true
                                        topAnchorEnabled: true
                                    SizePolicy:
                                        horizontalPolicy: "FixedSize"
                                        horizontalValue: 384.000000
                                        verticalPolicy: "FixedSize"
                                        verticalValue: 384.000000
                                    StyleSheet:
                                        styles: "~res:/UI/Screens3/Color.style.yaml"
                        -   class: "UIControl"
                            name: "Header"
                            input: false
                            components:
                                SizePolicy:
                                    horizontalPolicy: "PercentOfParent"
                                    verticalPolicy: "PercentOfFirstChild"
                                UIChildComponent0:
                                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Headers/HangarHeader.yaml"
                                    args:
                                        "tutorialHighlight": "account.tutorialData.currentHighlightControl"
                                        "tutorialLesson": "account.tutorialData.currentLesson"
                                        "showSquadUI": "showSquadUI"
                                        "session": "session"
                                        "lobby": "lobby"
                                        "playerName": "session.playerName"
                                        "clanTag": "when not isNull(session.clanInfo.clan) -> session.clanInfo.clan.tag, \"\""
                                        "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                                        "isTutorialActive": "account.tutorialData.isTutorialActive"
                                        "firstLessonCompleted": "currentLesson > eTutorialLesson.kTurretUnlock"
                                        "showBackButton": "false"
                                        "isFullScreen": "false"
                                    eventActions:
                                    - ["GO_TO_SHOP", "GO_TO_SHOP", ""]
                                    - ["PREMIUM_INFO_EVENT", "PREMIUM_INFO_EVENT", ""]
                                    - ["SHOP_BUTTON", "SHOP_BUTTON", "_event.requiredResource"]
                                    - ["BACK_EVENT", "BACK_EVENT", ""]
                                    - ["SHOW_ACHIEVEMENTS", "SHOW_ACHIEVEMENTS", ""]
                    -   class: "UIControl"
                        name: "MainControls"
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfParent"
                        children:
                        -   class: "UIControl"
                            name: "TankDependentControls"
                            input: false
                            components:
                                Anchor:
                                    topAnchorEnabled: true
                                    bottomAnchorEnabled: true
                                SizePolicy:
                                    horizontalPolicy: "PercentOfParent"
                            bindings:
                            - ["Anchor.bottomAnchor", "when showTanksPanel -> 120, 0"]
                            children:
                            -   class: "UIControl"
                                name: "DLCDownloadHintHolder"
                                input: false
                                components:
                                    Anchor:
                                        hCenterAnchorEnabled: true
                                        vCenterAnchorEnabled: true
                                        vCenterAnchor: -24.000000
                                    SizePolicy:
                                        horizontalPolicy: "PercentOfChildrenSum"
                                        verticalPolicy: "PercentOfMaxChild"
                                    UIChildAnimatedSwitchingComponent:
                                        switchPolicy: "kAfterRemovingAnimation"
                                        keepUpdateBindings: false
                                    UIChildComponent0:
                                        childType: "kPrototype"
                                        condition: "DLCDownloadHintVisible"
                                        prototypePath: "~res:/UI/Screens3/Lobby/SmartDLC/DLCDownloadHint.yaml"
                                        args:
                                            "packForBattleResultsIsLoaded": "lobby.battleResources.packForBattleResultsIsLoaded"
                                            "availableTankLevels": "lobby.battleResources.availableTankLevels"
                                            "sizeLeft": "lobby.battleResources.leftToPlayOnCurrentTankSize"
                                            "tankLevel": "selectedTank.info.level"
                                            "visible": "true"
                                        eventActions:
                                        - ["SHOW_SMART_DLC_SCREEN", "SHOW_SMART_DLC_SCREEN", ""]
                            -   class: "UIControl"
                                name: "DefaultControls"
                                input: false
                                components:
                                    LinearLayout:
                                        orientation: "TopDown"
                                    SizePolicy:
                                        horizontalPolicy: "PercentOfParent"
                                        verticalPolicy: "PercentOfParent"
                                bindings:
                                - ["visible", "not offeredTankSelected"]
                                children:
                                -   class: "UIControl"
                                    name: "TopAndCentralParts"
                                    input: false
                                    components:
                                        SizePolicy:
                                            horizontalPolicy: "PercentOfParent"
                                            verticalPolicy: "PercentOfParent"
                                    children:
                                    -   class: "UIControl"
                                        name: "HangarView"
                                        input: false
                                        components:
                                            LinearLayout:
                                                orientation: "TopDown"
                                            SizePolicy:
                                                horizontalPolicy: "PercentOfParent"
                                                verticalPolicy: "PercentOfParent"
                                        children:
                                        -   class: "UIControl"
                                            name: "TopPart"
                                            input: false
                                            components:
                                                LinearLayout:
                                                    orientation: "TopDown"
                                                    padding: "24;0"
                                                SizePolicy:
                                                    horizontalPolicy: "PercentOfParent"
                                                    verticalPolicy: "PercentOfMaxChild"
                                            children:
                                            -   class: "UIControl"
                                                name: "BattleButtonWrapper"
                                                components:
                                                    UIOpacityComponent: {}
                                                    Anchor:
                                                        leftAnchorEnabled: true
                                                    SizePolicy:
                                                        horizontalPolicy: "Formula"
                                                        horizontalFormula: "parent - safeAreaInsets.left"
                                                        verticalPolicy: "PercentOfMaxChild"
                                                children:
                                                -   class: "UIControl"
                                                    name: "BattleButtonContainer"
                                                    input: false
                                                    components:
                                                        Anchor:
                                                            hCenterAnchorEnabled: true
                                                            vCenterAnchorEnabled: true
                                                        SizePolicy:
                                                            horizontalPolicy: "PercentOfFirstChild"
                                                            verticalPolicy: "PercentOfFirstChild"
                                                        UIChildComponent0:
                                                            prototypePath: "~res:/UI/Screens3/Lobby/Hangar/BattleButton.yaml"
                                                            args:
                                                                "forceDisableSquadButtons": "forceDisableSquadButtons"
                                                                "isInSquad": "isInSquad"
                                                                "showSquadUI": "false"
                                                                "isDeveloperUI": "localDevUI and app.constants.developerUI"
                                                                "tutorialHighlight": "account.tutorialData.currentHighlightControl"
                                                                "tutorialLesson": "account.tutorialData.currentLesson"
                                                                "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                                                                "isPrebattleTraining": "account.prebattleModel.settings.prebattleType == PrebattleType.TRAINING"
                                                                "boosterSlotStatus": "lobby.boostersState.globalState"
                                                                "boostersButtonIsVisible": "not account.tutorialData.isTutorialActive"
                                                                "tankIsAccept": "when isNull(selectedTank) -> false, selectedTank.lockReason != LOCK_REASON.ON_ARENA"
                                                                "isSquadReady": "lobby.isSquadReady"
                                                                "isBadgeVisible": "session.gameModesBadges.hasGlobalBadge"
                                                                "isVehicleFitsForGameMode": "not isNull(selectedTank) and selectedTank.allowedForGameMode and not selectedTank.needsTopMastery and not selectedTank.needsTopModules"
                                                                "packIsAvailibleForBattle": "lobby.arePacksAvailableForBattle"
                                                                "isRepair": "when isNull(selectedTank) -> false, selectedTank.repairCost > 0 -> true, false"
                                                                "squadTeamMateIsJoined": "when account.prebattleModel.squadTeamMateInfos.Size() == 0 -> false, true"
                                                                "isReadyToBattle": "when isNull(account.prebattleModel.accountInfo) -> false, account.prebattleModel.accountInfo.isReady"
                                                                "isTournamentType": "isTournamentPrebattle"
                                                                "isSquadType": "account.prebattleModel.settings.prebattleType == PrebattleType.SQUAD and account.prebattleModel.squadTeamMateInfos.Size() > 0"
                                                                "isRandomBan": "lobby.punishmentRandomBan"
                                                                "isJoined": "account.prebattleModel.settings.prebattleType != PrebattleType.UNDEFINED"
                                                                "isSquadCommander": "session.dbid == account.prebattleModel.settings.squadCommander"
                                                                "battleType": "session.gameModesAccountModel.mode.battleType"
                                                                "availabilityStatus": "session.gameModesAccountModel.mode.availabilityStatus == eGameModeAvailability.AVAILABLE"
                                                                "isBattleTypeButtonVisible": "account.diaryDataModel.isBattleTypeButtonVisible and not isInSquad"
                                                                "dailyXPFactor": "int(session.serverConfig.dailyXPFactor)"
                                                                "serverTime": "session.serverTime"
                                                                "time": "session.serverConfig.nextResetTimestamp"
                                                                "showXPFactor": "not session.serverConfig.isDailyXPTimesEmpty and not account.tutorialData.isTutorialActive"
                                                                "pingIndicatorVisible": "pingIndicatorVisible"
                                                                "multiplierAdAvailable": "xpMultiplierAdAvailable"
                                                                "tankXpMultiplierActive": "isValidTankSelected and (selectedTank.stats.isBonusActive or selectedTank.maxCertificateXpFactor > session.serverConfig.dailyXPFactor or (session.stats.levelSharedDailyBonus.Contains(selectedTank.info.level) and session.stats.levelSharedDailyBonus[selectedTank.info.level] > 0))"
                                                            eventActions:
                                                            - ["ON_BACK_TO_SQUAD_SCREEN_PRESSED", "ON_BACK_TO_SQUAD_SCREEN_PRESSED", ""]
                                                            - ["ON_SQUAD_AND_HANGAR_TOGGLE_PRESSED", "ON_SQUAD_AND_HANGAR_TOGGLE_PRESSED", ""]
                                                            - ["ON_DEV_INFO_BUTTON", "ON_DEV_INFO_BUTTON", ""]
                                                            - ["DEV_LOGOUT", "DEV_LOGOUT", ""]
                                                            - ["ON_DEV_BUTTON", "ON_DEV_BUTTON", ""]
                                                            - ["ON_BOOSTERS", "ON_BOOSTERS", ""]
                                                            - ["BATTLE_BUTTON_PRESSED", "BATTLE_BUTTON_PRESSED", "_event.isEnabled"]
                                                            - ["BATTLE_TYPE_PRESSED", "BATTLE_TYPE_PRESSED", ""]
                                                            - ["SHOW_HINT_XP_TIMER", "SHOW_HINT_XP_TIMER", ""]
                                                            - ["RESET_MULTIPLIER_WITH_AD", "RESET_MULTIPLIER_WITH_AD", ""]
                                                    bindings:
                                                    - ["visible", "not rankUnlockRequired"]
                                        -   class: "UIControl"
                                            name: "Spacer"
                                            input: false
                                            components:
                                                SizePolicy:
                                                    horizontalPolicy: "PercentOfParent"
                                                    verticalPolicy: "FixedSize"
                                                    verticalValue: 8.000000
                                        -   class: "UIControl"
                                            name: "CentralPart"
                                            input: false
                                            components:
                                                SizePolicy:
                                                    horizontalPolicy: "Formula"
                                                    horizontalFormula: "parent - max(safeAreaInsets.right, 8)"
                                                    verticalPolicy: "PercentOfParent"
                                            children:
                                            -   class: "UIControl"
                                                name: "LeftPanel"
                                                input: false
                                                components:
                                                    UIOpacityComponent: {}
                                                    Anchor:
                                                        leftAnchorEnabled: true
                                                    LinearLayout:
                                                        orientation: "LeftToRight"
                                                    SizePolicy:
                                                        horizontalPolicy: "PercentOfMaxChild"
                                                        verticalPolicy: "PercentOfParent"
                                                children:
                                                -   class: "UIControl"
                                                    name: "Spacer"
                                                    input: false
                                                    components:
                                                        SizePolicy:
                                                            horizontalPolicy: "FixedSize"
                                                            horizontalValue: 16.000000
                                                            verticalPolicy: "PercentOfParent"
                                                -   class: "UIControl"
                                                    name: "Elements"
                                                    input: false
                                                    components:
                                                        Anchor:
                                                            leftAnchorEnabled: true
                                                            topAnchorEnabled: true
                                                        LinearLayout:
                                                            orientation: "TopDown"
                                                            spacing: 12.000000
                                                        SizePolicy:
                                                            horizontalPolicy: "PercentOfMaxChild"
                                                            verticalPolicy: "PercentOfParent"
                                                    bindings:
                                                    - ["Anchor.topAnchor", "when screenHeight - 288 < 400 and (storyFragment.buttons.Size() > 0 or battlePass.isVisible) and isTournamentParticipant and not trainingVisible and not isInSquad and app.sDlc.isGeneralPackLoaded and stuffQuests.quests.Size() > 0 and storyFragment.aggregatedButtons.Size() > 0 -> -64, 0"]
                                                    children:
                                                    -   class: "UIControl"
                                                        name: "StoryAggregatedButtonsHolder"
                                                        input: false
                                                        components:
                                                            SizePolicy:
                                                                horizontalPolicy: "PercentOfFirstChild"
                                                                verticalPolicy: "PercentOfFirstChild"
                                                            UIChildComponent0:
                                                                childType: "kPrototype"
                                                                condition: "app.sDlc.isGeneralPackLoaded and not account.tutorialData.isTutorialActive"
                                                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/Story/StoryAggregatedFragment.yaml"
                                                                args:
                                                                    "serverTime": "session.serverTime"
                                                                    "storyFragment": "storyFragment"
                                                                    "deviceType": "app.constants.deviceType"
                                                                eventActions:
                                                                - ["STORY_BUTTON_PRESSED", "STORY_AGGREGATED_PRESSED", "_event.index"]
                                                        bindings:
                                                        - ["visible", "not account.tutorialData.isTutorialActive and storyFragment.aggregatedButtons.Size() > 0"]
                                                    -   prototype: "TournamentButton/TournamentButton"
                                                        name: "TournamentButton"
                                                        components:
                                                            UIDataParamsComponent:
                                                                args:
                                                                    "model": "tournamentButton"
                                                                    "visible": "isTournamentParticipant and not trainingVisible and not isInSquad"
                                                                    "prebattleSettings": "account.prebattleModel.settings"
                                                                    "serverTime": "session.serverTime"
                                                                eventActions:
                                                                - ["ON_TOURN_BTN_CLICKED", "ON_TOURN_BTN_CLICKED", ""]
                                                    -   class: "UIControl"
                                                        name: "StuffQuestWidget"
                                                        size: [32.000000, 32.000000]
                                                        input: false
                                                        components:
                                                            SizePolicy:
                                                                horizontalPolicy: "PercentOfFirstChild"
                                                                verticalPolicy: "PercentOfFirstChild"
                                                            UIChildComponent0:
                                                                condition: "app.sDlc.isGeneralPackLoaded and stuffQuests.quests.Size() > 0"
                                                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/Quests/StuffQuestWidget/StuffQuestWidget.yaml"
                                                                args:
                                                                    "serverTime": "session.serverTime"
                                                                    "model": "stuffQuests"
                                                    -   class: "UIControl"
                                                        name: "StoryButtonsHolder"
                                                        input: false
                                                        components:
                                                            SizePolicy:
                                                                horizontalPolicy: "PercentOfFirstChild"
                                                                verticalPolicy: "PercentOfParent"
                                                            UIChildComponent0:
                                                                childType: "kPrototype"
                                                                condition: "app.sDlc.isGeneralPackLoaded and not account.tutorialData.isTutorialActive"
                                                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/Story/StoryFragment.yaml"
                                                                args:
                                                                    "auction": "auction"
                                                                    "serverTime": "session.serverTime"
                                                                    "storyFragment": "storyFragment"
                                                                    "deviceType": "app.constants.deviceType"
                                                                    "battlePass": "battlePass"
                                                                    "realm": "session.realm"
                                                                    "highlightControl": "account.tutorialData.currentHighlightControl"
                                                                    "subscription": "lobby.subscription"
                                                                eventActions:
                                                                - ["SHOW_INFO", "SHOW_INFO", "_event.storyName"]
                                                                - ["SHOW_PROGRESS", "SHOW_PROGRESS", "_event.storyName"]
                                                                - ["STORY_BOX_PRESSED", "STORY_BOX_PRESSED", "_event.storyName"]
                                                                - ["ON_BATTLEPASS_BTN_CLICKED", "ON_BATTLEPASS_BTN_CLICKED", ""]
                                                                - ["AUCTION_BUTTON_PRESSED", "AUCTION_BUTTON_PRESSED", ""]
                                                                - ["STORY_BUTTON_PRESSED", "STORY_BUTTON_PRESSED", "_event.index"]
                                                                - ["STORY_AGGREGATED_PRESSED", "STORY_AGGREGATED_PRESSED", "_event.index"]
                                                                - ["OnSubscriptionPressed", "OnSubscriptionPressed", ""]
                                                        bindings:
                                                        - ["visible", "not account.tutorialData.isTutorialActive"]
                                            -   class: "UIControl"
                                                name: "Center"
                                                input: false
                                                components:
                                                    Anchor:
                                                        hCenterAnchorEnabled: true
                                                    LinearLayout:
                                                        orientation: "TopDown"
                                                        spacing: 8.000000
                                                    SizePolicy:
                                                        horizontalPolicy: "PercentOfMaxChild"
                                                        verticalPolicy: "PercentOfParent"
                                                children:
                                                -   class: "UIControl"
                                                    name: "GameModeAbilities"
                                                    components:
                                                        Anchor:
                                                            hCenterAnchorEnabled: true
                                                        SizePolicy:
                                                            horizontalPolicy: "PercentOfMaxChild"
                                                            verticalPolicy: "PercentOfMaxChild"
                                                        UIChildComponent0:
                                                            condition: "lobby.isTankLoaded and not lobby.isTankInBattle and tankAbilitiesVisible and not rankUnlockRequired and not isInSquad"
                                                            prototypePath: "~res:/UI/Screens3/Lobby/Hangar/GameModeAbilities.yaml"
                                                            args:
                                                                "abilities": "selectedTank.abilities[session.gameModesAccountModel.mode.gameModeOptions.arcadeAbilities].abilities"
                                                                "masterId": "\"CHOOSE_BATTLE_TYPE\""
                                                                "masterOffset": "vec2(0, 72)"
                                                                "isInputEnabled": "true"
                                                                "isArrowTop": "true"
                                                                "opacityValue": "1"
                                                            eventActions:
                                                            - ["ON_ABILITIES", "ON_ABILITIES", "0"]
                                                -   class: "UIControl"
                                                    name: "GameModeAvailabilityHolder"
                                                    input: false
                                                    components:
                                                        Anchor:
                                                            hCenterAnchorEnabled: true
                                                        SizePolicy:
                                                            horizontalPolicy: "PercentOfMaxChild"
                                                            verticalPolicy: "PercentOfMaxChild"
                                                        UIChildComponent0:
                                                            condition: "app.sDlc.isGeneralPackLoaded and not rankUnlockRequired and not isInSquad"
                                                            prototypePath: "~res:/UI/Screens3/Lobby/Hangar/HangarControlGroups/GameModeAvailabilityGroup.yaml"
                                                            args:
                                                                "isTraining": "account.prebattleModel.settings.prebattleType == PrebattleType.TRAINING"
                                                                "isSeasonMismatch": "session.gameModesAccountModel.mode.availabilityStatus == eGameModeAvailability.SEASON_MISMATCH"
                                                                "isVehicleLevelMismatch": "session.gameModesAccountModel.mode.availabilityStatus == eGameModeAvailability.VEHICLE_LEVEL_MISMATCH"
                                                                "availabilityMessage": "session.gameModesAccountModel.mode.availabilityMessage"
                                                -   class: "UIControl"
                                                    name: "DLCDownloadErrorHolder"
                                                    input: false
                                                    components:
                                                        Anchor:
                                                            hCenterAnchorEnabled: true
                                                        SizePolicy:
                                                            horizontalPolicy: "PercentOfChildrenSum"
                                                            verticalPolicy: "PercentOfMaxChild"
                                                        UIChildAnimatedSwitchingComponent:
                                                            switchPolicy: "kAfterRemovingAnimation"
                                                            keepUpdateBindings: false
                                                        UIChildComponent0:
                                                            condition: "DLCDownloadErrorVisible"
                                                            prototypePath: "~res:/UI/Screens3/Lobby/SmartDLC/DLCDownloadError.yaml"
                                                            args:
                                                                "errorDescription": "app.sDlc.errorMessage"
                                                                "visible": "true"
                                                            eventActions:
                                                            - ["SHOW_SMART_DLC_SCREEN", "SHOW_SMART_DLC_SCREEN", ""]
                                            -   class: "UIControl"
                                                name: "RightPanel"
                                                input: false
                                                components:
                                                    UIOpacityComponent: {}
                                                    Anchor:
                                                        rightAnchorEnabled: true
                                                    SizePolicy:
                                                        horizontalPolicy: "PercentOfMaxChild"
                                                        verticalPolicy: "PercentOfParent"
                                                    UILayoutEventComponent:
                                                        sizeChangedEvent: "RightPartSizeChanged"
                                                        sizeChangedEventData: "_size.Y"
                                                children:
                                                -   class: "UIControl"
                                                    name: "RightWrapper"
                                                    input: false
                                                    components:
                                                        Anchor:
                                                            rightAnchorEnabled: true
                                                        SizePolicy:
                                                            horizontalPolicy: "Formula"
                                                            horizontalFormula: "when not showPromotions -> parent, when promotionsHeight + rightBottomHeight + 16 < rightPartHeight -> maxChild, childrenSum"
                                                            verticalPolicy: "PercentOfParent"
                                                        FlowLayout:
                                                            orientation: "RightToLeft"
                                                            alignment: "Left"
                                                            hSpacing: 16.000000
                                                            vSpacing: 16.000000
                                                            vDynamicSpacing: true
                                                    bindings:
                                                    - ["FlowLayout.enabled", "showPromotions"]
                                                    children:
                                                    -   class: "UIControl"
                                                        name: "PromotionsWrapper"
                                                        input: false
                                                        components:
                                                            SizePolicy:
                                                                horizontalPolicy: "PercentOfChildrenSum"
                                                                verticalPolicy: "PercentOfChildrenSum"
                                                            UILayoutEventComponent:
                                                                sizeChangedEvent: "PromotionsSizeChanged"
                                                                sizeChangedEventData: "_size.Y"
                                                            UIChildComponent0:
                                                                childType: "kControl"
                                                                condition: "showPromotions"
                                                                control: "Promotions"
                                                    -   class: "UIControl"
                                                        name: "BottomHolder"
                                                        components:
                                                            Anchor:
                                                                rightAnchorEnabled: true
                                                                bottomAnchorEnabled: true
                                                            SizePolicy:
                                                                horizontalPolicy: "PercentOfChildrenSum"
                                                                verticalPolicy: "PercentOfMaxChild"
                                                            UILayoutEventComponent:
                                                                sizeChangedEvent: "RightBottomSizeChanged"
                                                                sizeChangedEventData: "_size.Y"
                                                        children:
                                                        -   class: "UIControl"
                                                            name: "DLCDownloadButtonHolder"
                                                            input: false
                                                            components:
                                                                SizePolicy:
                                                                    horizontalPolicy: "PercentOfChildrenSum"
                                                                    verticalPolicy: "PercentOfMaxChild"
                                                                UIChildAnimatedSwitchingComponent:
                                                                    switchPolicy: "kAfterRemovingAnimation"
                                                                    keepUpdateBindings: true
                                                                UIChildComponent0:
                                                                    childType: "kOldExpression"
                                                                    control: "when DLCDownloadButtonVisible -> \"~res:/UI/Screens3/Lobby/SmartDLC/DLCDownloadProgress.yaml\", \"\""
                                                                    args:
                                                                        "model": "app.sDlc"
                                                                    eventActions:
                                                                    - ["SHOW_SMART_DLC_SCREEN", "SHOW_SMART_DLC_SCREEN", ""]
                                                        -   prototype: "IconButtonWithBadge/IconButton"
                                                            name: "ChatButton"
                                                            components:
                                                                UIAttachLayoutMasterComponent:
                                                                    attachId: "CHAT"
                                                                UIDataParamsComponent:
                                                                    args:
                                                                        "locked": "not app.sDlc.isGeneralPackLoaded"
                                                                        "isBgVisible": "true"
                                                                        "blurOpacity": "0.000000"
                                                                        "visible": "account.diaryDataModel.isChatAvailable"
                                                                        "image": "\"~res:/Gfx/Lobby/icons/icon_chat_n.psd\""
                                                                        "type": "eButtonType.OPTIONAL_DARK"
                                                                        "sound": "eButtonSound.OK"
                                                                        "enabled": "true"
                                                                        "badgeType": "eBadgeType.Digit"
                                                                        "badgeValue": "when app.sDlc.isGeneralPackLoaded -> badge(session.chatInfo.friendRequestsCount + session.chatInfo.privateMessagesCount + messagesCountFromClanCanal + session.prebattleInvites.activeTrainingRoomInvitesNumber), \"\""
                                                                    eventActions:
                                                                    - ["ON_CLICK_BUTTON", "CHAT_PRESSED", ""]
                                        -   class: "UIControl"
                                            name: "Spacer"
                                            input: false
                                            components:
                                                SizePolicy:
                                                    horizontalPolicy: "PercentOfParent"
                                                    verticalPolicy: "FixedSize"
                                                    verticalValue: 8.000000
                                            bindings:
                                            - ["visible", "session.playerTanks.tanks.Empty()"]
                                    -   class: "UIControl"
                                        name: "SquadView"
                                        input: false
                                        components:
                                            SizePolicy:
                                                horizontalPolicy: "PercentOfParent"
                                                verticalPolicy: "PercentOfParent"
                                            UIChildComponent0:
                                                condition: "isInSquad"
                                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/Squad/SquadView.yaml"
                                                args:
                                                    "untakenRewardsCount": "battlePass.untakenRewardsCount"
                                                    "squadModel": "squadModel"
                                                    "showSquadUI": "showSquadUI"
                                                    "isInSquad": "isInSquad"
                                                    "rankUnlockRequired": "rankUnlockRequired"
                                                    "isDeveloperUI": "localDevUI and app.constants.developerUI"
                                                    "tankIsAccept": "when isNull(selectedTank) -> false, selectedTank.lockReason != LOCK_REASON.ON_ARENA"
                                                    "isRepair": "when isNull(selectedTank) -> false, selectedTank.repairCost > 0 -> true, false"
                                                    "pingIndicatorVisible": "pingIndicatorVisible"
                                                    "multiplierAdAvailable": "xpMultiplierAdAvailable"
                                                    "tankXpMultiplierActive": "isValidTankSelected and (selectedTank.stats.isBonusActive or selectedTank.maxCertificateXpFactor > session.serverConfig.dailyXPFactor or (session.stats.levelSharedDailyBonus.Contains(selectedTank.info.level) and session.stats.levelSharedDailyBonus[selectedTank.info.level] > 0))"
                                                    "app": "app"
                                                    "lobby": "lobby"
                                                    "session": "session"
                                                    "account": "account"
                                                eventActions:
                                                - ["ON_DISBAND_SQUAD_PRESSED", "ON_DISBAND_SQUAD_PRESSED", ""]
                                                - ["ON_READY_FOR_SQUAD_PRESSED", "ON_READY_FOR_SQUAD_PRESSED", ""]
                                                - ["ON_SQUAD_AND_HANGAR_TOGGLE_PRESSED", "ON_SQUAD_AND_HANGAR_TOGGLE_PRESSED", ""]
                                                - ["ON_DEV_INFO_BUTTON", "ON_DEV_INFO_BUTTON", ""]
                                                - ["DEV_LOGOUT", "DEV_LOGOUT", ""]
                                                - ["ON_DEV_BUTTON", "ON_DEV_BUTTON", ""]
                                                - ["ON_BOOSTERS", "ON_BOOSTERS", ""]
                                                - ["BATTLE_TYPE_PRESSED", "BATTLE_TYPE_PRESSED", ""]
                                                - ["SHOW_HINT_XP_TIMER", "SHOW_HINT_XP_TIMER", ""]
                                                - ["RESET_MULTIPLIER_WITH_AD", "RESET_MULTIPLIER_WITH_AD", ""]
                                                - ["ON_ABILITIES", "ON_ABILITIES", "_event.playerIndex"]
                                -   prototype: "InventoryPanel/Inventory"
                                    name: "Inventory"
                                    components:
                                        SizePolicy:
                                            horizontalPolicy: "PercentOfParent"
                                        UIDataParamsComponent:
                                            args:
                                                "tankPanelVisible": "showTanksPanel"
                                                "optionalDevicesAreVisible": "account.tutorialData.completedLessons.Contains(eTutorialLesson.kBattle4Reward)"
                                                "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                                                "modulesLayer": "when currentHighlightControl == eTutorialHighlights.kModuleHangar or currentHighlightControl == eTutorialHighlights.kModuleGunUpdateHangar -> 1, 0"
                                                "ammoLayer": "when currentHighlightControl == eTutorialHighlights.kTankAmmunition -> 1, 0"
                                                "ammoMasterId": "\"AMMO_HANGAR\""
                                                "modulesMasterId": "\"MODULES_HANGAR\""
                                                "visible": "not session.playerTanks.tanks.Empty()"
                                                "camoIsVisible": "account.diaryDataModel.isCustomizationAvailable"
                                                "tank": "selectedTank"
                                                "selectedTab": "InventoryTabType.UNDEFINED"
                                                "ammoIsVisible": "account.tutorialData.completedLessons.Contains(eTutorialLesson.kBattle4Reward)"
                                                "consumablesIsVisible": "account.tutorialData.completedLessons.Contains(eTutorialLesson.kBattle2Reward)"
                                                "provisionsIsVisible": "not isNull(selectedTank) and selectedTank.info.provisionSlots > 0 and not account.tutorialData.isTutorialActive"
                                                "crewFragmentVisible": "lobby.crewFragmentVisible"
                                                "session": "session"
                                                "panel": "inventoryPanel"
                                                "initializationAnimation": "eInventoryPanelAnimation.kNoAnimation"
                                                "isInHangar": "true"
                                                "lobby": "lobby"
                                                "showBackground": "false"
                            -   class: "UIControl"
                                name: "OfferedTankControls"
                                input: false
                                components:
                                    SizePolicy:
                                        horizontalPolicy: "PercentOfParent"
                                        verticalPolicy: "PercentOfParent"
                                    UIChildComponent0:
                                        childType: "kPrototype"
                                        condition: "offeredTankSelected"
                                        prototypePath: "~res:/UI/Screens3/Lobby/Hangar/Offers/OfferedTankInfo.yaml"
                                        args:
                                            "offer": "tanksPanel.offeredTank.tank"
                                            "serverTime": "session.serverTime"
                                            "taxMessage": "tanksPanel.offeredTank.taxMessage"
                                            "nintendoSwitch": "app.constants.nsb"
                                        eventActions:
                                        - ["SHOW_MECHANIC_INFO", "SHOW_MECHANIC_INFO", "_event"]
                                        - ["EXECUTE_OFFER_ACTION", "EXECUTE_OFFER_ACTION", ""]
                                        - ["SHOW_OFFERED_TANK_MODULES", "SHOW_OFFERED_TANK_MODULES", ""]
                    -   class: "UIControl"
                        name: "UnlockRankHint"
                        input: false
                        components:
                            Anchor:
                                hCenterAnchorEnabled: true
                                topAnchorEnabled: true
                            IgnoreLayout: {}
                            UIChildComponent0:
                                condition: "not offeredTankSelected and rankUnlockRequired"
                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/UnlockTankRankHint.yaml"
                                args:
                                    "tank": "selectedTank.info"
                                    "ranksCache": "lobby.ranksCache"
                                eventActions:
                                - ["UnlockRank", "ON_INVENTORY_TAB_SELECT", "InventoryTabType.PROGRESS"]
                                - ["FirstRankSoundPlayed", "FirstRankSoundPlayed", "_event.tankDescriptor"]
            -   class: "UIControl"
                name: "FadedBlur"
                components:
                    UIOpacityComponent:
                        opacity: 0.000000
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIInputEventComponent:
                        onTouchUpInside: "SwitchFilterAnimation"
                        onTouchUpInsideData: "false"
                    StyleSheet: {}
                bindings:
                - ["visible", "enableBlur"]
                - ["input", "captureInput"]
                children:
                -   prototype: "OverlayBlur/BlurAndFade"
                    name: "BlurAndFade"
                    children:
                    -   path: "Blur"
                        components:
                            UIPostProcessTextureComponent2:
                                materialPath: "~res:/Materials/2d.Textured.Alphablend.material"
                            UIPostProcessCacheComponent:
                                cachedFileId: "HangarBlur"
            -   class: "UIControl"
                name: "TanksPanelHolder"
                input: false
                classes: "notch-tightly-bottom-inset"
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: 88.000000
                        rightAnchorEnabled: true
                        bottomAnchorEnabled: true
                    IgnoreLayout: {}
                    UIAnchorSafeAreaComponent:
                        leftSafeInset: "INSET"
                        leftInsetCorrection: -16.000000
                    UIChildComponent0:
                        condition: "showTanksPanel"
                        prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/TanksPanel.yaml"
                        args:
                            "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                            "account": "account"
                            "layer": "when account.tutorialData.isTutorialActive and account.tutorialData.currentHighlightControl == eTutorialHighlights.kTree -> 1, 0"
                            "filter": "tanksPanel.filter"
                            "tanks": "tanksPanel.tanks"
                            "resources": "lobby.battleResources"
                            "offeredTank": "tanksPanel.offeredTank"
                            "selectedVehicle": "tanksPanel.selectedVehicle"
                            "levelSharedBonus": "session.stats.levelSharedDailyBonus"
                            "birthdayXpFactor": "session.serverConfig.birthdayXPFactor"
                            "birthdayCreditsFactor": "session.serverConfig.birthdayCreditsFactor"
                            "dailyXpFactor": "session.serverConfig.dailyXPFactor"
                            "withOpenedFilter": "false"
                            "serverTime": "session.serverTime"
                            "prebattle": "account.prebattleModel"
                            "buyoutTanksCount": "session.stats.accountDossierDescr.buyoutVehiclesCount"
                            "freeSlots": "session.stats.slots - session.playerTanks.tanks.Size()"
                            "bestCertificateFactor": "session.playerTanks.bestCertificateFactor"
                            "ranksConfig": "session.rankConfig"
                        eventActions:
                        - ["SHOW_TANKS_TREE", "SHOW_TANKS_TREE", ""]
                        - ["RESET_FILTER", "RESET_FILTER", ""]
                        - ["SWITCH_LEVEL_FILTER", "SWITCH_LEVEL_FILTER", "_event"]
                        - ["SWITCH_CLASS_FILTER", "SWITCH_CLASS_FILTER", "_event"]
                        - ["SWITCH_NATION_FILTER", "SWITCH_NATION_FILTER", "_event"]
                        - ["SWITCH_FAVORITE_FILTER", "SWITCH_FAVORITE_FILTER", ""]
                        - ["SWITCH_DAILY_BONUS_FILTER", "SWITCH_DAILY_BONUS_FILTER", ""]
                        - ["SWITCH_BIRTHDAY_FILTER", "SWITCH_BIRTHDAY_FILTER", ""]
                        - ["SWITCH_CERIFICATE_BONUS_FILTER", "SWITCH_CERIFICATE_BONUS_FILTER", ""]
                        - ["SWITCH_NON_ELITE_FILTER", "SWITCH_NON_ELITE_FILTER", ""]
                        - ["SWITCH_ELITE_FILTER", "SWITCH_ELITE_FILTER", ""]
                        - ["SWITCH_RESEARCHABLE_FILTER", "SWITCH_RESEARCHABLE_FILTER", ""]
                        - ["SWITCH_PREMIUM_FILTER", "SWITCH_PREMIUM_FILTER", ""]
                        - ["SWITCH_COLLECTIBLE_FILTER", "SWITCH_COLLECTIBLE_FILTER", ""]
                        - ["SWITCH_TANK_FAVORITE", "SWITCH_TANK_FAVORITE", "_event"]
                        - ["SELECT_PLAYER_TANK", "OnTankSelected", "selectedTankDescr.rawDescr"]
                        - ["SELECT_PLAYER_TANK", "SELECT_PLAYER_TANK", "_event"]
                        - ["SELECT_OFFERED_TANK", "OnTankSelected", "selectedTankDescr.rawDescr"]
                        - ["SELECT_OFFERED_TANK", "SELECT_OFFERED_TANK", "_event"]
                        - ["BUYOUT_TANKS", "BUYOUT_TANKS", ""]
                        - ["BUY_SLOTS", "BUY_SLOTS", ""]
                        - ["SWITCH_FILTER", "SwitchFilterAnimation", "_event.show"]
                        - ["FILTER_ANIMATION_FINISHED", "FILTER_ANIMATION_FINISHED", ""]
                    StyleSheet:
                        styles: "~res:/UI/Screens3/SafeArea.style.yaml"
            -   class: "UIControl"
                name: "SideBar"
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        topAnchorEnabled: true
                        bottomAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfMaxChild"
                    UIChildComponent0:
                        childType: "kPrototype"
                        prototypePath: "~res:/UI/Screens3/Lobby/Hangar/Sidebar/SideBarHangar.yaml"
                        args:
                            "lobby": "lobby"
                            "battleRating": "battleRating"
                            "avatar": "lobby.avatar"
                            "account": "account"
                            "menu": "menu"
                            "app": "app"
                            "session": "session"
                            "squadMembers": "squadMembers"
                        eventActions:
                        - ["ON_AVATAR_CLICKED", "ON_AVATAR_CLICKED", "_event"]
                        - ["SHOW_TANKS_TREE", "SHOW_TANKS_TREE", ""]
                        - ["ON_SQUAD_CLICKED", "ON_SQUAD_CLICKED", "_event"]
                        - ["SQUAD_SEARCH", "SQUAD_SEARCH", ""]
                        - ["SETTINGS_PRESSED", "SETTINGS_PRESSED", ""]
                        - ["COMMUNITY_SELECT", "COMMUNITY_SELECT", "_event"]
                        - ["AVATAR_PRESSED", "SHOW_ACHIEVEMENTS", ""]
                        - ["NEWS_PRESSED", "NEWS_PRESSED", ""]
                        - ["SQUAD_INVITE_SHOW", "SQUAD_INVITE_SHOW", "_event"]
                        - ["CLANS_PRESSED", "CLANS_PRESSED", ""]
                        - ["TOURNAMENTS_PRESSED", "TOURNAMENTS_PRESSED", ""]
                        - ["LEADERBOARD_PRESSED", "LEADERBOARD_PRESSED", ""]
                        - ["COMMUNITY_SHOW", "COMMUNITY_SHOW", ""]
                        - ["TASK_JOURNAL_PRESSED", "TASK_JOURNAL_PRESSED", "_event.tab, _event.slotId"]
                        - ["STORAGE_PRESSED", "STORAGE_PRESSED", ""]
                        - ["TRAINING_PRESSED", "TRAINING_PRESSED", ""]
            -   class: "UIControl"
                name: "UITestPage"
                input: false
                components:
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIChildComponent0:
                        condition: "showTestPage and app.constants.developerUI"
                        prototypePath: "~res:/UI/Screens3/Common/UITestPage.yaml"
            -   class: "UIControl"
                name: "ShowDev"
                components:
                    Anchor:
                        rightAnchorEnabled: true
                        rightAnchor: 10.000000
                        bottomAnchorEnabled: true
                        bottomAnchor: 130.000000
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfMaxChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIInputEventComponent:
                        onTouchUpInside: "SHOW_DEV_UI"
                bindings:
                - ["visible", "app.constants.developerUI"]
                children:
                -   class: "UIControl"
                    name: "Caption"
                    input: false
                    classes: "bold t-content-h0 white-wild-sand-text"
                    components:
                        UITextComponent:
                            text: "DEV"
                            fontSize: 7.000000
                        Anchor:
                            hCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfContent"
                            horizontalValue: 100.000000
                            verticalPolicy: "FixedSize"
                            verticalValue: 24.000000
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Font.style.yaml"
    -   class: "UIControl"
        name: "NavigationPanel"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "isGamepad and isFilterNavPanel and not account.tutorialData.isTutorialActive"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "NavigationPanelFilterContent"
            UIChildComponent1:
                condition: "isGamepad and not isFilterNavPanel and not account.tutorialData.isTutorialActive"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "NavigationPanelHangarContent"
            UIChildComponent2:
                condition: "isGamepad and account.tutorialData.isTutorialActive"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "NavigationPanelHangarTutorialContent"
Slots:
-   class: "UIControl"
    name: "NavigationPanelHangarContent"
    input: false
    components:
        LinearLayout:
            orientation: "LeftToRight"
            spacing: 24.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "SelectTank"
        size: [32.000000, 32.000000]
        visible: true
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconsWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Hangar/ChoiceTank\""
                    "nsControls": "[ eNintendoSwitchControls.LeftTrigger; eNintendoSwitchControls.RightTrigger; ]"
    -   class: "UIControl"
        name: "ButtonsList"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIRepeatComponent:
                control: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                dataContainer: "when not offeredTankSelected -> nintendoNavigationHangarLabels, nintendoNavigationHangarPremTankLabels"
                args:
                    "text": "_item"
                    "icon": "_key"
    -   class: "UIControl"
        name: "BattleButton"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                condition: "not offeredTankSelected"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "localize(xButtonText)"
                    "icon": "eNintendoSwitchControls.X"
-   class: "UIControl"
    name: "NavigationPanelHangarTutorialContent"
    input: false
    components:
        LinearLayout:
            orientation: "LeftToRight"
            spacing: 24.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/TutorialNavigationPanel.yaml"
            args:
                "currentHiglightControl": "account.tutorialData.currentHighlightControl"
-   class: "UIControl"
    name: "NavigationPanelFilterContent"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfMaxChild"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "ButtonsList"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIRepeatComponent:
                control: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                dataContainer: "nintendoNavigationFilterLabels"
                args:
                    "text": "_item"
                    "icon": "_key"
-   class: "UIControl"
    name: "Promotions"
    input: false
    components:
        Anchor:
            rightAnchorEnabled: true
        LinearLayout:
            orientation: "TopDown"
            spacing: 8.000000
        SizePolicy:
            horizontalPolicy: "PercentOfMaxChild"
            verticalPolicy: "PercentOfChildrenSum"
        UIRepeatComponent:
            control: "~res:/UI/Screens3/Lobby/Promotions/PromotionsWidget.yaml"
            dataContainer: "lobby.promotions.promotions"
            args:
                "size": "_key"
                "data": "_item"
                "debugMode": "app.constants.developerUI and localDevUI"
                "serverTime": "session.serverTime"
            eventActions:
            - ["PIGGY_BANK_STAGE_PROGRESS", "PIGGY_BANK_STAGE_PROGRESS", "_event.stuffDescr"]
            - ["PIGGY_BANK_SAVE_PROGRESS", "PIGGY_BANK_SAVE_PROGRESS", "_event.stuffDescr"]
            - ["ON_PROMOTION_CLICKED", "SHOW_PROMOTION", "_event.index, _key"]
    bindings:
    - ["visible", "showPromotions"]
