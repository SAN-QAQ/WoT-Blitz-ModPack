Header:
    version: 144
ImportedPackages:
- "~res:/UI/Screens3/Common/BlurModified.yaml"
Prototypes:
-   class: "UIControl"
    name: "SubscriptionStage"
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Subscription/SubscriptionStageInitialization.animation"
        UIOpacityComponent: {}
        LinearLayout:
            orientation: "TopDown"
            padding: "13; 0"
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 150.000000
            verticalPolicy: "PercentOfChildrenSum"
        UIInputEventComponent:
            onTouchUpInside: "GatherReward"
            onTouchUpInsideData: "true"
        UIDataParamsComponent:
            params:
            - ["string", "attachId", "\"\"", "\"\""]
            - ["int", "index", "0", "0"]
            - ["SubscriptionStageViewModel", "stage", "null", "{ \"state\" = eSubscriptionStageState.kReady; }"]
            - ["int64", "time", "0L", "3000L"]
            - ["bool", "subscriptionFinished", "false", "false"]
            - ["int", "maxRewards", "1", "3"]
            - ["int64", "serverTime", "0L", "0L"]
            - ["int", "layer", "0", "0"]
            events:
            - "ON_REWARD_CLICKED(ResourceDetailed resource, string attachId)"
            - "BEGIN_GATHERING_ANIMATION"
            - "END_GATHERING_ANIMATION"
        UIDataLocalVarsComponent:
            data:
            - ["float", "timerAnimationOffset", "-50.000000"]
            - ["float", "timerAnimationTime", "0.350000"]
            - ["int", "rewardHeight", "24"]
        UIDataLocalBindingsComponent:
            data:
            - ["int", "rewardSectionHeight", "rewardHeight * maxRewards"]
            - ["bool", "pastStage", "stage.state == eSubscriptionStageState.kReceived or stage.state == eSubscriptionStageState.kNotReceived"]
            - ["bool", "urlStuff", "stage.rewards.Size() == 1 and not isNull(stage.rewards[0].stuff) and not empty(stage.rewards[0].stuff.iconUrl)"]
            - ["string", "stateClass", "when stage.state == eSubscriptionStageState.kFeature -> \"feature\", stage.state == eSubscriptionStageState.kReady -> \"ready\", stage.state == eSubscriptionStageState.kGathering -> \"gathering\", stage.state == eSubscriptionStageState.kNotReady -> \"not-ready\", stage.state == eSubscriptionStageState.kReceived -> \"received\", stage.state == eSubscriptionStageState.kNotReceived -> \"not-received\", \"\""]
            - ["string", "mainRewardSprite", "when stage.rewards.Empty() -> \"\", stage.rewards.Size() > 1 -> \"~res:/Gfx/Lobby/subscriptions/subscription_any-currency\", stage.rewards[0].type == ResourceType.gold -> \"~res:/Gfx/Lobby/currency/currency_gold_xl\", stage.rewards[0].type == ResourceType.credits -> \"~res:/Gfx/Lobby/currency/currency_silver_xl\", stage.rewards[0].type == ResourceType.premium -> \"~res:/Gfx/Lobby/currency/currency_premium_xl\", stage.rewards[0].type == ResourceType.free_xp -> \"~res:/Gfx/Lobby/currency/currency_free-xp_xl\", stage.rewards[0].type == ResourceType.stuff and not urlStuff -> stage.rewards[0].stuff.icon, \"\""]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Subscription/SubscriptionStage.actions"
        UIEventOnDataComponent0:
            watchedDataExpression: "stage.state"
            ifExpression: "_lastValue == eSubscriptionStageState.kFeature and (_value == eSubscriptionStageState.kReady or _value == eSubscriptionStageState.kNotReady)"
            eventName: "ShowNewTimer"
        UILayerComponent: {}
        StyleSheet:
            styles: "~res:/UI/Screens3/ButtonSound.style.yaml"
    bindings:
    - ["input", "stage.state == eSubscriptionStageState.kReady"]
    - ["UIOpacityComponent.opacity", "when pastStage -> 0.500000, 1.000000"]
    - ["UILayerComponent.layer", "layer"]
    children:
    -   class: "UIControl"
        name: "Content"
        input: false
        components:
            LinearLayout:
                orientation: "TopDown"
                skipInvisible: false
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfChildrenSum"
        children:
        -   class: "UIControl"
            name: "LayoutIndependent"
            input: false
            components:
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIControl"
                name: "Bg"
                input: false
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        sprite: "~res:/Gfx/UI/LobbyCommon/info_background.psd"
                        perPixelAccuracy: "PER_PIXEL_ACCURACY_FORCED"
                        leftRightStretchCap: 7.000000
                        topBottomStretchCap: 7.000000
                    UIOpacityComponent:
                        ignoreParentOpacity: true
                    Anchor:
                        leftAnchorEnabled: true
                        rightAnchorEnabled: true
                        topAnchorEnabled: true
                        bottomAnchorEnabled: true
                        bottomAnchor: -112.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
                bindings:
                - ["Background.frame", "when stage.state == eSubscriptionStageState.kReady or stage.state == eSubscriptionStageState.kGathering -> 1, 0"]
                children:
                -   prototype: "BlurModified/BlurModified"
                    name: "Blur"
                    components:
                        UIDataParamsComponent:
                            args:
                                "bgStyle": "when pastStage -> \"grey-shark-70-bg\", \"\""
            -   class: "UIControl"
                name: "BgCorrect"
                input: false
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        sprite: "~res:/Gfx/UI/LobbyCommon/info_background.psd"
                        color: [1.000000, 1.000000, 1.000000, 0.500000]
                        perPixelAccuracy: "PER_PIXEL_ACCURACY_FORCED"
                        leftRightStretchCap: 7.000000
                        topBottomStretchCap: 7.000000
                    Anchor:
                        leftAnchorEnabled: true
                        rightAnchorEnabled: true
                        topAnchorEnabled: true
                        bottomAnchorEnabled: true
                        bottomAnchor: -112.000000
                bindings:
                - ["visible", "not pastStage"]
                children:
                -   prototype: "BlurModified/BlurModified"
                    name: "Blur"
                    components:
                        UIDataParamsComponent:
                            args:
                                "bgStyle": "bgStyle"
            -   class: "UIControl"
                name: "Index"
                input: false
                components:
                    ClipContent:
                        enabled: true
                    Anchor:
                        leftAnchorEnabled: true
                        rightAnchorEnabled: true
                        topAnchorEnabled: true
                        topAnchor: 1.000000
                    SizePolicy:
                        verticalPolicy: "PercentOfChildrenSum"
                children:
                -   class: "UIControl"
                    name: "Value"
                    input: false
                    classes: "bold subscription-stage-index white-wild-sand-15-text"
                    components:
                        UITextComponent:
                            align: ["LEFT", "VCENTER"]
                        Anchor:
                            leftAnchorEnabled: true
                            topAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfContent"
                            verticalPolicy: "PercentOfContent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Lobby/Subscription/SubscriptionStage.style.yaml"
                    bindings:
                    - ["UITextComponent.text", "index + 1"]
            -   class: "UIControl"
                name: "ImageWrapper"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        topAnchorEnabled: true
                        topAnchor: 146.000000
                children:
                -   class: "UIControl"
                    name: "Image"
                    input: false
                    components:
                        UITextureComponent: {}
                        SizePolicy: {}
                    bindings:
                    - ["visible", "not pastStage and not urlStuff"]
                    - ["UITextureComponent.spritePath", "mainRewardSprite"]
                -   class: "UIControl"
                    name: "UrlImage"
                    input: false
                    components:
                        Background: {}
                        UIUrlImageComponent: {}
                    bindings:
                    - ["visible", "not pastStage and urlStuff"]
                    - ["UIUrlImageComponent.imageUrl", "when urlStuff -> stage.rewards[0].stuff.iconUrl, \"\""]
                -   class: "UIControl"
                    name: "Status"
                    input: false
                    components:
                        Background:
                            drawType: "DRAW_ALIGNED"
                            colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                    bindings:
                    - ["visible", "pastStage"]
                    - ["classes", "when stage.state == eSubscriptionStageState.kNotReceived -> \"white-wild-sand-bg\", stage.state == eSubscriptionStageState.kReceived -> \"green-green-bg\", \"\""]
                    - ["Background.sprite", "when stage.state == eSubscriptionStageState.kReceived -> \"~res:/Gfx/UI/Subscription/AcceptIcon\", stage.state == eSubscriptionStageState.kNotReceived -> \"~res:/Gfx/UI/Subscription/DeclineIcon\", \"\""]
            -   class: "UIParticles"
                name: "FastLine"
                pivot: [0.500000, 0.500000]
                input: false
                effectPath: "~res:/3d/FX/UI/DailyReward/FastLine.sc2"
                autoStart: true
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: -1.000000
                        topAnchorEnabled: false
                        vCenterAnchorEnabled: true
                        vCenterAnchor: -15.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "stage.state == eSubscriptionStageState.kGathering"]
            -   class: "UIParticles"
                name: "StaticLight"
                pivot: [0.500000, 0.500000]
                input: false
                effectPath: "~res:/3d/FX/UI/DailyReward/StaticLight.sc2"
                autoStart: true
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: -2.000000
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "stage.state == eSubscriptionStageState.kReady"]
            -   class: "UIParticles"
                name: "Light"
                pivot: [0.500000, 0.500000]
                input: false
                effectPath: "~res:/3d/FX/UI/DailyReward/Light_dailyReward.sc2"
                autoStart: true
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: 2.000000
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "stage.state == eSubscriptionStageState.kReady"]
            -   class: "UIParticles"
                name: "OpticalFlare"
                pivot: [0.500000, 0.500000]
                input: false
                effectPath: "~res:/3d/FX/UI/DailyReward/OpticalFlare.sc2"
                autoStart: true
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                        vCenterAnchor: 72.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "stage.state == eSubscriptionStageState.kGathering"]
        -   class: "UIControl"
            name: "TopSpacer"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 212.000000
        -   class: "UIControl"
            name: "Reward"
            position: [0.000000, 212.000000]
            input: false
            components:
                LinearLayout:
                    orientation: "TopDown"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                UIRepeatComponent:
                    control: "~res:/UI/Screens3/Lobby/Subscription/SubscriptionReward.yaml"
                    dataContainer: "stage.rewards"
                    args:
                        "attachId": "attachId + \"_\" + str(_index)"
                        "resource": "_item"
                    eventActions:
                    - ["ON_CURRENCY_CLICKED", "ON_REWARD_CLICKED", "_item, _event"]
            bindings:
            - ["SizePolicy.verticalValue", "rewardSectionHeight"]
        -   class: "UIControl"
            name: "BottomSpacer"
            size: [32.000000, 32.000000]
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 14.000000
        -   class: "UIControl"
            name: "StatusText"
            input: false
            components:
                Anchor:
                    bottomAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 50.000000
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
            bindings:
            - ["visible", "pastStage"]
            children:
            -   class: "UIControl"
                name: "Received"
                input: false
                classes: "t-body regular green-la-palma-text"
                components:
                    UITextComponent:
                        text: "subscription/rewardScreen/rewardReceived"
                        colorInheritType: "COLOR_MULTIPLY_ALPHA_ONLY"
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: 4.000000
                        rightAnchorEnabled: true
                        rightAnchor: 4.000000
                        topAnchorEnabled: true
                        bottomAnchorEnabled: true
                bindings:
                - ["visible", "stage.state == eSubscriptionStageState.kReceived"]
            -   class: "UIControl"
                name: "NotReceived"
                input: false
                classes: "t-body regular white-wild-sand-text"
                components:
                    UITextComponent:
                        text: "subscription/rewardScreen/rewardExpired"
                        colorInheritType: "COLOR_MULTIPLY_ALPHA_ONLY"
                        multiline: "MULTILINE_ENABLED"
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: 4.000000
                        rightAnchorEnabled: true
                        rightAnchor: 4.000000
                        topAnchorEnabled: true
                        bottomAnchorEnabled: true
                bindings:
                - ["visible", "stage.state == eSubscriptionStageState.kNotReceived"]
    -   class: "UIControl"
        name: "Ribbon"
        input: false
        components:
            Background: {}
            Anchor:
                rightAnchorEnabled: true
                rightAnchor: -5.000000
                topAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfChildrenSum"
        bindings:
        - ["visible", "stage.state == eSubscriptionStageState.kReady or stage.state == eSubscriptionStageState.kGathering"]
        children:
        -   class: "UIControl"
            name: "Content"
            input: false
            classes: "green-la-palma-bg"
            components:
                Background:
                    drawType: "DRAW_FILL"
                    colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
                LinearLayout:
                    padding: "6.000000"
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "FixedSize"
                    verticalValue: 26.000000
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            children:
            -   class: "UIControl"
                name: "Value"
                input: false
                classes: "t-body regular white-wild-sand-text"
                components:
                    UITextComponent:
                        text: "subscription/rewardScreen/currentReward"
                        colorInheritType: "COLOR_MULTIPLY_ALPHA_ONLY"
                        align: ["RIGHT", "VCENTER"]
                    Anchor:
                        vCenterAnchorEnabled: true
                        vCenterAnchor: -1.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfContent"
                        verticalPolicy: "PercentOfContent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Font.style.yaml"
        -   class: "UIControl"
            name: "Triangle"
            input: false
            components:
                Background:
                    sprite: "~res:/Gfx/UI/Subscription/Triangle.psd"
                    color: [0.007843, 0.305882, 0.019608, 1.000000]
                    colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
                Anchor:
                    rightAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
        -   class: "UIControl"
            name: "Shadow"
            input: false
            components:
                Background:
                    drawType: "DRAW_STRETCH_BOTH"
                    sprite: "~res:/Gfx/UI/Subscription/Shadow.psd"
                    colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
                Anchor:
                    topAnchorEnabled: true
                    topAnchor: 26.000000
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "parent - 5"
                    verticalPolicy: "PercentOfContent"
    -   class: "UIControl"
        name: "BottomAnchor"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                bottomAnchorEnabled: true
        bindings:
        - ["visible", "stage.state == eSubscriptionStageState.kReady or stage.state == eSubscriptionStageState.kNotReady or stage.state == eSubscriptionStageState.kGathering"]
        children:
        -   class: "UIControl"
            name: "BottomWrapper"
            pivot: [0.500000, 0.000000]
            input: false
            components:
                UIOpacityComponent:
                    ignoreParentOpacity: true
                    opacity: 0.000000
                LinearLayout:
                    orientation: "TopDown"
                    padding: "4.000000"
                    spacing: 2.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfChildrenSum"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
            children:
            -   class: "UIControl"
                name: "State"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        condition: "stage.state == eSubscriptionStageState.kReady or stage.state == eSubscriptionStageState.kGathering"
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Button.yaml"
                        args:
                            "sound": "eButtonSound.OPEN"
                            "caption": "localize(\"subscription/rewardScreen/claim\")"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "GatherReward", "false"]
                    UIChildComponent1:
                        childType: "kControl"
                        condition: "stage.state == eSubscriptionStageState.kNotReady"
                        control: "NotReadyReward"
                bindings:
                - ["visible", "not subscriptionFinished"]
            -   class: "UIControl"
                name: "Timer"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Timer.yaml"
                        args:
                            "serverTime": "serverTime"
                            "time": "time"
                bindings:
                - ["visible", "time > serverTime"]
    -   class: "UIControl"
        name: "AttachControl"
        input: false
        components:
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "Formula"
                verticalFormula: "parent + 52"
            UIAttachLayoutMasterComponent: {}
        bindings:
        - ["UIAttachLayoutMasterComponent.attachId", "\"STAGE_\" + str(index)"]
Slots:
-   class: "UIControl"
    name: "NotReadyReward"
    input: false
    classes: "t-subtitle regular white-wild-sand-text"
    components:
        UITextComponent:
            text: "subscription/rewardScreen/nextRewardTime"
        SizePolicy:
            horizontalPolicy: "PercentOfContent"
            verticalPolicy: "PercentOfContent"
        StyleSheet:
            styles: "~res:/UI/Screens3/Font.style.yaml"
