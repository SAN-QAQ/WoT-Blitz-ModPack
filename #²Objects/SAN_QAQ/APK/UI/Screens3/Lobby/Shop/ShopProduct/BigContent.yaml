Header:
    version: 161
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/Blur.yaml"
Prototypes:
-   class: "UIControl"
    name: "Content"
    input: false
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Shop/ShopProduct/ContentInitialization.animation"
        LinearLayout:
            orientation: "TopDown"
            spacing: 8.000000
        SizePolicy:
            horizontalPolicy: "FixedSize"
            verticalPolicy: "FixedSize"
            verticalValue: 400.000000
        UIDataParamsComponent:
            params:
            - ["float", "maxDiscount", "0.000000", "0.000000"]
            - ["bool", "isChina", "false", "false"]
            - ["bool", "isBigSlider", "false", "false"]
            - ["int", "horizontalSize", "240", "480"]
            - ["string", "taxMessage", "\"\"", "\"\""]
            - ["bool", "nintendoSwitch", "false", "false"]
            - ["bool", "hasBadgeLabel", "false", "true"]
            - ["bool", "initializationEnded", "false", "true"]
            - ["ShopProduct", "product", "null", "{ }"]
            - ["int64", "serverTime", "0L", "100L"]
            - ["bool", "arabicLocalization", "false", "false"]
            - ["bool", "debugMode", "false", "false"]
            - ["float", "shopScrollBottomOffset", "0.000000", "40.000000"]
            - ["float", "shopScrollTopOffset", "0.000000", "48.000000"]
            - ["bool", "isAtLeastMediumDevice", "false", "true"]
            - ["bool", "selected", "false", "true"]
            - ["bool", "available", "false", "true"]
            - ["bool", "forcedTimerHide", "false", "false"]
            events:
            - "PIGGY_BANK_STAGE_PROGRESS(int stuffDescr)"
            - "PIGGY_BANK_SAVE_PROGRESS(int stuffDescr)"
            - "LOADED"
        UIDataLocalVarsComponent:
            data:
            - ["float", "blurAnimationTime", "0.500000"]
            - ["bool", "showBlur", "false"]
            - ["vector<int>", "oneVector", "[ 1; ]"]
            - ["vector<int>", "emptyVector", "[ ]"]
        UIDataLocalBindingsComponent:
            data:
            - ["bool", "noArtFooter", "product.noArt and (isNull(product.vehicle) or product.cardContent.Empty())"]
            - ["int64", "timeLeft", "when not isNull(product.rouletteInfo) -> product.rouletteInfo.expirationTime - serverTime, product.promoExpiresAt - serverTime"]
            - ["ResourceDetailed", "singleItem", "when product.cardContent.Size() == 1 -> product.content[product.cardContent[0]], null"]
            - ["bool", "footerVisible", "available and not noArtFooter and (not isNull(product.piggyBank) or (not isNull(product.rouletteInfo) and not product.cardContent.Empty()) or (not isNull(singleItem) and singleItem.type == ResourceType.stuff and singleItem.stuff.type == ArtefactType.chest) or (not isNull(singleItem) and (singleItem.type == ResourceType.gold or singleItem.type == ResourceType.free_xp or singleItem.type == ResourceType.credits)) or (product.cardContent.Size() > 1 or (not isNull(singleItem) and singleItem.type != ResourceType.vehicle and singleItem.type != ResourceType.premium)))"]
            - ["bool", "blurVisible", "showBlur and isAtLeastMediumDevice and initializationEnded"]
            - ["bool", "timerVisible", "(product.isPromo and available and timeLeft <= 604800L and not forcedTimerHide) or not isNull(product.rouletteInfo)"]
            - ["bool", "giftableVisible", "product.giftable and product.giftAvailableTimes > 0"]
            - ["bool", "requiresEShopButton", "nintendoSwitch and not product.salePrice.resources.Empty() and product.salePrice.resources[0].type == ResourceType.real_currency"]
            - ["bool", "isSingleChest", "not isNull(singleItem) and singleItem.type == ResourceType.stuff and singleItem.stuff.type == ArtefactType.chest"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Shop/ShopProduct/BigContent.actions"
    bindings:
    - ["SizePolicy.horizontalValue", "horizontalSize"]
    children:
    -   class: "UIControl"
        name: "Spacer"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "FixedSize"
                verticalValue: 24.000000
        children:
        -   class: "UIControl"
            name: "Badge"
            size: [32.000000, 32.000000]
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildComponent0:
                    condition: "hasBadgeLabel"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Badge.yaml"
                    args:
                        "value": "localize(\"#common:Badge/New\")"
                        "type": "eBadgeType.Shop"
    -   class: "UIControl"
        name: "Wrapper"
        position: [0.000000, 31.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "FixedSize"
                verticalValue: 337.000000
        children:
        -   class: "UIControl"
            name: "PurchasePending"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 336.000000
                UIChildComponent0:
                    childType: "kControl"
                    condition: "product.pendingPurchase"
                    control: "PurchasePending"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
        -   class: "UIControl"
            name: "Footer"
            input: false
            components:
                Anchor:
                    bottomAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 47.000000
                UIChildComponent0:
                    childType: "kControl"
                    condition: "footerVisible"
                    control: "FooterWrapper"
        -   class: "UIControl"
            name: "Selection"
            size: [32.000000, 32.000000]
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 336.000000
                UIChildComponent0:
                    condition: "selected"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/SelectionRounded_r1.yaml"
        -   class: "UIControl"
            name: "RightLabels"
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                    rightAnchor: -4.000000
                    topAnchorEnabled: true
                    topAnchor: -4.000000
                LinearLayout:
                    orientation: "TopDown"
                    spacing: 1.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfChildrenSum"
            children:
            -   class: "UIControl"
                name: "Discount"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        condition: "(product.discount > 0.000000 or maxDiscount > 0.000000) and available"
                        prototypePath: "~res:/UI/Screens3/Common/DiscountLabel.yaml"
                        args:
                            "showUpToString": "isBigSlider"
                            "discount": "max(product.discount, maxDiscount)"
                            "size": "eDiscountLabelSize.Large"
                bindings:
                - ["visible", "product.discount > 0.000000"]
            -   class: "UIControl"
                name: "Bonus"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        condition: "not isNull(product.bonus) and available and not isBigSlider"
                        prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopProductBonus.yaml"
                        args:
                            "large": "true"
                            "bonus": "product.bonus"
                            "reversedAnimation": "arabicLocalization"
                            "timeValue": "product.content.Size() == 1 and product.content[0].type == ResourceType.premium"
                bindings:
                - ["visible", "not isNull(product.bonus)"]
            -   class: "UIControl"
                name: "Label"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        condition: "not isNull(product.label) and available and not isBigSlider"
                        prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopProductLabel.yaml"
                        args:
                            "labelText": "product.label.text"
                            "width": "143"
                            "color": "product.label.color"
                            "reversedAnimation": "arabicLocalization"
        -   class: "UIControl"
            name: "BottomLabels"
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                    bottomAnchorEnabled: true
                    bottomAnchor: 55.000000
                LinearLayout:
                    orientation: "LeftToRight"
                    padding: "16; -4"
                    spacing: 16.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfMaxChild"
            children:
            -   class: "UIControl"
                name: "TitleWrapper"
                position: [16.000000, 32.000000]
                input: false
                components:
                    Anchor:
                        bottomAnchorEnabled: true
                    LinearLayout:
                        orientation: "TopDown"
                        spacing: 8.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfChildrenSum"
                bindings:
                - ["LinearLayout.padding", "when not isSingleChest -> 8, 0"]
                children:
                -   class: "UIControl"
                    name: "Title"
                    input: false
                    components:
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "FixedSize"
                            verticalValue: 36.000000
                        UIChildComponent0:
                            condition: "product.useVehicleName and not isNull(product.vehicle)"
                            prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopProductVehicleTitle.yaml"
                            args:
                                "isBig": "true"
                                "hasBadge": "false"
                                "vehicle": "product.vehicle"
                        UIChildComponent1:
                            childType: "kControl"
                            control: "SimpleTitle"
                -   class: "UIControl"
                    name: "Subtitle"
                    input: false
                    classes: "t-body bold white-wild-sand-50-text"
                    components:
                        UITextComponent:
                            text: "Shop/BigChestProduct/CanContain"
                            fitting: "FITTING_REDUCE"
                            align: ["LEFT", "VCENTER"]
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfContent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Font.style.yaml"
                    bindings:
                    - ["visible", "isSingleChest and available"]
            -   class: "UIControl"
                name: "RightLabels"
                position: [366.000000, 0.000000]
                input: false
                components:
                    Anchor:
                        bottomAnchorEnabled: true
                    LinearLayout:
                        orientation: "TopDown"
                        padding: "8"
                        spacing: 2.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfMaxChild"
                        verticalPolicy: "PercentOfChildrenSum"
                children:
                -   class: "UIControl"
                    name: "Giftable"
                    input: false
                    components:
                        Anchor:
                            rightAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfFirstChild"
                            verticalPolicy: "PercentOfFirstChild"
                        UIChildComponent0:
                            childType: "kControl"
                            condition: "giftableVisible"
                            control: "Giftable"
                    bindings:
                    - ["visible", "giftableVisible and not isBigSlider"]
                -   class: "UIControl"
                    name: "Timer"
                    position: [59.000000, 42.000000]
                    input: false
                    components:
                        Anchor:
                            rightAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfFirstChild"
                            verticalPolicy: "PercentOfFirstChild"
                        UIChildComponent0:
                            childType: "kControl"
                            condition: "timerVisible"
                            control: "Timer"
                    bindings:
                    - ["visible", "timerVisible"]
                -   class: "UIControl"
                    name: "RemainingLabel"
                    input: false
                    components:
                        Anchor:
                            rightAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfFirstChild"
                            verticalPolicy: "FixedSize"
                            verticalValue: 32.000000
                        UIChildComponent0:
                            childType: "kControl"
                            condition: "product.xTimed and product.rouletteName.empty()"
                            control: "RemainingLabelWrapper"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                    bindings:
                    - ["visible", "product.xTimed and product.rouletteName.empty() and not isBigSlider"]
    -   class: "UIControl"
        name: "BottomWrapper"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfMaxChild"
        bindings:
        - ["visible", "not isBigSlider"]
        children:
        -   class: "UIControl"
            name: "Bottom"
            input: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfFirstChild"
                    verticalPolicy: "PercentOfFirstChild"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopItemPrice.yaml"
                    args:
                        "product": "product"
        -   class: "UIControl"
            name: "TaxMessage"
            input: false
            classes: "t-caps regular white-wild-sand-text"
            components:
                UITextComponent: {}
                Anchor:
                    hCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
            bindings:
            - ["visible", "not empty(taxMessage) and requiresEShopButton"]
            - ["UITextComponent.text", "taxMessage"]
Slots:
-   class: "UIControl"
    name: "SimpleTitle"
    size: [480.000000, 24.000000]
    input: false
    components:
        LinearLayout:
            spacing: 4.000000
            useRtl: true
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "FixedSize"
            verticalValue: 36.000000
    children:
    -   class: "UIControl"
        name: "Text"
        input: false
        classes: "t-title bold white-wild-sand-text"
        components:
            UITextComponent:
                fitting: "FITTING_POINTS"
                align: ["LEFT", "VCENTER"]
                useRtlAlign: "USE_BY_SYSTEM"
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "min(parentRest, content)"
                verticalPolicy: "FixedSize"
                verticalValue: 36.000000
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["UITextComponent.text", "when not isNull(product.rouletteInfo) -> localize(product.rouletteInfo.description.stuff.stuff.title), product.name"]
-   class: "UIControl"
    name: "Timer"
    input: false
    components:
        LinearLayout:
            padding: "4; 8"
            useRtl: true
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "FixedSize"
            verticalValue: 32.000000
    children:
    -   class: "UIControl"
        name: "BlurWrapper"
        input: false
        components:
            UIOpacityComponent: {}
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        bindings:
        - ["visible", "blurVisible"]
        children:
        -   prototype: "Blur/Blur"
            name: "Blur"
            components:
                UIPostProcessTextureComponent0:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessTextureComponent1:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessTextureComponent2:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessPolicyComponent:
                    canBeDelayed: true
                    renderControlOnlyOnScreen: true
            bindings:
            - ["UIPostProcessPolicyComponent.topOffset", "shopScrollTopOffset"]
            - ["UIPostProcessPolicyComponent.bottomOffset", "shopScrollBottomOffset"]
    -   class: "UIControl"
        name: "Fade"
        input: false
        classes: "black-35-bg"
        components:
            Background: {}
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
    -   class: "UIControl"
        name: "Icon"
        input: false
        classes: "white-wild-sand-bg"
        components:
            Background:
                drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
                sprite: "~res:/Gfx/Lobby/icons/icon_timer"
                perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
            Anchor:
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
    -   class: "UIControl"
        name: "Value"
        input: false
        classes: "t-subtitle regular white-wild-sand-text"
        components:
            UITextComponent: {}
            Anchor:
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["UITextComponent.text", "timeDiffShort(timeLeft)"]
-   class: "UIControl"
    name: "FooterWrapper"
    size: [240.000000, 47.000000]
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "BlurWrapper"
        input: false
        components:
            UIOpacityComponent: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        bindings:
        - ["visible", "blurVisible"]
        children:
        -   prototype: "Blur/Blur"
            name: "Blur"
            components:
                UIPostProcessTextureComponent0:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessTextureComponent1:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessTextureComponent2:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessPolicyComponent:
                    canBeDelayed: true
                    renderControlOnlyOnScreen: true
                UIRoundedCornersComponent:
                    radius: "0;0;2;2;"
            bindings:
            - ["UIPostProcessPolicyComponent.topOffset", "shopScrollTopOffset"]
            - ["UIPostProcessPolicyComponent.bottomOffset", "shopScrollBottomOffset"]
    -   class: "UIControl"
        name: "Fade"
        input: false
        classes: "black-35-bg"
        components:
            Background:
                drawType: "DRAW_SCALE_TO_RECT"
                sprite: "~res:/Gfx/Lobby/backgrounds/bg_fill"
            UIRoundedCornersComponent:
                radius: "0;0;2;2;"
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
    -   class: "UIControl"
        name: "Footer"
        input: false
        components:
            Anchor:
                bottomAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIChildComponent0:
                condition: "not isNull(product.rouletteInfo)"
                prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopProduct/RouletteCardContent.yaml"
                args:
                    "size": "product.imageSize"
                    "isChina": "isChina"
                    "indexes": "product.cardContent"
                    "content": "product.content"
            UIChildComponent1:
                condition: "not isNull(product.piggyBank)"
                prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopProduct/PiggyBankContent.yaml"
                args:
                    "piggy": "product.piggyBank"
                eventActions:
                - ["PIGGY_BANK_STAGE_PROGRESS", "PIGGY_BANK_STAGE_PROGRESS", "_event.stuffDescr"]
                - ["PIGGY_BANK_SAVE_PROGRESS", "PIGGY_BANK_SAVE_PROGRESS", "_event.stuffDescr"]
            UIChildComponent2:
                condition: "isSingleChest"
                prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopProduct/ChestContent.yaml"
                args:
                    "isAtLeastMediumDevice": "isAtLeastMediumDevice"
                    "size": "horizontalSize"
                    "isChina": "isChina"
                    "chestInfo": "product.chestInfo"
                    "chest": "singleItem.stuff"
                    "bonus": "product.bonus"
            UIChildComponent3:
                condition: "not isNull(singleItem) and (singleItem.type == ResourceType.gold or singleItem.type == ResourceType.free_xp or singleItem.type == ResourceType.credits)"
                prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopProduct/SingleResourceContent.yaml"
                args:
                    "resource": "singleItem"
                    "bonus": "product.bonus"
            UIChildComponent4:
                condition: "not isNull(singleItem) and not isNull(singleItem.stuff) and singleItem.stuff.type == ArtefactType.subscription and not isNull(product.subscriptionInfo)"
                prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopProduct/SubscriptionCardContent.yaml"
                args:
                    "size": "product.imageSize"
                    "isChina": "isChina"
                    "content": "product.subscriptionInfo.maxRewards"
            UIChildComponent5:
                condition: "product.cardContent.Size() > 1 or (not isNull(singleItem) and singleItem.type != ResourceType.vehicle and singleItem.type != ResourceType.premium)"
                prototypePath: "~res:/UI/Screens3/Lobby/Shop/ShopProduct/BundleContent.yaml"
                args:
                    "isChina": "isChina"
                    "showFullContent": "true"
                    "product": "product"
-   class: "UIControl"
    name: "RemainingLabelWrapper"
    size: [32.000000, 32.000000]
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "BlurWrapper"
        input: false
        components:
            UIOpacityComponent: {}
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        bindings:
        - ["visible", "blurVisible"]
        children:
        -   prototype: "Blur/Blur"
            name: "Blur"
            components:
                UIPostProcessTextureComponent0:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessTextureComponent1:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessTextureComponent2:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessPolicyComponent:
                    canBeDelayed: true
                    renderControlOnlyOnScreen: true
            bindings:
            - ["UIPostProcessPolicyComponent.topOffset", "shopScrollTopOffset"]
            - ["UIPostProcessPolicyComponent.bottomOffset", "shopScrollBottomOffset"]
    -   class: "UIControl"
        name: "Fade"
        input: false
        classes: "black-35-bg"
        components:
            Background: {}
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
    -   class: "UIControl"
        name: "RemainingLabel"
        input: false
        components:
            Anchor:
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "product.xTimed"
                prototypePath: "~res:/UI/Screens3/Common/RemainingLabelForShopContent.yaml"
                args:
                    "textPaddings": "8"
                    "left": "product.availableTimes"
                    "bgStyle": "\"\""
                    "textStyle": "when product.availableTimes > 0 -> \"t-subtitle regular white-wild-sand-text\", \"t-subtitle regular red-red-text\""
-   class: "UIControl"
    name: "PurchasePending"
    input: false
    classes: "black-50-bg"
    components:
        Background: {}
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "FixedSize"
            verticalValue: 336.000000
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Common/Loaders/LoaderCircle.yaml"
        StyleSheet:
            styles: "~res:/UI/Screens3/Color.style.yaml"
    bindings:
    - ["visible", "product.pendingPurchase"]
    children:
    -   class: "UIControl"
        name: "Anchor"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
        children:
        -   class: "UIControl"
            name: "Hint"
            input: false
            classes: "t-caption regular color=white-wild-sand-text"
            components:
                UITextComponent:
                    multiline: "MULTILINE_ENABLED"
                Anchor:
                    leftAnchorEnabled: true
                    leftAnchor: 16.000000
                    rightAnchorEnabled: true
                    rightAnchor: 16.000000
                    topAnchorEnabled: true
                    topAnchor: 16.000000
                SizePolicy:
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
            bindings:
            - ["UITextComponent.text", "localize(when product.salePrice.resources.Empty() -> \"shop/FreeBundle/PurchaseProgress\", \"shop/Error/AlreadyOwned\")"]
-   class: "UIControl"
    name: "Giftable"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 40.000000
            verticalPolicy: "FixedSize"
            verticalValue: 32.000000
    children:
    -   class: "UIControl"
        name: "BlurWrapper"
        input: false
        components:
            UIOpacityComponent: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        bindings:
        - ["visible", "blurVisible"]
        children:
        -   prototype: "Blur/Blur"
            name: "Blur"
            components:
                UIPostProcessTextureComponent0:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessTextureComponent1:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessTextureComponent2:
                    renderRequestingType: "ON_SIZE_CHANGED"
                UIPostProcessPolicyComponent:
                    canBeDelayed: true
                    renderControlOnlyOnScreen: true
            bindings:
            - ["UIPostProcessPolicyComponent.topOffset", "shopScrollTopOffset"]
            - ["UIPostProcessPolicyComponent.bottomOffset", "shopScrollBottomOffset"]
    -   class: "UIControl"
        name: "Fade"
        input: false
        classes: "black-35-bg"
        components:
            Background: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
    -   class: "UIControl"
        name: "Icon"
        input: false
        classes: "white-wild-sand-bg"
        components:
            Background:
                drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
                sprite: "~res:/Gfx/Lobby/icons/icon_handshake_m"
                perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
