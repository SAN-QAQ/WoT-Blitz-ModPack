Header:
    version: 161
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/CarouselFilterButton.yaml"
- "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/LevelFilterButton.yaml"
- "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/NationFilterButton.yaml"
- "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/ClassFilterButton.yaml"
- "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/ResetFilterButton.yaml"
- "~res:/UI/Screens3/Common/HorizontalScrollBar.yaml"
- "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/FilterButton.yaml"
Prototypes:
-   class: "UIControl"
    name: "TanksPanel"
    size: [1024.000000, 120.000000]
    pivot: [0.000000, 1.000000]
    refreshStylesOnInteract: false
    components:
        UIAnimationComponent:
            animations: "SWITCH_FILTER_NP,~res:/UI/Screens3/Lobby/Hangar/TanksPanel/TanksPanel.animation;NEXT_TANK,~res:/UI/Screens3/Lobby/Hangar/TanksPanel/NextTank.animation;PREVIOUS_TANK,~res:/UI/Screens3/Lobby/Hangar/TanksPanel/PreviousTank.animation"
        UIOpacityComponent:
            ignoreParentOpacity: true
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
        UIAttachLayoutMasterComponent:
            attachId: "TANKS_PANEL_HINT"
        FocusGroup: {}
        UIDataParamsComponent:
            params:
            - ["bool", "isGeneralPackLoaded", "true", "true"]
            - ["CarouselTanksFilterViewModel", "filter", "null", "{ }"]
            - ["vector<OwnedTank>", "tanks", "null", "[ { \"info\" = { \"level\" = 3; \"tankDescriptor\" = { \"rawDescr\" = 1; }; }; }; { }; ]"]
            - ["BattleResourcesState", "resources", "null", "{ }"]
            - ["OfferedTankViewModel", "offeredTank", "null", "{ \"tank\" = { \"info\" = { \"level\" = 10; \"tankDescriptor\" = { \"rawDescr\" = 2; }; }; }; }"]
            - ["VehicleDataModel", "selectedVehicle", "null", "{ }"]
            - ["map<int,int>", "levelSharedBonus", "{ }", "{ 1 = 1; 2 = 2; 8 = 3; }"]
            - ["float", "birthdayXpFactor", "0.000000", "5.000000"]
            - ["float", "birthdayCreditsFactor", "0.000000", "2.000000"]
            - ["float", "dailyXpFactor", "0.000000", "2.000000"]
            - ["bool", "withOpenedFilter", "false", "true"]
            - ["int64", "serverTime", "0L", "2456L"]
            - ["PrebattleDataModel", "prebattle", "null", "{ }"]
            - ["AccountDataModel", "account", "null", "{ }"]
            - ["int", "buyoutTanksCount", "0", "10"]
            - ["int", "freeSlots", "0", "10"]
            - ["bool", "isVisible", "true", "true"]
            - ["int", "bestCertificateFactor", "0", "7"]
            - ["bool", "isFullscreen", "false", "false"]
            - ["bool", "showBonus", "true", "true"]
            - ["bool", "showSlot", "true", "true"]
            - ["TanksRankConfigurationModel", "ranksConfig", "null", "{ }"]
            events:
            - "SHOW_TANKS_TREE"
            - "RESET_FILTER"
            - "SWITCH_LEVEL_FILTER"
            - "SWITCH_CLASS_FILTER"
            - "SWITCH_NATION_FILTER"
            - "SWITCH_FAVORITE_FILTER"
            - "SWITCH_DAILY_BONUS_FILTER"
            - "SWITCH_BIRTHDAY_FILTER"
            - "SWITCH_CERIFICATE_BONUS_FILTER"
            - "SWITCH_NON_ELITE_FILTER"
            - "SWITCH_ELITE_FILTER"
            - "SWITCH_RESEARCHABLE_FILTER"
            - "SWITCH_PREMIUM_FILTER"
            - "SWITCH_COLLECTIBLE_FILTER"
            - "SWITCH_TANK_FAVORITE"
            - "SELECT_PLAYER_TANK"
            - "SELECT_OFFERED_TANK"
            - "BUY_SLOTS"
            - "BUYOUT_TANKS"
            - "SWITCH_FILTER(bool show)"
            - "FILTER_ANIMATION_FINISHED"
        UIDataLocalVarsComponent:
            data:
            - ["int", "currentIndex", "0"]
            - ["float", "previousOffset", "0.000000"]
            - ["bool", "showFilter", "false"]
        UIDataLocalBindingsComponent:
            data:
            - ["string", "selectedCellName", "when isNull(selectedVehicle) -> \"\", format(\"TankCell:%(tNation):%(tName)\", { \"tNation\" = str(selectedVehicle.nation, eNation, \"autotests\"); \"tName\" = selectedVehicle.technicalName; })"]
            - ["bool", "hasOfferedTank", "not isNull(offeredTank) and not isNull(offeredTank.tank)"]
            - ["bool", "customFilter", "not filter.nations.Empty() or not filter.levels.Empty() or not filter.classes.Empty() or filter.bonus or filter.birthday or filter.withCertificateBonus or filter.favorite or filter.nonElite or filter.elite or filter.researchable or filter.premium or filter.collectible"]
            - ["bool", "hasCertificateBonus", "bestCertificateFactor > 0"]
            - ["bool", "hasDailyBonus", "int(dailyXpFactor) > 0"]
            - ["bool", "hasBithdayBonus", "int(birthdayCreditsFactor) > 0 or int(birthdayXpFactor) > 0"]
            - ["bool", "showMiscFilter", "hasCertificateBonus or hasDailyBonus or hasBithdayBonus"]
        UIDataLocalControlComponent0:
            name: "DailyBonusControl"
            prototypePath: "~res:/UI/Screens3/Lobby/Common/BonusFactor.yaml"
            args:
                "size": "eBonusFactorSize.kSmall"
                "factor": "int(dailyXpFactor)"
        UIDataLocalControlComponent1:
            name: "BirthdayControl"
            prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/TankBirthdayLabel.yaml"
            args:
                "xpFactor": "int(birthdayXpFactor)"
                "creditsFactor": "int(birthdayCreditsFactor)"
        UIDataLocalControlComponent2:
            name: "CertificateBonusControl"
            prototypePath: "~res:/UI/Screens3/Lobby/Common/BonusFactor.yaml"
            args:
                "size": "eBonusFactorSize.kSmall"
                "type": "eBonusFactor.kCertificateXP"
                "factor": "bestCertificateFactor"
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/TanksPanel.actions"
        UIDataOnEventComponent0:
            eventName: "FILTER_SHOWN"
            modelFieldExpression: "showFilter"
            dataExpression: "_event"
        UIDataOnEventComponent1:
            eventName: "UPDATE_OFFSET"
            modelFieldExpression: "previousOffset"
            dataExpression: "_event"
        UIDataOnEventComponent2:
            eventName: "INIT_STARTED_INDEX_LOCAL"
            modelFieldExpression: "currentIndex"
            dataExpression: "_event"
        StyleSheet:
            styles: "~res:/UI/Screens3/Color.style.yaml"
    bindings:
    - ["visible", "isVisible"]
    children:
    -   class: "UIControl"
        name: "PanelBackground"
        input: false
        classes: "black-70-bg"
        refreshStylesOnInteract: false
        components:
            Background: {}
            Anchor:
                leftAnchorEnabled: true
                rightAnchorEnabled: true
                topAnchorEnabled: true
            IgnoreLayout: {}
            SizePolicy:
                verticalPolicy: "Formula"
                verticalFormula: "safeAreaInsets.bottom+500"
    -   class: "UIControl"
        name: "TanksFound"
        input: false
        classes: "t-subtitle regular white-wild-sand-text"
        refreshStylesOnInteract: false
        components:
            UIOpacityComponent: {}
            UITextComponent: {}
            Anchor:
                hCenterAnchorEnabled: true
                topAnchorEnabled: true
                topAnchor: -48.000000
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["visible", "showFilter"]
        - ["UITextComponent.text", "localize(\"hangar/Filter/MatchingVehicles\", { \"count\" = str(tanks.Size()); })"]
    -   class: "UIControl"
        name: "Carousel"
        input: false
        refreshStylesOnInteract: false
        components:
            LinearLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "FixedSize"
                verticalValue: 120.000000
            UIAttachLayoutMasterComponent: {}
            UIShadowHoleComponent: {}
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
        bindings:
        - ["UIAttachLayoutMasterComponent.attachId", "when not isNull(account) and account.tutorialData.currentHint == eTutorialHint.kSkillTrained -> \"CAROUSEL\", \"\""]
        - ["UIShadowHoleComponent.isEnabled", "not isNull(account) and (account.tutorialData.currentHint == eTutorialHint.kTankInBattle or account.tutorialData.currentHint == eTutorialHint.kSkillTrained)"]
        children:
        -   class: "UIControl"
            name: "SafeAreaSpacer"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "safeAreaInsets.left"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["visible", "isFullscreen"]
        -   class: "UIControl"
            name: "TanksList"
            input: false
            refreshStylesOnInteract: false
            components:
                ClipContent:
                    enabled: true
                Anchor:
                    bottomAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "Formula"
                    verticalFormula: "parent + 24"
                FocusGroup: {}
            children:
            -   class: "UIScrollView"
                name: "ScrollableArea"
                refreshStylesOnInteract: false
                autoUpdate: true
                components:
                    ClipContent:
                        enabled: false
                    Anchor:
                        bottomAnchorEnabled: true
                        bottomAnchor: 8.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "FixedSize"
                        verticalValue: 104.000000
                children:
                -   class: "UIScrollViewContainer"
                    name: "scrollContainerControl"
                    refreshStylesOnInteract: false
                    scrollDirection: "kHorizontal"
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                        LinearLayout:
                            padding: "8"
                        SizePolicy:
                            horizontalPolicy: "PercentOfChildrenSum"
                            verticalPolicy: "PercentOfMaxChild"
                        UILayoutEventComponent:
                            positionChangedEvent: "ScrollContentPositionChanged"
                            positionChangedEventData: "_position.X, _size.X, _parentSize.X"
                    children:
                    -   class: "UIControl"
                        name: "OfferedTank"
                        input: false
                        components:
                            LinearLayout:
                                padding: "0;8"
                                spacing: 8.000000
                            SizePolicy:
                                horizontalPolicy: "PercentOfChildrenSum"
                                verticalPolicy: "PercentOfMaxChild"
                            UIChildComponent0:
                                condition: "hasOfferedTank"
                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/OfferedTankCell.yaml"
                                args:
                                    "tank": "offeredTank.tank"
                                    "isLoading": "offeredTank.isLoading"
                                    "selected": "not isNull(selectedVehicle) and offeredTank.tank.info.tankDescriptor.rawDescr == selectedVehicle.tankDescriptor.rawDescr"
                                    "prebattle": "prebattle"
                                eventActions:
                                - ["ON_TANK_PRESS", "SELECT_OFFERED_TANK", "offeredTank.tank.info.tankDescriptor.rawDescr"]
                        bindings:
                        - ["visible", "hasOfferedTank"]
                    -   class: "UIControl"
                        name: "PlayerTanks"
                        input: false
                        components:
                            LinearLayout:
                                spacing: 4.000000
                            SizePolicy:
                                horizontalPolicy: "PercentOfChildrenSum"
                                verticalPolicy: "PercentOfMaxChild"
                            UIRepeatComponent:
                                control: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/OwnedTankCell.yaml"
                                dataContainer: "tanks"
                                args:
                                    "tank": "_item"
                                    "ranksConfig": "ranksConfig"
                                    "isGeneralPackLoaded": "isGeneralPackLoaded"
                                    "isLoading": "when resources.levels[_item.info.level].useNewbieRules -> not resources.levels[_item.info.level].newbieResourcesReady, not resources.levels[_item.info.level].tanksReady or not resources.levels[_item.info.level].mapsReady"
                                    "selected": "not isNull(selectedVehicle) and _item.info.tankDescriptor.rawDescr == selectedVehicle.tankDescriptor.rawDescr"
                                    "isX2Funnel": "_index == 0"
                                    "birthdayCreditsFactor": "int(birthdayCreditsFactor)"
                                    "dailyXpFactor": "int(dailyXpFactor)"
                                    "birthdayXpFactor": "int(birthdayXpFactor)"
                                    "levelSharedBonus": "levelSharedBonus"
                                    "serverTime": "serverTime"
                                    "prebattle": "prebattle"
                                    "showBonus": "showBonus"
                                eventActions:
                                - ["ON_TANK_DOUBLE_PRESS", "SWITCH_TANK_FAVORITE", "_item.info.tankDescriptor.rawDescr"]
                                - ["ON_TANK_PRESS", "SELECT_PLAYER_TANK", "_item.info.tankDescriptor.rawDescr"]
                                - ["INIT_STARTED_INDEX", "INIT_STARTED_INDEX_LOCAL", "_index"]
                                elementNameExpression: "format(\"TankCell:%(tNation):%(tName)\", { \"tNation\" = str(_item.info.nation, eNation, \"autotests\"); \"tName\" = _item.info.technicalName; })"
                                loadingPolicy: "Lazy"
                                loadingDistance: 1008.000000
                                unloadingDistance: 1344.000000
                            UIIdentifierComponent:
                                id: "garage_tanks"
                    -   class: "UIControl"
                        name: "Spacer"
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "FixedSize"
                                horizontalValue: 4.000000
                                verticalPolicy: "PercentOfParent"
                    -   class: "UIControl"
                        name: "BuyoutTankButtonHolder"
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfFirstChild"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                condition: "buyoutTanksCount > 0"
                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/BuyoutTankButton.yaml"
                                args:
                                    "tanksCount": "buyoutTanksCount"
                                    "isGeneralPackLoaded": "isGeneralPackLoaded"
                                eventActions:
                                - ["ON_CLICK_BUTTON", "BUY_SLOTS", ""]
                        bindings:
                        - ["visible", "buyoutTanksCount > 0"]
                    -   class: "UIControl"
                        name: "Spacer_1"
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "FixedSize"
                                horizontalValue: 4.000000
                                verticalPolicy: "PercentOfParent"
                    -   class: "UIControl"
                        name: "BuySlotsButtonHolder"
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfFirstChild"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                condition: "showSlot"
                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/BuySlotsButton.yaml"
                                args:
                                    "freeSlots": "freeSlots"
                                    "isGeneralPackLoaded": "isGeneralPackLoaded"
                                eventActions:
                                - ["ON_CLICK_BUTTON", "BUY_SLOTS", ""]
                        bindings:
                        - ["visible", "showSlot"]
                -   prototype: "HorizontalScrollBar/HorizontalScrollBar"
                    name: "HorizontalScrollBar"
                    components:
                        Anchor:
                            leftAnchorEnabled: true
                            rightAnchorEnabled: true
                            bottomAnchorEnabled: true
                            bottomAnchor: -8.000000
                        UIScrollBarComponent:
                            delegate: ".."
                -   class: "UIControl"
                    name: "LeftFade"
                    input: false
                    classes: "black-70-bg"
                    components:
                        Background:
                            drawType: "DRAW_SCALE_TO_RECT"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_horizontal_0-100"
                            spriteModification: ["FLIP_HORIZONTAL"]
                        UIOpacityComponent: {}
                        Anchor:
                            leftAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "FixedSize"
                            horizontalValue: 32.000000
                            verticalPolicy: "PercentOfParent"
                -   class: "UIControl"
                    name: "RightFade"
                    input: false
                    classes: "black-70-bg"
                    components:
                        Background:
                            drawType: "DRAW_SCALE_TO_RECT"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_horizontal_0-100"
                        UIOpacityComponent: {}
                        Anchor:
                            rightAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "FixedSize"
                            horizontalValue: 32.000000
                            verticalPolicy: "PercentOfParent"
        -   class: "UIControl"
            name: "Spacer"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 8.000000
                    verticalPolicy: "PercentOfParent"
        -   class: "UIControl"
            name: "ButtonContainer"
            input: false
            refreshStylesOnInteract: false
            components:
                LinearLayout:
                    orientation: "TopDown"
                    padding: "8"
                    spacing: 8.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfParent"
            children:
            -   prototype: "CarouselFilterButton/CarouselFilterButton"
                name: "FilterSwitchButton"
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    UIDataParamsComponent:
                        args:
                            "showBadge": "customFilter"
                            "enabled": "true"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_FILTER", "not showFilter"]
        -   class: "UIControl"
            name: "SafeAreaSpacer"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "max(safeAreaInsets.right, 8)"
                    verticalPolicy: "PercentOfParent"
    -   class: "UIControl"
        name: "Filter"
        refreshStylesOnInteract: false
        components:
            Anchor:
                leftAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
                padding: "24"
                safeAreaPaddingInset: true
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfChildrenSum"
        bindings:
        - ["visible", "showFilter"]
        children:
        -   class: "UIControl"
            name: "LevelFilters"
            input: false
            refreshStylesOnInteract: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: false
                LinearLayout:
                    padding: "8"
                    spacing: 8.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "FixedSize"
                    verticalValue: 72.000000
                FocusGroup: {}
                UIIdentifierComponent:
                    id: "level_filters"
            children:
            -   class: "UIControl"
                name: "Border"
                input: false
                classes: "white-wild-sand-10-bg"
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_border_1px_r1"
                        leftRightStretchCap: 2.000000
                        topBottomStretchCap: 2.000000
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level1"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(1)"
                            "level": "1"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "1"]
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level2"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(2)"
                            "level": "2"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "2"]
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level3"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(3)"
                            "level": "3"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "3"]
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level4"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(4)"
                            "level": "4"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "4"]
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level5"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(5)"
                            "level": "5"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "5"]
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level6"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(6)"
                            "level": "6"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "6"]
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level7"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(7)"
                            "level": "7"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "7"]
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level8"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(8)"
                            "level": "8"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "8"]
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level9"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(9)"
                            "level": "9"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "9"]
            -   prototype: "LevelFilterButton/LevelFilterButton"
                name: "Level10"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.levels.Contains(10)"
                            "level": "10"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_LEVEL_FILTER", "10"]
        -   class: "UIControl"
            name: "MiscFilters"
            input: false
            refreshStylesOnInteract: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                LinearLayout:
                    spacing: 8.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfMaxChild"
            children:
            -   class: "UIControl"
                name: "ClassFilter"
                input: false
                refreshStylesOnInteract: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: false
                    LinearLayout:
                        padding: "8"
                        spacing: 8.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "FixedSize"
                        verticalValue: 72.000000
                    FocusGroup: {}
                children:
                -   class: "UIControl"
                    name: "Border_1"
                    input: false
                    classes: "white-wild-sand-10-bg"
                    components:
                        Background:
                            drawType: "DRAW_STRETCH_BOTH"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_border_1px_r1"
                            leftRightStretchCap: 2.000000
                            topBottomStretchCap: 2.000000
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                -   prototype: "ClassFilterButton/ClassFilterButton"
                    name: "Light"
                    components:
                        UIDataParamsComponent:
                            args:
                                "active": "filter.classes.Contains(eTankClass.TANK_CLASS_LIGHT)"
                                "class": "eTankClass.TANK_CLASS_LIGHT"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_CLASS_FILTER", "eTankClass.TANK_CLASS_LIGHT"]
                -   prototype: "ClassFilterButton/ClassFilterButton"
                    name: "Medium"
                    components:
                        UIDataParamsComponent:
                            args:
                                "active": "filter.classes.Contains(eTankClass.TANK_CLASS_MEDIUM)"
                                "class": "eTankClass.TANK_CLASS_MEDIUM"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_CLASS_FILTER", "eTankClass.TANK_CLASS_MEDIUM"]
                -   prototype: "ClassFilterButton/ClassFilterButton"
                    name: "Heavy"
                    components:
                        UIDataParamsComponent:
                            args:
                                "active": "filter.classes.Contains(eTankClass.TANK_CLASS_HEAVY)"
                                "class": "eTankClass.TANK_CLASS_HEAVY"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_CLASS_FILTER", "eTankClass.TANK_CLASS_HEAVY"]
                -   prototype: "ClassFilterButton/ClassFilterButton"
                    name: "AT"
                    components:
                        UIDataParamsComponent:
                            args:
                                "active": "filter.classes.Contains(eTankClass.TANK_CLASS_AT_SPG)"
                                "class": "eTankClass.TANK_CLASS_AT_SPG"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_CLASS_FILTER", "eTankClass.TANK_CLASS_AT_SPG"]
            -   class: "UIControl"
                name: "MiscFilter"
                input: false
                refreshStylesOnInteract: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: false
                    LinearLayout:
                        padding: "8"
                        spacing: 8.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "FixedSize"
                        verticalValue: 72.000000
                    FocusGroup: {}
                bindings:
                - ["visible", "showMiscFilter"]
                children:
                -   class: "UIControl"
                    name: "Border_2"
                    input: false
                    classes: "white-wild-sand-10-bg"
                    components:
                        Background:
                            drawType: "DRAW_STRETCH_BOTH"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_border_1px_r1"
                            leftRightStretchCap: 2.000000
                            topBottomStretchCap: 2.000000
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                -   class: "UIControl"
                    name: "DailyBonusButtonHolder"
                    input: false
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfFirstChild"
                            verticalPolicy: "PercentOfFirstChild"
                        UIChildComponent0:
                            condition: "hasDailyBonus"
                            prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/FilterButton.yaml"
                            args:
                                "content": "DailyBonusControl"
                                "active": "filter.bonus"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_DAILY_BONUS_FILTER", ""]
                -   class: "UIControl"
                    name: "BirthdayButtonHolder"
                    input: false
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfFirstChild"
                            verticalPolicy: "PercentOfFirstChild"
                        UIChildComponent0:
                            condition: "hasBithdayBonus"
                            prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/FilterButton.yaml"
                            args:
                                "content": "BirthdayControl"
                                "active": "filter.birthday"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_BIRTHDAY_FILTER", ""]
                -   class: "UIControl"
                    name: "CertificateBonusFilterButton"
                    input: false
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfFirstChild"
                            verticalPolicy: "PercentOfFirstChild"
                        UIChildComponent0:
                            condition: "hasCertificateBonus"
                            prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/FilterButton.yaml"
                            args:
                                "content": "CertificateBonusControl"
                                "active": "filter.withCertificateBonus"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_CERIFICATE_BONUS_FILTER", ""]
                    bindings:
                    - ["visible", "hasCertificateBonus"]
            -   class: "UIControl"
                name: "FavoriteFilter"
                input: false
                refreshStylesOnInteract: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: false
                    LinearLayout:
                        padding: "8"
                        spacing: 8.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "FixedSize"
                        verticalValue: 72.000000
                    FocusGroup: {}
                children:
                -   class: "UIControl"
                    name: "Border_3"
                    input: false
                    classes: "white-wild-sand-10-bg"
                    components:
                        Background:
                            drawType: "DRAW_STRETCH_BOTH"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_border_1px_r1"
                            leftRightStretchCap: 2.000000
                            topBottomStretchCap: 2.000000
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                -   prototype: "FilterButton/FilterButton"
                    name: "FavoriteFilterButton"
                    components:
                        UIDataParamsComponent:
                            args:
                                "content": "control(\"~res:/UI/Screens3/Lobby/Hangar/TanksPanel/IconContent.yaml\", { \"iconPath\" = \"~res:/Gfx/Lobby/icons/icon_pin_m\"; }, [ ])"
                                "active": "filter.favorite"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_FAVORITE_FILTER", ""]
            -   class: "UIControl"
                name: "ElitismFilter"
                input: false
                refreshStylesOnInteract: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: false
                    LinearLayout:
                        padding: "8"
                        spacing: 8.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "FixedSize"
                        verticalValue: 72.000000
                    FocusGroup: {}
                children:
                -   class: "UIControl"
                    name: "Border_4"
                    input: false
                    classes: "white-wild-sand-10-bg"
                    components:
                        Background:
                            drawType: "DRAW_STRETCH_BOTH"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_border_1px_r1"
                            leftRightStretchCap: 2.000000
                            topBottomStretchCap: 2.000000
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                -   prototype: "FilterButton/FilterButton"
                    name: "NonEliteFilterButton"
                    components:
                        UIDataParamsComponent:
                            args:
                                "content": "control(\"~res:/UI/Screens3/Lobby/Hangar/TanksPanel/IconContent.yaml\", { \"iconPath\" = \"~res:/Gfx/Lobby/icons/icon_not-elite\"; }, [ ])"
                                "active": "filter.nonElite"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_NON_ELITE_FILTER", ""]
                -   prototype: "FilterButton/FilterButton"
                    name: "EliteFilterButton"
                    components:
                        UIDataParamsComponent:
                            args:
                                "content": "control(\"~res:/UI/Screens3/Lobby/Hangar/TanksPanel/IconContent.yaml\", { \"iconPath\" = \"~res:/Gfx/Lobby/icons/icon_elite\"; }, [ ])"
                                "active": "filter.elite"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_ELITE_FILTER", ""]
            -   class: "UIControl"
                name: "TypeFilter"
                input: false
                refreshStylesOnInteract: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: false
                    LinearLayout:
                        padding: "8"
                        spacing: 8.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfChildrenSum"
                        verticalPolicy: "FixedSize"
                        verticalValue: 72.000000
                    FocusGroup: {}
                children:
                -   class: "UIControl"
                    name: "Border_5"
                    input: false
                    classes: "white-wild-sand-10-bg"
                    components:
                        Background:
                            drawType: "DRAW_STRETCH_BOTH"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_border_1px_r1"
                            leftRightStretchCap: 2.000000
                            topBottomStretchCap: 2.000000
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                -   prototype: "FilterButton/FilterButton"
                    name: "ResearchableFilterButton"
                    components:
                        UIDataParamsComponent:
                            args:
                                "content": "control(\"~res:/UI/Screens3/Lobby/Hangar/TanksPanel/IconContent.yaml\", { \"iconPath\" = \"~res:/Gfx/Lobby/icons/icon_tank-normal\"; }, [ ])"
                                "active": "filter.researchable"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_RESEARCHABLE_FILTER", ""]
                -   prototype: "FilterButton/FilterButton"
                    name: "PremiumFilterButton"
                    components:
                        UIDataParamsComponent:
                            args:
                                "content": "control(\"~res:/UI/Screens3/Lobby/Hangar/TanksPanel/IconContent.yaml\", { \"iconPath\" = \"~res:/Gfx/Lobby/icons/icon_tank-premium\"; }, [ ])"
                                "active": "filter.premium"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_PREMIUM_FILTER", ""]
                -   prototype: "FilterButton/FilterButton"
                    name: "CollectibleFilterButton"
                    components:
                        UIDataParamsComponent:
                            args:
                                "content": "control(\"~res:/UI/Screens3/Lobby/Hangar/TanksPanel/IconContent.yaml\", { \"iconPath\" = \"~res:/Gfx/Lobby/icons/icon_tank-collectible\"; }, [ ])"
                                "active": "filter.collectible"
                            eventActions:
                            - ["ON_CLICK_BUTTON", "SWITCH_COLLECTIBLE_FILTER", ""]
        -   class: "UIControl"
            name: "NationFilters"
            input: false
            refreshStylesOnInteract: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: false
                LinearLayout:
                    padding: "8"
                    spacing: 8.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "FixedSize"
                    verticalValue: 72.000000
                FocusGroup: {}
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            children:
            -   class: "UIControl"
                name: "Border_1"
                input: false
                classes: "white-wild-sand-10-bg"
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_border_1px_r1"
                        leftRightStretchCap: 2.000000
                        topBottomStretchCap: 2.000000
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   prototype: "NationFilterButton/NationFilterButton"
                name: "UsaButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.nations.Contains(eNation.USA)"
                            "nation": "eNation.USA"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_NATION_FILTER", "eNation.USA"]
            -   prototype: "NationFilterButton/NationFilterButton"
                name: "GermanyButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.nations.Contains(eNation.GERMANY)"
                            "nation": "eNation.GERMANY"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_NATION_FILTER", "eNation.GERMANY"]
            -   prototype: "NationFilterButton/NationFilterButton"
                name: "UssrButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.nations.Contains(eNation.USSR)"
                            "nation": "eNation.USSR"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_NATION_FILTER", "eNation.USSR"]
            -   prototype: "NationFilterButton/NationFilterButton"
                name: "UkButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.nations.Contains(eNation.UK)"
                            "nation": "eNation.UK"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_NATION_FILTER", "eNation.UK"]
            -   prototype: "NationFilterButton/NationFilterButton"
                name: "JapanButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.nations.Contains(eNation.JAPAN)"
                            "nation": "eNation.JAPAN"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_NATION_FILTER", "eNation.JAPAN"]
            -   prototype: "NationFilterButton/NationFilterButton"
                name: "ChinaButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.nations.Contains(eNation.CHINA)"
                            "nation": "eNation.CHINA"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_NATION_FILTER", "eNation.CHINA"]
            -   prototype: "NationFilterButton/NationFilterButton"
                name: "FranceButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.nations.Contains(eNation.FRANCE)"
                            "nation": "eNation.FRANCE"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_NATION_FILTER", "eNation.FRANCE"]
            -   prototype: "NationFilterButton/NationFilterButton"
                name: "EuropeanButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "nation": "eNation.EUROPEAN"
                            "active": "filter.nations.Contains(eNation.EUROPEAN)"
                            "enabled": "true"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_NATION_FILTER", "eNation.EUROPEAN"]
            -   prototype: "NationFilterButton/NationFilterButton"
                name: "OtherButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "active": "filter.nations.Contains(eNation.OTHER)"
                            "nation": "eNation.OTHER"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "SWITCH_NATION_FILTER", "eNation.OTHER"]
        -   class: "UIControl"
            name: "ResetFilterButtonHolder"
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                    topAnchorEnabled: true
                    topAnchor: 32.000000
                LinearLayout: {}
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfMaxChild"
            children:
            -   prototype: "ResetFilterButton/ResetFilterButton"
                name: "ResetFilterButton"
                components:
                    UIDataParamsComponent:
                        args:
                            "enabled": "customFilter"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "RESET_FILTER", ""]
            -   class: "UIControl"
                name: "SafeAreaSpacer"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalFormula: "max(safeAreaInsets.right, 8)"
                        verticalPolicy: "PercentOfParent"
