Header:
    version: 161
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/Vehicle/VehicleInfo.yaml"
- "~res:/UI/Screens3/Lobby/Common/Timer.yaml"
Prototypes:
-   class: "UIControl"
    name: "OwnedTankCell"
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Hangar/TanksPanel/OwnedTankCellInit.animation;ON_TANK_PRESS,~res:/UI/Screens3/Lobby/Hangar/TanksPanel/TankCellSelect.animation"
        UIOpacityComponent: {}
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 168.000000
            verticalPolicy: "FixedSize"
            verticalValue: 104.000000
        UIAttachLayoutMasterComponent: {}
        UIInputEventComponent:
            onTouchUpInside: "TANK_PRESSED"
            onDoubleTouch: "ON_TANK_DOUBLE_PRESS"
        UIVirtualActionEventComponent0:
            virtualKeyAction: "Perform"
            keyDownEvent: "TANK_PRESSED"
        Focus: {}
        UIShortcutEventComponent: {}
        UIDataParamsComponent:
            params:
            - ["bool", "isGeneralPackLoaded", "true", "false"]
            - ["OwnedTank", "tank", "null", "{ \"maxCertificateXpFactor\" = 6; \"lockReason\" = LOCK_REASON.NONE; \"repairCost\" = 0; \"needsTopMastery\" = true; \"needsTopModules\" = true; \"stats\" = { \"isBirthday\" = true; }; }"]
            - ["TanksRankConfigurationModel", "ranksConfig", "null", "{ }"]
            - ["bool", "isLoading", "false", "false"]
            - ["bool", "selected", "false", "true"]
            - ["int", "birthdayXpFactor", "0", "5"]
            - ["int", "birthdayCreditsFactor", "0", "2"]
            - ["int", "dailyXpFactor", "0", "2"]
            - ["map<int,int>", "levelSharedBonus", "{ }", "{ }"]
            - ["int64", "serverTime", "0L", "12354L"]
            - ["PrebattleDataModel", "prebattle", "null", "{ }"]
            - ["bool", "isX2Funnel", "false", "false"]
            - ["bool", "interactive", "true", "true"]
            - ["bool", "showStatus", "true", "true"]
            - ["bool", "showBonus", "true", "true"]
            events:
            - "ON_TANK_PRESS"
            - "ON_TANK_DOUBLE_PRESS"
            - "INIT_STARTED_INDEX"
        UIDataLocalBindingsComponent:
            data:
            - ["vector<string>", "reducedTankNames", "[ \"#japan_vehicles:Firefly_GuP_short\"; \"#japan_vehicles:IS-2_GuP_short\"; \"#japan_vehicles:Pz_IV_AusfH_short\"; \"#japan_vehicles:Hetzer_GuP_short\"; \"#japan_vehicles:PzVI_GuP_short\"; ]"]
            - ["string", "attachId", "\"BLOCKED_TANK\""]
            - ["string", "tankNameThickness", "when selected -> \"bold\", \"regular\""]
            - ["string", "nationFlagIcon", "when tank.info.subnation == \"\" -> (when tank.info.nation == eNation.USA -> \"~res:/Gfx/Lobby/flags/flag_carousel_usa.psd\", tank.info.nation == eNation.GERMANY -> \"~res:/Gfx/Lobby/flags/flag_carousel_germany.psd\", tank.info.nation == eNation.USSR -> \"~res:/Gfx/Lobby/flags/flag_carousel_ussr.psd\", tank.info.nation == eNation.UK -> \"~res:/Gfx/Lobby/flags/flag_carousel_uk.psd\", tank.info.nation == eNation.JAPAN -> \"~res:/Gfx/Lobby/flags/flag_carousel_japan.psd\", tank.info.nation == eNation.CHINA -> \"~res:/Gfx/Lobby/flags/flag_carousel_china.psd\", tank.info.nation == eNation.FRANCE -> \"~res:/Gfx/Lobby/flags/flag_carousel_france.psd\", tank.info.nation == eNation.OTHER -> \"~res:/Gfx/Lobby/flags/flag_carousel_other.psd\", tank.info.nation == eNation.EUROPEAN -> \"~res:/Gfx/Lobby/flags/flag_carousel_european.psd\", \"~res:/Gfx/Lobby/flags/flag_carousel_other.psd\"), (when tank.info.subnation == \"finland\" -> \"~res:/Gfx/Lobby/flags/flag_carousel_finland.psd\", tank.info.subnation == \"poland\" -> \"~res:/Gfx/Lobby/flags/flag_carousel_poland.psd\", tank.info.subnation == \"sweden\" -> \"~res:/Gfx/Lobby/flags/flag_carousel_sweden.psd\", tank.info.subnation == \"italy\" -> \"~res:/Gfx/Lobby/flags/flag_carousel_italy.psd\", tank.info.subnation == \"australia\" -> \"~res:/Gfx/Lobby/flags/flag_carousel_australia.psd\", tank.info.subnation == \"canada\" -> \"~res:/Gfx/Lobby/flags/flag_carousel_canada.psd\", tank.info.subnation == \"czech\" -> \"~res:/Gfx/Lobby/flags/flag_carousel_czech.psd\", \"~res:/Gfx/Lobby/flags/flag_carousel_european.psd\")"]
            - ["bool", "playerInPrebattle", "not isNull(prebattle) and not isNull(prebattle.settings) and prebattle.settings.prebattleType != PrebattleType.UNDEFINED"]
            - ["bool", "locked", "tank.lockReason != LOCK_REASON.NONE and tank.lockReason != LOCK_REASON.PREBATTLE"]
            - ["bool", "broken", "tank.repairCost > 0"]
            - ["bool", "soloOrSquad", "not isNull(prebattle) and not isNull(prebattle.settings) and (prebattle.settings.prebattleType == PrebattleType.UNDEFINED or prebattle.settings.prebattleType == PrebattleType.SQUAD)"]
            - ["bool", "blocked", "showStatus and (broken or locked or (soloOrSquad and (not tank.allowedForGameMode or tank.needsTopMastery or tank.needsTopModules)))"]
            - ["bool", "temporaryPremiumization", "tank.stats.isPremiumized and tank.stats.premiumizationEnd > serverTime"]
            - ["bool", "playerReadyForPrebattle", "playerInPrebattle and prebattle.accountInfo.isReady and not isNull(prebattle.accountInfo.tank)"]
            - ["bool", "thisTankSelectedForPrebattle", "playerReadyForPrebattle and prebattle.accountInfo.tank.tankDescriptor.rawDescr == tank.info.tankDescriptor.rawDescr"]
            - ["string", "blockHint", "when tank.lockReason == LOCK_REASON.ON_ARENA -> localize(\"hangar/Footer/TankCell/InBattle\"), tank.lockReason == LOCK_REASON.IN_QUEUE -> localize(\"hangar/Footer/TankCell/InQueue\"), broken -> localize(\"hangar/Footer/TankCell/RepairRequired\"), not tank.allowedForGameMode -> localize(\"hangar/Footer/TankCell/Mismatch\"), tank.needsTopMastery -> localize(\"hangar/Footer/TankCell/CrewTrainingRequired\"), tank.needsTopModules -> localize(\"hangar/Footer/TankCell/TopModulesRequired\"), \"\""]
            - ["string", "materialParams", "when blocked -> \"saturation,0\", \"saturation,1\""]
            - ["bool", "firstTeammateSelectedTank", "playerInPrebattle and prebattle.settings.prebattleType == PrebattleType.SQUAD and prebattle.squadTeamMateInfos.Size() > 0 and prebattle.squadTeamMateInfos[0].isReady and not isNull(prebattle.squadTeamMateInfos[0].tank)"]
            - ["bool", "secondTeammateSelectedTank", "playerInPrebattle and prebattle.settings.prebattleType == PrebattleType.SQUAD and prebattle.squadTeamMateInfos.Size() > 1 and prebattle.squadTeamMateInfos[1].isReady and not isNull(prebattle.squadTeamMateInfos[1].tank)"]
            - ["bool", "showSquadMatchHint", "showStatus and (firstTeammateSelectedTank or secondTeammateSelectedTank) and not playerReadyForPrebattle"]
            - ["int", "firstTeammateTankLevel", "when firstTeammateSelectedTank -> prebattle.squadTeamMateInfos[0].tank.level, 0"]
            - ["int", "secondTeammateTankLevel", "when secondTeammateSelectedTank -> prebattle.squadTeamMateInfos[1].tank.level, 0"]
            - ["bool", "bothTeammatesReady", "firstTeammateSelectedTank and secondTeammateSelectedTank"]
            - ["int", "bestMatchLevel", "when bothTeammatesReady and firstTeammateTankLevel != secondTeammateTankLevel -> max(firstTeammateTankLevel, secondTeammateTankLevel), firstTeammateSelectedTank -> firstTeammateTankLevel, secondTeammateTankLevel"]
            - ["vector<int>", "goodMatchLevels", "[ when bothTeammatesReady and firstTeammateTankLevel != secondTeammateTankLevel -> min(firstTeammateTankLevel, secondTeammateTankLevel), firstTeammateSelectedTank -> firstTeammateTankLevel - 1, secondTeammateTankLevel - 1; when bothTeammatesReady and firstTeammateTankLevel != secondTeammateTankLevel -> 0, firstTeammateSelectedTank -> firstTeammateTankLevel + 1, secondTeammateTankLevel + 1; ]"]
            - ["string", "squadHintTextColor", "when bestMatchLevel == tank.info.level -> \"green-green-text\", goodMatchLevels.Contains(tank.info.level) -> \"orange-orange-peel-text\", \"red-red-text\""]
            - ["string", "squadHint", "when bestMatchLevel == tank.info.level -> localize(\"hangar/Footer/TankCell/BestMatch\"), goodMatchLevels.Contains(tank.info.level) -> localize(\"hangar/Footer/TankCell/GoodMatch\"), localize(\"hangar/Footer/TankCell/Mismatch\")"]
            - ["string", "tankNameColor", "when tank.info.isPremium -> \"yellow-lightning-text\", tank.info.isCollectible -> \"blue-rimmi-text\", tank.stats.isPremiumized -> \"yellow-chalky-text\", \"white-wild-sand-text\""]
            - ["string", "prebattleStatus", "when tank.lockReason == LOCK_REASON.PREBATTLE and not isNull(prebattle) and not isNull(prebattle.settings) -> (when prebattle.settings.prebattleType != PrebattleType.SQUAD -> localize(\"hangar/Footer/TankCell/Ready\"), prebattle.settings.prebattleType == PrebattleType.SQUAD and prebattle.squadTeamMateInfos.Size() == 0 -> localize(\"hangar/Footer/TankCell/InQueue\"), localize(\"hangar/Footer/TankCell/InPlatoon\")), \"\""]
            - ["string", "cellStyle", "(when selected -> \"selected \", \"button-choose-sound \") + \"carousel-tank pressed-opacity\""]
            - ["bool", "levelSharedBonusEnabled", "levelSharedBonus.Contains(tank.info.level)"]
            - ["int", "sharedBonusAmount", "when levelSharedBonusEnabled -> levelSharedBonus[tank.info.level], 0"]
            - ["bool", "levelSharedBonusActive", "levelSharedBonusEnabled and sharedBonusAmount > 0"]
            - ["bool", "dailyBonusActive", "not levelSharedBonusEnabled and tank.stats.isBonusActive"]
            - ["int", "xpFactor", "when levelSharedBonusActive or dailyBonusActive -> dailyXpFactor, 0"]
            - ["bool", "hasBonus", "tank.maxCertificateXpFactor > 0 or levelSharedBonusActive or dailyBonusActive or tank.stats.isBirthday"]
            - ["bool", "birthdayBonusActive", "tank.stats.isBirthday and birthdayXpFactor >= tank.maxCertificateXpFactor"]
            - ["eBonusFactor", "xpFactorType", "when xpFactor < tank.maxCertificateXpFactor -> eBonusFactor.kCertificateXP, levelSharedBonusActive -> eBonusFactor.kMultipleXP, eBonusFactor.kXP"]
            - ["bool", "hasRank", "not isNull(tank.dossier) and not isNull(ranksConfig) and tank.dossier.rankState.enabled and tank.dossier.rankState.level > 0"]
            - ["int", "nextRank", "when hasRank -> tank.dossier.rankState.level + 1, 0"]
            - ["RankLevelInfo", "levelConfig", "when not isNull(ranksConfig) and ranksConfig.ranksInfo.Contains(tank.info.level) -> ranksConfig.ranksInfo[tank.info.level], null"]
            - ["RankInfo", "nextRankInfo", "when not isNull(levelConfig) and levelConfig.info.Contains(nextRank) -> levelConfig.info[nextRank], null"]
            - ["RankRequiredMedal", "requiredMedal", "when not isNull(nextRankInfo) -> nextRankInfo.requiredMedal, null"]
            - ["int", "medalsCount", "when not isNull(tank.dossier) and not isNull(requiredMedal) -> GetOwnedAchievementCount(tank.dossier.achievements, requiredMedal.medal.name), 0"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/OwnedTankCell.actions"
        Sound: {}
        UIIdentifierComponent:
            id: "garage_tank"
            params:
            - ["bool", "is_elite", "tank.stats.isElite"]
            - ["string", "nation", "str(tank.info.nation, eNation)"]
            - ["string", "tech_name", "tank.info.technicalName"]
        StyleSheet:
            styles: "~res:/UI/Screens3/ButtonSound.style.yaml;~res:/UI/Screens3/Common/Touch.style.yaml"
    bindings:
    - ["enabled", "not playerReadyForPrebattle or thisTankSelectedForPrebattle"]
    - ["input", "interactive"]
    - ["classes", "cellStyle"]
    - ["UIAttachLayoutMasterComponent.attachId", "when selected -> attachId, \"\""]
    children:
    -   class: "UIControl"
        name: "Content"
        position: [84.000000, 52.000000]
        size: [168.000000, 104.000000]
        pivot: [0.500000, 0.500000]
        input: false
        classes: "content-area"
        components:
            UIOpacityComponent: {}
            Anchor:
                leftAnchorEnabled: true
                rightAnchorEnabled: true
                topAnchorEnabled: true
                bottomAnchorEnabled: true
        children:
        -   class: "UIControl"
            name: "BG"
            input: false
            classes: "black-15-bg"
            components:
                Background:
                    drawType: "DRAW_FILL"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
        -   class: "UIControl"
            name: "Flag"
            input: false
            components:
                UITextureComponent:
                    materialPath: "~res:/Materials.custom/2d.Textured.Saturation.material"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["visible", "empty(tank.iconBackground)"]
            - ["UITextureComponent.spritePath", "nationFlagIcon"]
            - ["UITextureComponent.materialParams", "materialParams"]
        -   class: "UIControl"
            name: "TankBackground"
            input: false
            components:
                UITextureComponent:
                    materialPath: "~res:/Materials.custom/2d.Textured.Saturation.material"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["visible", "not empty(tank.iconBackground)"]
            - ["UITextureComponent.spritePath", "tank.iconBackground"]
            - ["UITextureComponent.materialParams", "materialParams"]
        -   class: "UIControl"
            name: "Hover"
            input: false
            classes: "hover white-wild-sand-25-bg"
            components:
                Background:
                    drawType: "DRAW_SCALE_TO_RECT"
                    sprite: "~res:/Gfx/Lobby/backgrounds/bg_radial-gradient_quarter"
                UIOpacityComponent: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Common/Hover.style.yaml"
        -   class: "UIControl"
            name: "TankImage"
            input: false
            components:
                UITextureComponent:
                    materialPath: "~res:/Materials.custom/2d.Textured.Saturation.material"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["UITextureComponent.spritePath", "tank.bigIconWithCamo"]
            - ["UITextureComponent.materialParams", "materialParams"]
        -   class: "UIControl"
            name: "Selector"
            size: [32.000000, 32.000000]
            input: false
            classes: "orange-orange-peel-bg"
            components:
                Background: {}
                UIOpacityComponent: {}
                Anchor:
                    hCenterAnchorEnabled: true
                    bottomAnchorEnabled: true
                    bottomAnchor: -8.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    horizontalValue: 100.000000
                    verticalPolicy: "FixedSize"
                    verticalValue: 4.000000
                UIIdentifierComponent:
                    id: "garage_tank_selector"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["visible", "selected"]
        -   class: "UIControl"
            name: "InfoContainer"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   prototype: "VehicleInfo/VehicleInfo"
                name: "VehicleInfo"
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: 8.000000
                        topAnchorEnabled: true
                        topAnchor: 4.000000
                    UIDataParamsComponent:
                        args:
                            "class": "tank.info.tankClass"
                            "level": "tank.info.level"
                            "type": "when tank.info.isPremium -> eVehicleDescriptionType.PREMIUM, tank.info.isCollectible -> eVehicleDescriptionType.COLLECTIBLE, tank.stats.isPremiumized -> eVehicleDescriptionType.PREMIUMISED, eVehicleDescriptionType.NORMAL"
                            "elite": "tank.stats.isElite"
            -   class: "UIControl"
                name: "BonusContainer"
                input: false
                components:
                    Anchor:
                        rightAnchorEnabled: true
                        rightAnchor: -2.000000
                        topAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIAttachLayoutMasterComponent: {}
                    UIChildComponent0:
                        condition: "hasBonus and birthdayBonusActive"
                        prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/TankBirthdayLabel.yaml"
                        args:
                            "creditsFactor": "birthdayCreditsFactor"
                            "xpFactor": "birthdayXpFactor"
                    UIChildComponent1:
                        condition: "hasBonus and not birthdayBonusActive"
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/BonusFactor.yaml"
                        args:
                            "size": "eBonusFactorSize.kSmall"
                            "type": "xpFactorType"
                            "factor": "when xpFactorType == eBonusFactor.kCertificateXP -> tank.maxCertificateXpFactor, xpFactorType == eBonusFactor.kMultipleXP -> sharedBonusAmount, xpFactor"
                bindings:
                - ["visible", "showBonus"]
                - ["UIAttachLayoutMasterComponent.attachId", "when (isX2Funnel) -> \"BONUS_HINT\", \"\""]
            -   class: "UIControl"
                name: "TankInfo"
                position: [0.000000, 54.000000]
                size: [168.000000, 48.000000]
                input: false
                components:
                    Anchor:
                        bottomAnchorEnabled: true
                    LinearLayout:
                        orientation: "TopDown"
                        padding: "0;2"
                        spacing: 2.000000
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfChildrenSum"
                children:
                -   class: "UIControl"
                    name: "Shadow"
                    position: [0.000000, 72.000000]
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        Background:
                            drawType: "DRAW_STRETCH_BOTH"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_vertical_0-100"
                        Anchor:
                            bottomAnchorEnabled: true
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                    bindings:
                    - ["classes", "when blocked -> \"black-bg\", \"black-50-bg\""]
                -   class: "UIControl"
                    name: "Status"
                    input: false
                    components:
                        LinearLayout:
                            padding: "6"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfMaxChild"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
                    children:
                    -   class: "UIControl"
                        name: "SquadMatchStatus"
                        input: false
                        components:
                            UITextComponent:
                                multiline: "MULTILINE_ENABLED"
                                align: ["LEFT", "VCENTER"]
                            Anchor:
                                leftAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfContent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml"
                        bindings:
                        - ["visible", "not blocked and showSquadMatchHint"]
                        - ["classes", "\"t-caps bold \" + squadHintTextColor"]
                        - ["UITextComponent.text", "squadHint"]
                    -   class: "UIControl"
                        name: "PrebattleStatus"
                        input: false
                        classes: "t-caps bold color=white-wild-sand-text"
                        components:
                            UITextComponent:
                                multiline: "MULTILINE_ENABLED"
                                align: ["LEFT", "VCENTER"]
                            Anchor:
                                leftAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfContent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml"
                        bindings:
                        - ["visible", "showStatus and tank.lockReason == LOCK_REASON.PREBATTLE"]
                        - ["UITextComponent.text", "prebattleStatus"]
                    -   class: "UIControl"
                        name: "Leased"
                        input: false
                        components:
                            LinearLayout:
                                orientation: "TopDown"
                            SizePolicy:
                                horizontalPolicy: "PercentOfMaxChild"
                                verticalPolicy: "PercentOfChildrenSum"
                        bindings:
                        - ["visible", "not blocked and not playerInPrebattle and not temporaryPremiumization and tank.isLeased"]
                        children:
                        -   class: "UIControl"
                            name: "State"
                            input: false
                            classes: "t-caps bold white-wild-sand-text"
                            components:
                                UITextComponent:
                                    text: "hangar/Footer/TankCell/Temporary"
                                    colorInheritType: "COLOR_IGNORE_PARENT"
                                SizePolicy:
                                    horizontalPolicy: "PercentOfContent"
                                    verticalPolicy: "PercentOfContent"
                        -   class: "UIControl"
                            name: "TimeLeft"
                            input: false
                            components:
                                LinearLayout:
                                    spacing: 4.000000
                                SizePolicy:
                                    horizontalPolicy: "PercentOfChildrenSum"
                                    verticalPolicy: "PercentOfMaxChild"
                            children:
                            -   class: "UIControl"
                                name: "Icon"
                                input: false
                                classes: "orange-orange-peel-bg"
                                components:
                                    Background:
                                        drawType: "DRAW_ALIGNED"
                                        sprite: "~res:/Gfx/UI/LobbyCommon/timer_icon"
                                        colorInherit: "COLOR_IGNORE_PARENT"
                                        perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
                                    SizePolicy:
                                        horizontalPolicy: "FixedSize"
                                        horizontalValue: 16.000000
                                        verticalPolicy: "FixedSize"
                                        verticalValue: 16.000000
                            -   class: "UIControl"
                                name: "Value"
                                input: false
                                classes: "t-caption bold orange-orange-peel-text"
                                components:
                                    UITextComponent:
                                        colorInheritType: "COLOR_IGNORE_PARENT"
                                    Anchor:
                                        vCenterAnchorEnabled: true
                                    SizePolicy:
                                        horizontalPolicy: "PercentOfContent"
                                        verticalPolicy: "PercentOfContent"
                                    StyleSheet:
                                        styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
                                bindings:
                                - ["UITextComponent.text", "timeDiff(tank.leasingEndTime - serverTime)"]
                    -   class: "UIControl"
                        name: "Blocked"
                        input: false
                        components:
                            LinearLayout:
                                orientation: "TopDown"
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfChildrenSum"
                        bindings:
                        - ["visible", "blocked"]
                        children:
                        -   class: "UIControl"
                            name: "LockImage"
                            input: false
                            classes: "white-wild-sand-bg"
                            components:
                                Background:
                                    drawType: "DRAW_ALIGNED"
                                    sprite: "~res:/Gfx/Lobby/icons/icon_lock"
                                Anchor:
                                    hCenterAnchorEnabled: true
                                SizePolicy:
                                    horizontalPolicy: "FixedSize"
                                    horizontalValue: 24.000000
                                    verticalPolicy: "FixedSize"
                                    verticalValue: 24.000000
                                StyleSheet:
                                    styles: "~res:/UI/Screens3/Color.style.yaml"
                        -   class: "UIControl"
                            name: "Blocked"
                            input: false
                            classes: "t-caps bold red-red-text"
                            components:
                                UITextComponent:
                                    multiline: "MULTILINE_ENABLED"
                                    align: ["LEFT", "BOTTOM"]
                                SizePolicy:
                                    horizontalPolicy: "PercentOfParent"
                                    verticalPolicy: "PercentOfContent"
                                StyleSheet:
                                    styles: "~res:/UI/Screens3/Font.style.yaml"
                            bindings:
                            - ["UITextComponent.text", "blockHint"]
                    -   class: "UIControl"
                        name: "Premialized"
                        size: [32.000000, 32.000000]
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfMaxChild"
                                verticalPolicy: "PercentOfMaxChild"
                            UIIdentifierComponent:
                                id: "garage_tank_premialized"
                        bindings:
                        - ["visible", "not blocked and not playerInPrebattle and temporaryPremiumization"]
                        children:
                        -   prototype: "Timer/Timer"
                            name: "Timer"
                            components:
                                Anchor:
                                    leftAnchorEnabled: true
                                    leftAnchor: -4.000000
                                    bottomAnchorEnabled: true
                                    bottomAnchor: -2.000000
                                UIDataParamsComponent:
                                    args:
                                        "colorStyle": "\"white-wild-sand\""
                                        "visible": "true"
                                        "serverTime": "serverTime"
                                        "time": "tank.stats.premiumizationEnd"
                                        "bgVisible": "false"
                                        "iconVisible": "true"
                                        "alertTime": "0L"
                -   class: "UIControl"
                    name: "TankInfo"
                    input: false
                    components:
                        LinearLayout:
                            padding: "6; 0"
                            spacing: 1.000000
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfMaxChild"
                    children:
                    -   class: "UIControl"
                        name: "Rank"
                        input: false
                        components:
                            Anchor:
                                vCenterAnchorEnabled: true
                                vCenterAnchor: 1.000000
                            SizePolicy:
                                horizontalPolicy: "PercentOfFirstChild"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                condition: "hasRank"
                                prototypePath: "~res:/UI/Screens3/Lobby/Inventory/TankProgress/TankRankSmall.yaml"
                                args:
                                    "rank": "tank.dossier.rankState.level"
                                    "grade": "when ranksConfig.grades.Contains(tank.dossier.rankState.level) -> ranksConfig.grades[tank.dossier.rankState.level], eTankRankGrade.Common"
                                    "readyToUnlock": "isGeneralPackLoaded and not isNull(nextRankInfo) and nextRankInfo.points <= tank.dossier.rankState.points and (isNull(requiredMedal) or medalsCount >= requiredMedal.value)"
                        bindings:
                        - ["visible", "hasRank"]
                    -   class: "UIControl"
                        name: "Spacer"
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "FixedSize"
                                horizontalValue: 2.000000
                                verticalPolicy: "PercentOfParent"
                    -   class: "UIControl"
                        name: "NameContainer"
                        size: [32.000000, 32.000000]
                        input: false
                        components:
                            Anchor:
                                vCenterAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfMaxChild"
                            UIChildComponent0:
                                condition: "reducedTankNames.Contains(tank.info.shortName)"
                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/TankReducedName.yaml"
                                args:
                                    "resultStyle": "\"t-body bold \" + tankNameColor"
                                    "name": "tank.info.shortName"
                            UIChildComponent1:
                                condition: "not reducedTankNames.Contains(tank.info.shortName)"
                                prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/TankName.yaml"
                                args:
                                    "resultStyle": "\"t-body bold \" + tankNameColor"
                                    "name": "tank.info.shortName"
                    -   class: "UIControl"
                        name: "FavoritePin"
                        input: false
                        classes: "white-wild-sand-bg"
                        components:
                            Background:
                                drawType: "DRAW_ALIGNED"
                                sprite: "~res:/Gfx/Lobby/icons/icon_pin_s.psd"
                            Anchor:
                                bottomAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "FixedSize"
                                horizontalValue: 24.000000
                                verticalPolicy: "FixedSize"
                                verticalValue: 24.000000
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Color.style.yaml"
                        bindings:
                        - ["visible", "tank.isFavorite"]
        -   class: "UIControl"
            name: "FadeImage"
            input: false
            components:
                Background:
                    drawType: "DRAW_SCALE_TO_RECT"
                    sprite: "~res:/Gfx/UI/LobbyCommon/DarkBackground"
                    frame: 2
                Anchor:
                    leftAnchorEnabled: true
                    rightAnchorEnabled: true
                    topAnchorEnabled: true
                    bottomAnchorEnabled: true
            bindings:
            - ["visible", "isLoading or (playerReadyForPrebattle and not thisTankSelectedForPrebattle)"]
            children:
            -   class: "UIControl"
                name: "LoadingSpinner"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        condition: "isLoading"
                        prototypePath: "~res:/UI/Screens3/Common/LoadingSpinner.yaml"
                bindings:
                - ["visible", "isLoading"]
