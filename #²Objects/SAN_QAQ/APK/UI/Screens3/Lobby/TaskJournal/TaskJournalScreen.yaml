Header:
    version: 157
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/SideBar.yaml"
Prototypes:
-   class: "UIControl"
    name: "TaskJournalScreen"
    size: [1302.000000, 833.000000]
    input: false
    components:
        UIAnimationComponent:
            animations: "SCROLL_TO_BONUS_QUEST,~res:/UI/Screens3/Lobby/TaskJournal/Animations/ScrollToBonusQuest.animation"
        Anchor:
            leftAnchorEnabled: true
            rightAnchorEnabled: true
            topAnchorEnabled: true
            bottomAnchorEnabled: true
        LinearLayout:
            orientation: "RightToLeft"
        ModalInput: {}
        UIVirtualActionEventComponent0:
            virtualKeyAction: "Escape"
            keyDownEvent: "BACK_SHORTCUT"
        UIVirtualActionEventComponent1:
            virtualKeyAction: "Options"
            keyDownEvent: "GO_TO_SHOP"
        UIShortcutEventComponent:
            shortcuts: "BACK_SHORTCUT,Back;BACK_SHORTCUT,Escape"
        UIDataParamsComponent:
            params:
            - ["AccountDataModel", "account", "null", "{ }"]
            - ["LobbyDataModel", "lobby", "null", "{ }"]
            - ["AppDataModel", "app", "null", "{ }"]
            - ["SessionDataModel", "session", "null", "{ }"]
            - ["TaskJournal", "model", "null", "{ }"]
            - ["TaskJournalCache", "cache", "null", "{ }"]
            - ["BattlePass", "battlePass", "null", "{ }"]
        UIDataLocalVarsComponent:
            data:
            - ["bool", "tabSwitchAnimation", "false"]
        UIDataLocalBindingsComponent:
            data:
            - ["eInsetType", "insetType", "when model.activeTab == eTaskJournalTab.BattlePass -> eInsetType.NONE, eInsetType.INSET"]
            - ["bool", "isBattlePassTabVisible", "not isNull(battlePass) and battlePass.isVisible and battlePass.activeStage.type == eStageType.PROCESS and battlePass.isWeeklyProgress"]
            - ["bool", "isInClan", "not isNull(session.clanInfo.clan)"]
            - ["eClanApiError", "lastClanApiError", "session.clanInfo.lastClanApiError"]
            - ["bool", "noClanDataVisible", "model.activeTab == eTaskJournalTab.Clan and not isInClan"]
            - ["bool", "showClanApiError", "model.activeTab == eTaskJournalTab.Clan and not isInClan and (lastClanApiError == eClanApiError.InternalServerError or lastClanApiError == eClanApiError.ExternalServerError or lastClanApiError == eClanApiError.ServerOnMaintenance)"]
            - ["bool", "showCustomBg", "model.activeTab == eTaskJournalTab.Personal or (model.activeTab == eTaskJournalTab.BattlePass and isBattlePassTabVisible) or (model.activeTab == eTaskJournalTab.Clan and isInClan and not showClanApiError) or noClanDataVisible or showClanApiError"]
        UIDataLocalControlComponent0:
            name: "headerContent"
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Headers/TitleWithSubtitle.yaml"
            args:
                "touchable": "(model.activeTab != eTaskJournalTab.BattlePass and model.questsLevel > 1) or (model.activeTab == eTaskJournalTab.BattlePass and Contains(battlePass.featuring.videoPath, eFeaturingVideoType.WeeklyProgress))"
                "title": "when model.activeTab == eTaskJournalTab.Personal -> \"taskJournal/MainHeader/Personal\", model.activeTab == eTaskJournalTab.Clan -> \"taskJournal/MainHeader/Clan\", \"taskJournal/MainHeader/BattlePass\""
                "subTitle": "when model.questsLevel > 0 -> format(localize(\"missionJournal/level\"), { \"level\" = model.questsLevel; }), \"\""
                "iconPath": "when (model.activeTab != eTaskJournalTab.BattlePass and model.questsLevel > 1) or (model.activeTab == eTaskJournalTab.BattlePass and Contains(battlePass.featuring.videoPath, eFeaturingVideoType.WeeklyProgress)) -> \"~res:/Gfx/Lobby/icons/icon_info_xs\", \"\""
                "soundType": "eButtonSound.OPEN"
            eventActions:
            - ["ON_TAB_SELECTED", "ON_TAB_SELECTED", "_event"]
            - ["ON_SUBTITLE_TOUCHED", "SHOW_LEVEL_INFO", ""]
        UIChildComponent0:
            childType: "kPrototype"
            condition: "showClanApiError"
            prototypePath: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalClanApiError.yaml"
            args:
                "error": "lastClanApiError"
        UIChildComponent1:
            condition: "noClanDataVisible"
            prototypePath: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalNoClanTab.yaml"
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/TaskJournal/Animations/TaskJournal.actions"
        UIDataOnEventComponent0:
            eventName: "ON_SELECT_CLAN_TAB"
            modelFieldExpression: "model.clanTasks.activeTab"
            dataExpression: "_event"
        UIEventOnDataComponent0:
            watchedDataExpression: "isBattlePassTabVisible"
            ifExpression: "not isBattlePassTabVisible"
            eventName: "ON_TAB_SELECTED"
            eventData: "eTaskJournalTab.Personal"
    children:
    -   class: "UIControl"
        name: "Background"
        size: [32.000000, 32.000000]
        input: false
        components:
            Background:
                drawType: "DRAW_STRETCH_BOTH"
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIChildComponent0:
                childType: "kControl"
                condition: "model.activeTab == eTaskJournalTab.Personal"
                control: "PersonalBg"
            UIChildComponent1:
                childType: "kControl"
                condition: "model.activeTab == eTaskJournalTab.BattlePass and isBattlePassTabVisible"
                control: "BattlePassBg"
            UIChildComponent2:
                childType: "kControl"
                condition: "model.activeTab == eTaskJournalTab.Clan and isInClan and not showClanApiError"
                control: "ClanBg"
        bindings:
        - ["visible", "showCustomBg"]
        - ["Background.sprite", "when (noClanDataVisible or showClanApiError) and app.sDlc.isGeneralPackLoaded -> \"~res:/Gfx/UI/TaskJournal/Extended/no_clan_artwork\", \"\""]
    -   class: "UIControl"
        name: "ContentAndHeader"
        size: [32.000000, 32.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        children:
        -   class: "UIControl"
            name: "Header"
            visible: true
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfFirstChild"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Headers/BaseHeader.yaml"
                    args:
                        "isBackButtonHasSounds": "account.tutorialData.currentHint != eTutorialHint.kClanTasks and account.tutorialData.currentHint != eTutorialHint.kBattlePass and account.tutorialData.currentHint != eTutorialHint.NewbieTaskJournal and account.tutorialData.currentHint != eTutorialHint.MainTaskJournal and account.tutorialData.currentHint != eTutorialHint.BattlePassTasks"
                        "session": "session"
                        "lobby": "lobby"
                        "leftContent": "headerContent"
                        "bgStyle": ""
                        "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                        "showBackButton": "false"
                        "isBackButtonInitiallyClickable": "false"
                        "showGold": "model.activeTab == eTaskJournalTab.BattlePass"
                        "showCredits": "false"
                        "showFreeXp": "false"
                        "showPremium": "false"
                        "showStatsPanel": "true"
                        "isFullScreen": "true"
                    eventActions:
                    - ["GO_TO_SHOP", "GO_TO_SHOP", ""]
                    - ["PREMIUM_INFO_EVENT", "PREMIUM_INFO_EVENT", ""]
                    - ["BACK_EVENT", "BACK_EVENT", ""]
                    - ["SHOP_BUTTON", "SHOP_BUTTON", "_event.requiredResource"]
        -   class: "UIControl"
            name: "Content"
            position: [0.000000, 80.000000]
            input: false
            components:
                Anchor:
                    leftAnchorEnabled: true
                    rightAnchorEnabled: true
                    topAnchorEnabled: true
                    topAnchor: 64.000000
                    bottomAnchorEnabled: true
                UIAnchorSafeAreaComponent: {}
                UIChildComponent0:
                    childType: "kPrototype"
                    condition: "model.activeTab == eTaskJournalTab.Personal and model.questsLevel > 1"
                    prototypePath: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalPersonalTab.yaml"
                    args:
                        "app": "app"
                        "account": "account"
                        "model": "model"
                        "cache": "cache"
                        "session": "session"
                        "lobby": "lobby"
                UIChildComponent1:
                    childType: "kPrototype"
                    condition: "isInClan and not showClanApiError and model.activeTab == eTaskJournalTab.Clan"
                    prototypePath: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalClanTab.yaml"
                    args:
                        "cache": "cache"
                        "model": "model"
                        "session": "session"
                        "account": "account"
                UIChildComponent2:
                    condition: "model.activeTab == eTaskJournalTab.Personal and model.questsLevel <= 1"
                    prototypePath: "~res:/UI/Screens3/Lobby/TaskJournal/Newbie/TaskJournalNewbieTab.yaml"
                    args:
                        "cache": "cache"
                        "app": "app"
                        "session": "session"
                        "model": "model"
                        "account": "account"
                        "isDeveloperUI": "app.constants.developerUI"
                UIChildComponent3:
                    condition: "model.activeTab == eTaskJournalTab.BattlePass and isBattlePassTabVisible"
                    prototypePath: "~res:/UI/Screens3/Lobby/TaskJournal/BattlePass/BattlePassTab.yaml"
                    args:
                        "app": "app"
                        "account": "account"
                        "battlePass": "battlePass"
                        "session": "session"
                        "model": "model.battlePassTasks"
            bindings:
            - ["visible", "not noClanDataVisible"]
            - ["UIAnchorSafeAreaComponent.leftSafeInset", "insetType"]
            - ["UIAnchorSafeAreaComponent.rightSafeInset", "insetType"]
    -   class: "UIControl"
        name: "TabSwitchScreenShot"
        size: [32.000000, 32.000000]
        input: false
        components:
            Background:
                usePostProcessedSprite: true
            UIOpacityComponent:
                opacity: 0.500000
            UIPostProcessTextureComponent0:
                materialPath: "~res:/Materials/2d.Textured.Alphablend.material"
                needClearAlphaAfterRender: true
                needClear: false
                renderRequestingType: "ON_REQUEST"
                minFilter: "Linear"
                magFilter: "Linear"
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        bindings:
        - ["visible", "tabSwitchAnimation"]
    -   prototype: "SideBar/Sidebar"
        name: "Sidebar"
        components:
            UIDataParamsComponent:
                args:
                    "backButtonLayer": "when account.tutorialData.currentHighlightControl == eTutorialHighlights.kBack -> 1, 0"
                    "bgStyle": ""
                    "content": "SidebarButtons"
                eventActions:
                - ["ON_CLICK_BACK", "BACK_EVENT", ""]
Slots:
-   class: "UIControl"
    name: "SidebarButtons"
    size: [32.000000, 32.000000]
    input: false
    components:
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 88.000000
            verticalPolicy: "PercentOfChildrenSum"
        UISwitchBarComponent:
            onSelectElement: "ON_TAB_SELECTED"
            onSelectElementData: "toEnum(_selectedElement, eTaskJournalTab)"
            selectionEventType: "TOUCH_UP"
            moveSelectionMode: "VerticalDpad"
    bindings:
    - ["UISwitchBarComponent.selectedElement", "model.activeTab"]
    children:
    -   class: "UIControl"
        name: "Personal"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfChildrenSum"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/Sidebar/SidebarItem/SideBarItem.yaml"
                args:
                    "attachId": "\"TASK_JOURNAL_PERSONAL_TAB\""
                    "badge": "badge(model.personalTabBadge)"
                    "badgeType": "eBadgeType.Digit"
                    "icon": "\"~res:/Gfx/Lobby/icons/icon_personal-task_m\""
                    "select": "model.activeTab == eTaskJournalTab.Personal"
                    "switchId": "int(eTaskJournalTab.Personal)"
    -   class: "UIControl"
        name: "BattlePass"
        position: [0.000000, 144.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfChildrenSum"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/Sidebar/SidebarItem/SideBarItem.yaml"
                args:
                    "attachId": "\"TASK_JOURNAL_BATTLE_PASS_TAB\""
                    "badge": "badge(model.battlePassTabBadge)"
                    "badgeType": "eBadgeType.Digit"
                    "icon": "\"~res:/Gfx/Lobby/icons/icon_ticket_m\""
                    "inputEnabled": "app.sDlc.isGeneralPackLoaded"
                    "lock": "not isBattlePassTabVisible or not app.sDlc.isGeneralPackLoaded"
                    "select": "model.activeTab == eTaskJournalTab.BattlePass"
                    "switchId": "int(eTaskJournalTab.BattlePass)"
        bindings:
        - ["visible", "isBattlePassTabVisible"]
    -   class: "UIControl"
        name: "Clan"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfChildrenSum"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/Sidebar/SidebarItem/SideBarItem.yaml"
                args:
                    "attachId": "\"TASK_JOURNAL_CLAN_TAB\""
                    "badge": "badge(model.clanTabBadge)"
                    "badgeType": "eBadgeType.Digit"
                    "icon": "\"~res:/Gfx/Lobby/icons/icon_clans_n.psd\""
                    "inputEnabled": "app.sDlc.isGeneralPackLoaded"
                    "lock": "not app.sDlc.isGeneralPackLoaded"
                    "select": "model.activeTab == eTaskJournalTab.Clan"
                    "switchId": "int(eTaskJournalTab.Clan)"
-   class: "UIControl"
    name: "PersonalBg"
    input: false
    components:
        Anchor:
            leftAnchorEnabled: true
            rightAnchorEnabled: true
            topAnchorEnabled: true
            bottomAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "Texture"
        size: [1920.000000, 1080.000000]
        input: false
        components:
            Background:
                drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
                sprite: "~res:/Gfx/UI/TaskJournal/Extended/personal_artwork"
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
-   class: "UIControl"
    name: "BattlePassBg"
    size: [800.000000, 600.000000]
    input: false
    components:
        ClipContent: {}
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "Texture"
        position: [500.000000, 0.000000]
        size: [2560.000000, 1706.666504]
        pivot: [0.500000, 0.000000]
        input: false
        components:
            Background:
                drawType: "DRAW_SCALE_TO_RECT"
            UIUrlImageComponent: {}
            Anchor:
                hCenterAnchorEnabled: true
                topAnchorEnabled: true
                vCenterAnchorEnabled: false
                bottomAnchorEnabled: false
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "content / 0.75"
                verticalPolicy: "PercentOfContent"
            ScalePolicy:
                horizontalFormula: "max(parentSize.X / size.X, parentSize.Y / size.Y)"
                verticalFormula: "max(parentSize.X / size.X, parentSize.Y / size.Y)"
            StyleSheet:
                styles: "~res:/UI/Screens3/Background.style.yaml"
        bindings:
        - ["UIUrlImageComponent.imageUrl", "battlePass.resources.graphics[\"battlePassBackground\"]"]
-   class: "UIControl"
    name: "ClanBg"
    input: false
    components:
        Anchor:
            leftAnchorEnabled: true
            rightAnchorEnabled: true
            topAnchorEnabled: true
            bottomAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "Texture"
        size: [1920.000000, 1080.000000]
        input: false
        components:
            Background:
                drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
                sprite: "~res:/Gfx/UI/TaskJournal/Extended/clan_artwork"
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
