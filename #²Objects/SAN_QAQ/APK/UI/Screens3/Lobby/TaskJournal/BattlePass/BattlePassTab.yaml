Header:
    version: 157
Prototypes:
-   class: "UIControl"
    name: "BattlePassTab"
    size: [960.000000, 640.000000]
    input: false
    components:
        ClipContent:
            top: false
        Anchor:
            enabled: true
            hCenterAnchorEnabled: true
            vCenterAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        UIDataParamsComponent:
            params:
            - ["AppDataModel", "app", "null", "{ }"]
            - ["AccountDataModel", "account", "null", "{ }"]
            - ["BattlePass", "battlePass", "null", "{ \"activeLevelIndex\" = 3; \"untakenRewardsCount\" = 2; }"]
            - ["SessionDataModel", "session", "null", "{ }"]
            - ["BattlePassTasksData", "model", "null", "{ }"]
            events:
            - "REFRESH_QUEST(string slotId)"
            - "BP_TASK_CLICKED(string slotId)"
            - "ON_REFRESH_QUESTS"
            - "ON_COLLECT_ALL"
            - "ON_ACTIVATE_WEEK_CLICKED"
            - "ON_LICENSE_CLICKED"
            - "ON_INCOMPLETED_STAGE_CLICKED(string masterId)"
        UIDataLocalVarsComponent:
            data:
            - ["float", "rightPosition", "0.000000"]
            - ["float", "leftPosition", "0.000000"]
            - ["int", "rightIndex", "model.selectedIndex"]
            - ["int", "leftIndex", "model.selectedIndex"]
            - ["int", "afterSwipeIndex", "model.selectedIndex"]
            - ["bool", "isSwipeByTab", "false"]
            - ["bool", "isWidgetActive", "model.weekData[model.selectedIndex].state == eBattlePassTasksWeekState.Active and (battlePass.untakenRewardsCount != 0 or battlePass.levels[battlePass.levels.Size() - 1].paths[eBattlePassPath.Free].isRewardTaken or (account.tutorialData.currentHint == eTutorialHint.BattlePassTasks and not account.diaryDataModel.isBattlePassTasksLessonCompleted) or model.isCollectingInProgress)"]
            - ["bool", "isWidgetVisible", "isWidgetActive"]
        UIDataLocalBindingsComponent:
            data:
            - ["string", "badgeAttachId", "\"BPWP_TAB_BADGE\""]
            - ["float", "farPosition", "screenWidth * -2.000000"]
            - ["int", "tabsCount", "Size(model.weekData)"]
            - ["BattlePassTasksWeekData", "selectedWeek", "model.weekData[model.selectedIndex]"]
            - ["bool", "previousStateIsBlocked", "selectedWeek.previousState == eBattlePassTasksWeekState.Blocked"]
            - ["bool", "selectedWeekUnlocked", "selectedWeek.state == eBattlePassTasksWeekState.Inactive"]
            - ["bool", "selectedWeekActive", "selectedWeek.state == eBattlePassTasksWeekState.Active"]
            - ["bool", "selectedWeekBlocked", "selectedWeek.state == eBattlePassTasksWeekState.Blocked"]
            - ["bool", "isSwipeInProgress", "leftIndex != rightIndex or isSwipeByTab"]
            - ["bool", "isWidgetMustBeActive", "(battlePass.untakenRewardsCount != 0 or battlePass.levels[battlePass.levels.Size() - 1].paths[eBattlePassPath.Free].isRewardTaken or model.isCollectingInProgress) and model.weekData[when isSwipeInProgress -> afterSwipeIndex, model.selectedIndex].state == eBattlePassTasksWeekState.Active"]
            - ["bool", "blockSwipeBecauseAnimation", "selectedWeek.hasUnseenTaskProgress or model.isCollectingInProgress"]
            - ["string", "headerDescription", "when selectedWeek.state == eBattlePassTasksWeekState.Active -> \"missionJournal/battlePass/ActiveDescription\", selectedWeek.state == eBattlePassTasksWeekState.Inactive -> \"missionJournal/battlePass/InactiveDescription\", \"missionJournal/battlePass/BlockedDescription\""]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/TaskJournal/Animations/BattlePassTab.actions"
        UIDataOnEventComponent0:
            eventName: "AnimateQuestUnlockFinished"
            modelFieldExpression: "model.showPremiumQuestUnlock"
            dataExpression: "false"
        UIEventOnDataComponent0:
            watchedDataExpression: "account.tutorialData.currentHint"
            ifExpression: "account.tutorialData.currentHint == eTutorialHint.BattlePassTasks and not account.diaryDataModel.isBattlePassTasksLessonCompleted"
            eventName: "UpdateWidget"
        UIEventOnDataComponent1:
            watchedDataExpression: "selectedWeek.state"
            ifExpression: "selectedWeek.state == eBattlePassTasksWeekState.Active and selectedWeek.previousState == eBattlePassTasksWeekState.Inactive"
            eventName: "UpdateWidget"
        UIEventOnDataComponent2:
            watchedDataExpression: "model.isCollectingInProgress"
            ifExpression: "model.isCollectingInProgress == true"
            eventName: "UpdateWidget"
    children:
    -   class: "UIControl"
        name: "TabContent"
        size: [1072.000000, 560.000000]
        input: false
        components:
            UIOpacityComponent: {}
            LinearLayout:
                orientation: "BottomUp"
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Common/Desktop.style.yaml"
        children:
        -   class: "UIControl"
            name: "TabsSwiper"
            components:
                ClipContent:
                    top: false
                Anchor:
                    hCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UISwipeComponent:
                    mode: "Page"
                    direction: "RightLeft"
                    swipeOffsetEvent: "SwipeOffset"
                    swipeOffsetEventData: "_leftIndex, _rightIndex, _leftPosition, _rightPosition, _leftProportion, _rightProportion, _isInertion"
                    swipeStartedEvent: "SwipeStarted"
                    swipeFinishedEvent: "SwipeFinished"
                    swipeCancelEvent: "SwipeCanceled"
                    pageChangedEvent: "PageChanged"
                    pageChangedEventData: "_pageIndex"
                    pageChangingEvent: "PageChanging"
                    pageChangingEventData: "_pageIndex"
                UIRepeatComponent:
                    control: "~res:/UI/Screens3/Lobby/TaskJournal/BattlePass/BattlePassTabPage.yaml"
                    dataContainer: "model.weekData"
                    args:
                        "usePremBpAsLicense": "model.usePremiumBpAsLicense"
                        "havePremBp": "model.havePremBp"
                        "previousHavePremBp": "model.previousHavePremBp"
                        "currentSelectedIndex": "model.selectedIndex"
                        "badgeAttachId": "badgeAttachId"
                        "isLessonInProgress": "account.tutorialData.currentHint != eTutorialHint.kUnknown"
                        "showPremiumQuestUnlock": "model.showPremiumQuestUnlock"
                        "previousWeekUnlocked": "when _index > 0 -> model.weekData[_index - 1].state != eBattlePassTasksWeekState.Blocked, true"
                        "isWidgetActive": "isWidgetActive"
                        "haveLicense": "model.haveLicense"
                        "previousHaveLicense": "model.previousHaveLicense"
                        "weekIndex": "_index"
                        "isSelected": "_index == model.selectedIndex"
                        "tabAbsolutePosition": "tabAbsolutePosition"
                        "point": "when _index == leftIndex -> leftPosition, (when _index == rightIndex -> rightPosition, farPosition)"
                        "battlePass": "battlePass"
                        "replacedTask": "when model.isReplacingInProgress -> model.replacedTask, null"
                        "model": "_item"
                        "session": "session"
                    eventActions:
                    - ["AnimateQuestUnlockFinished", "AnimateQuestUnlockFinished", ""]
                    - ["ShowTabNameEffect", "ShowTabNameEffect", "_event.weekIndex"]
                    - ["BP_TASK_CLICKED", "BP_TASK_CLICKED", "_event.slotId"]
                    - ["REFRESH_QUEST", "REFRESH_QUEST", "_event.slotId"]
                    - ["ON_REFRESH_QUESTS", "ON_REFRESH_QUESTS", ""]
                    - ["ON_COLLECT_ALL", "ON_COLLECT_ALL", ""]
                    - ["ON_COLLECT_SHOWN", "ON_COLLECT_SHOWN", ""]
                    - ["ON_ACTIVATE_WEEK_CLICKED", "ON_ACTIVATE_WEEK_CLICKED", ""]
                    - ["ON_LICENSE_CLICKED", "ON_LICENSE_CLICKED", ""]
                    - ["ON_INCOMPLETED_STAGE_CLICKED", "ON_INCOMPLETED_STAGE_CLICKED", "_event.masterId"]
                    elementNameExpression: "\"BattlePassTabPage_\" + str(_index)"
                    loadingPolicy: "Immediately"
            bindings:
            - ["input", "tabsCount > 1 and not blockSwipeBecauseAnimation"]
            - ["UISwipeComponent.pageCount", "tabsCount"]
            - ["UISwipeComponent.currentPageIndex", "model.selectedIndex"]
        -   class: "UIControl"
            name: "TabsWrapper"
            size: [32.000000, 32.000000]
            input: false
            classes: "default-limited-width"
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "max((parent- safeAreaInsets.left - safeAreaInsets.right) * 0.96 , 820)"
                    verticalPolicy: "FixedSize"
                    verticalValue: 32.000000
                StyleSheet:
                    styles: "~res:/UI/Screens3/Common/Desktop.style.yaml"
            children:
            -   class: "UIControl"
                name: "BPWidget"
                input: false
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        leftAnchor: 20.000000
                        topAnchorEnabled: true
                        topAnchor: 20.000000
                        vCenterAnchorEnabled: false
                        vCenterAnchor: -252.000000
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        verticalPolicy: "FixedSize"
                bindings:
                - ["visible", "isWidgetVisible"]
                children:
                -   class: "UIControl"
                    name: "BPWidgetAnchor"
                    pivot: [0.500000, 0.500000]
                    input: false
                    components:
                        Anchor:
                            hCenterAnchorEnabled: true
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "FixedSize"
                            horizontalValue: 12.000000
                            verticalPolicy: "FixedSize"
                            verticalValue: 12.000000
                        UIAttachLayoutMasterComponent:
                            attachId: "BATTLE_PASS_WIDGET"
                        UIChildComponent0:
                            prototypePath: "~res:/UI/Screens3/Lobby/TaskJournal/BattlePass/BattlePassTabWidget.yaml"
                            args:
                                "isHighlightedForLesson": "(account.tutorialData.currentHint == eTutorialHint.kBattlePass or account.tutorialData.currentHint == eTutorialHint.BattlePassTasks) and account.tutorialData.currentHighlightControl == eTutorialHighlights.TaskJournalBPWidget"
                                "battlePass": "battlePass"
            -   class: "UIControl"
                name: "Tabs"
                size: [32.000000, 32.000000]
                input: false
                classes: "default-limited-width"
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        topAnchorEnabled: true
                        topAnchor: -16.000000
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalFormula: "parent / 1.5"
                        verticalPolicy: "FixedSize"
                        verticalValue: 64.000000
                    UIChildComponent0:
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Tabs/TextTabsBar.yaml"
                        args:
                            "badgeAttachId": "badgeAttachId"
                            "activeTab": "model.selectedIndex"
                            "bgStyle": ""
                            "info": "model.tabTextInfo"
                            "attachID": "\"BPWP_TABS\""
                            "animatedLabel": "(not model.usePremiumBpAsLicense and (not model.haveLicense or not model.previousHaveLicense)) or (model.usePremiumBpAsLicense and (not model.havePremBp or not model.previousHavePremBp))"
                            "labelTab": "model.activatedIndex"
                            "labelControl": "when (not model.usePremiumBpAsLicense and (not model.haveLicense or not model.previousHaveLicense)) or (model.usePremiumBpAsLicense and (not model.havePremBp or not model.previousHavePremBp)) -> ActiveStateLabel, null"
Slots:
-   class: "UIControl"
    name: "ActiveStateLabel"
    size: [100.000000, 60.000000]
    input: false
    components:
        Anchor:
            bottomAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "FixedSize"
            verticalValue: 64.000000
    children:
    -   class: "UIControl"
        name: "GradientBg"
        input: false
        components:
            Background:
                drawType: "DRAW_FILL"
            UIOpacityComponent:
                opacity: 0.450000
            UIGradientComponent:
                startColor: [0.933333, 0.501961, 0.090196, 1.000000]
                finishColor: [0.929412, 0.317647, 0.105882, 0.000000]
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
    -   class: "UIControl"
        name: "Name"
        pivot: [0.500000, 0.500000]
        selected: false
        input: false
        classes: "t-caps regular yellow-chalky-text"
        components:
            UIOpacityComponent: {}
            UITextComponent: {}
            Anchor:
                hCenterAnchorEnabled: true
                topAnchorEnabled: true
                topAnchor: 4.000000
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["UITextComponent.text", "localize(\"missionJournal/battlePass/currentWeek\")"]
    -   class: "UIParticles"
        name: "Glow"
        size: [32.000000, 32.000000]
        pivot: [0.500000, 0.500000]
        input: false
        effectPath: "~res:/3d/FX/UI/BP_Progression_v2/TimeGlow.sc2"
        components:
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            IgnoreLayout: {}
            ScalePolicy:
                horizontalFormula: "0.4*parentSize.X / size.X"
                verticalFormula: "0.4*parentSize.Y / size.Y"
