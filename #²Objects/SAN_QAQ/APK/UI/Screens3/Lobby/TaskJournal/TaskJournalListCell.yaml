Header:
    version: 150
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/Button.yaml"
Prototypes:
-   class: "UIListCell"
    name: "TaskJournalListCell"
    size: [800.000000, 100.000000]
    pivot: [0.500000, 0.500000]
    components:
        Background:
            drawType: "DRAW_ALIGNED"
        Anchor:
            hCenterAnchorEnabled: true
            vCenterAnchorEnabled: true
        LinearLayout:
            enabled: true
            orientation: "LeftToRight"
            spacing: 20.000000
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfMaxChild"
        UIAttachLayoutMasterComponent: {}
        UIInputEventComponent:
            onTouchUpInside: "TASK_JOURNAL_LIST_CELL_CLICKED"
            onTouchUpInsideData: "displayingTask.slotId"
        UIDataParamsComponent:
            params:
            - ["bool", "isGeneralPackLoaded", "true", "true"]
            - ["bool", "isButtonLocked", "false", "false"]
            - ["bool", "advertisingAvailable", "false", "true"]
            - ["TaskJournalTaskView", "oldTask", "null", "{ \"slotId\" = \"2\"; \"iconType\" = 2; }"]
            - ["TaskJournalTaskView", "taskToReplace", "null", "{ \"status\" = eQuestStatus.Active; \"isQuestLocked\" = false; \"isLessonExist\" = false; }"]
            - ["TaskJournalTaskView", "task", "null", "{ \"slotId\" = \"3\"; \"iconType\" = 3; \"status\" = eQuestStatus.Active; \"isQuestLocked\" = false; \"isLessonExist\" = true; }"]
            events:
            - "TASK_JOURNAL_LIST_CELL_CLICKED(string slotId)"
            - "APPLY_QUEST_PRESSED(string slotId)"
            - "ON_TASK_REWARD_CLICKED(string slotId, int rewardIndex)"
            - "SHOW_LESSON(string slotId)"
            - "ADVERTISING_REPLACE(string slotId)"
            - "REMOVE_REPLACED_TASK(string slotId)"
            - "REMOVE_OLD_CHAIN_TASK(string slotId)"
        UIDataLocalVarsComponent:
            data:
            - ["bool", "isChangingAnimationInProgress", "false"]
        UIDataLocalBindingsComponent:
            data:
            - ["string", "slotId", "when not isNull(task) -> task.slotId, \"\""]
            - ["bool", "replacementPending", "not isNull(taskToReplace) and taskToReplace.slotId == slotId"]
            - ["bool", "displayOldTask", "not isNull(oldTask) or replacementPending"]
            - ["TaskJournalTaskView", "displayingTask", "when replacementPending -> taskToReplace, displayOldTask -> (when not isNull(oldTask) -> oldTask, not isNull(taskToReplace) -> taskToReplace, task), task"]
            - ["string", "cellColorStyle", "when (displayingTask.status == eQuestStatus.Completed and not displayingTask.hasUntakenReward) -> \"white-wild-sand-50-bg\", \"\""]
            - ["string", "cellStyle", "cellColorStyle + \" button-open-sound\""]
            - ["string", "actualIcon", "str(task.iconType)"]
            - ["string", "displayingIcon", "str(displayingTask.iconType)"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/TaskJournal/Animations/ListCell.actions"
        UIEventOnDataComponent0:
            watchedDataExpression: "task.hasUntakenReward"
            ifExpression: "displayingTask.status == eQuestStatus.Completed and not displayingTask.hasUntakenReward"
            eventName: "REWARD_RECEIVED"
        Sound: {}
        StyleSheet:
            styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/ButtonSound.style.yaml;"
    bindings:
    - ["visible", "displayingTask.isAdvertisingAvailable or displayingTask.type != \"advertising\""]
    - ["input", "displayingTask.isQuestLocked and displayingTask.isLessonExist"]
    - ["classes", "cellStyle"]
    - ["UIAttachLayoutMasterComponent.attachId", "when displayingTask.isPremiumQuest -> \"TASK_JOURNAL_BONUS_QUEST\", \"TASK_JOURNAL_QUEST_\" + displayingTask.slotId"]
    children:
    -   class: "UIControl"
        name: "Bg"
        input: false
        components:
            Background:
                drawType: "DRAW_FILL"
                colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIChildComponent0:
                childType: "kControl"
                condition: "displayingTask.status == eQuestStatus.Completed and not displayingTask.hasUntakenReward and isGeneralPackLoaded"
                control: "BgParticle"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalTask.style.yaml"
        bindings:
        - ["classes", "when (displayingTask.isPremiumQuest) -> \"color-golden-quest-30-bg\", \"white-wild-sand-15-bg\""]
        children:
        -   class: "UIControl"
            name: "Blur"
            input: false
            components:
                Background:
                    usePostProcessedSprite: true
                UIPostProcessTextureComponent0:
                    materialPath: "~res:/Materials.custom/2d.Textured.Blur.material"
                    needClearAlphaAfterRender: true
                    scale: 0.500000
                    useVirtualCoordinateSystem: true
                    minFilter: "Linear"
                    magFilter: "Linear"
                UIPostProcessTextureComponent1:
                    materialPath: "~res:/Materials.custom/2d.Textured.HBlur.material"
                    scale: 0.500000
                    useVirtualCoordinateSystem: true
                    minFilter: "Linear"
                    magFilter: "Linear"
                UIPostProcessTextureComponent2:
                    materialPath: "~res:/Materials.custom/2d.Textured.UpscaleClamp.material"
                    scale: 0.500000
                    useVirtualCoordinateSystem: true
                    minFilter: "Linear"
                    magFilter: "Linear"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
    -   class: "UIControl"
        name: "Fade"
        visible: true
        input: false
        components:
            Background:
                drawType: "DRAW_STRETCH_BOTH"
                sprite: "~res:/Gfx/UI/TaskJournal/Basic/BZ_Back"
                colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
            Anchor:
                leftAnchorEnabled: true
                leftAnchor: 4.000000
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 72.000000
                verticalPolicy: "PercentOfParent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalTask.style.yaml"
        bindings:
        - ["classes", "displayingTask.group"]
    -   class: "UIControl"
        name: "IconWithGroup"
        visible: true
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfParent"
        children:
        -   class: "UIControl"
            name: "Diod"
            input: false
            components:
                Background:
                    drawType: "DRAW_FILL"
                    colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 4.000000
                    verticalPolicy: "PercentOfParent"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "displayingTask.isPremiumQuest"
                    control: "PremiumQuestAnchor"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalTask.style.yaml"
            bindings:
            - ["classes", "displayingTask.group"]
        -   class: "UIControl"
            name: "Icon"
            input: false
            components:
                UIOpacityComponent: {}
                Anchor:
                    hCenterAnchorEnabled: true
                    hCenterAnchor: 4.000000
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 60.000000
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["UIOpacityComponent.opacity", "when displayOldTask -> 1.000000, 1.000000"]
            children:
            -   class: "UIControl"
                name: "Icon"
                input: false
                components:
                    Background:
                        drawType: "DRAW_SCALE_PROPORTIONAL"
                        colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalTask.style.yaml"
                bindings:
                - ["visible", "displayingTask.iconType != 4"]
                - ["classes", "displayingIcon"]
            -   class: "UIControl"
                name: "AdIconHolder"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIChildComponent0:
                        condition: "displayingTask.iconType == 4"
                        prototypePath: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalAdvertisingIcon.yaml"
                bindings:
                - ["visible", "displayingTask.iconType == 4"]
        -   class: "UIControl"
            name: "Icon2"
            input: false
            components:
                UIOpacityComponent: {}
                Anchor:
                    hCenterAnchorEnabled: true
                    hCenterAnchor: 4.000000
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 60.000000
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["visible", "displayOldTask"]
            - ["UIOpacityComponent.opacity", "when displayOldTask -> 0.000000, 0.000000"]
            children:
            -   class: "UIControl"
                name: "Icon"
                input: false
                components:
                    Background:
                        drawType: "DRAW_SCALE_PROPORTIONAL"
                        colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalTask.style.yaml"
                bindings:
                - ["visible", "task.iconType != 4"]
                - ["classes", "actualIcon"]
            -   class: "UIControl"
                name: "AdIconHolder"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIChildComponent0:
                        condition: "task.iconType == 4"
                        prototypePath: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalAdvertisingIcon.yaml"
                bindings:
                - ["visible", "task.iconType == 4"]
    -   class: "UIControl"
        name: "Info"
        position: [76.000000, 0.000000]
        input: false
        components:
            UIOpacityComponent: {}
            Anchor:
                vCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
                padding: "14"
                spacing: 8.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfChildrenSum"
        children:
        -   class: "UIControl"
            name: "TaskDescription"
            input: false
            classes: "t-body regular color=white-wild-sand-text"
            components:
                UITextComponent:
                    colorInheritType: "COLOR_MULTIPLY_ALPHA_ONLY"
                    multiline: "MULTILINE_ENABLED"
                    align: ["LEFT", "VCENTER"]
                LinearLayout:
                    orientation: "TopDown"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["UITextComponent.text", "displayingTask.title"]
        -   class: "UIControl"
            name: "RewardContainer"
            input: false
            components:
                UIOpacityComponent: {}
                LinearLayout:
                    spacing: 8.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfMaxChild"
                UIAttachLayoutMasterComponent: {}
                UIRepeatComponent:
                    control: "~res:/UI/Screens3/Lobby/Common/Resource/ClickableCurrency.yaml"
                    dataContainer: "displayingTask.rewardsContainer"
                    args:
                        "attachId": "\"TASK_JOURNAL_SLOT_\" + displayingTask.slotId + \"_CURRENCY_\" + _item.name"
                        "resource": "_item"
                        "hideGrade": "true"
                        "currencySize": "eCurrencySize.HUGE_PROXY_BOLD"
                    eventActions:
                    - ["ON_CURRENCY_CLICKED", "ON_TASK_REWARD_CLICKED", "displayingTask.slotId, _index"]
                UIChildComponent0:
                    childType: "kControl"
                    condition: "displayingTask.isQuestLocked"
                    control: "Lock"
            bindings:
            - ["UIOpacityComponent.opacity", "when (displayingTask.status == eQuestStatus.Completed and not displayingTask.hasUntakenReward) -> 0.500000, 1.000000"]
            - ["UIAttachLayoutMasterComponent.attachId", "\"TASK_REWARDS_\" + displayingTask.slotId"]
    -   class: "UIControl"
        name: "ProgressStatus"
        input: false
        components:
            Background:
                colorInherit: "COLOR_MULTIPLY_ALPHA_ONLY"
            UIOpacityComponent: {}
            Anchor:
                vCenterAnchorEnabled: true
            LinearLayout:
                orientation: "RightToLeft"
                padding: "0.000000"
                skipInvisible: true
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfParent"
            UIChildComponent0:
                childType: "kControl"
                condition: "displayingTask.status == eQuestStatus.Completed and displayingTask.hasUntakenReward and isGeneralPackLoaded and not isChangingAnimationInProgress"
                control: "ButtonWithSpacer"
            UIChildComponent1:
                childType: "kControl"
                condition: "displayingTask.status == eQuestStatus.Completed and displayingTask.hasUntakenReward and (not isGeneralPackLoaded or isChangingAnimationInProgress)"
                control: "ButtonWithSpacerWithoutParticles"
            UIChildComponent2:
                childType: "kControl"
                condition: "displayingTask.status == eQuestStatus.Completed and not displayingTask.hasUntakenReward"
                control: "CompleteWithSpacer"
            UIChildComponent3:
                childType: "kControl"
                condition: "displayingTask.status == eQuestStatus.Active and displayingTask.isQuestLocked"
                control: "ProgressContainerForLockedQuest"
            UIChildComponent4:
                childType: "kControl"
                condition: "displayingTask.status == eQuestStatus.Active and not displayingTask.isQuestLocked"
                control: "ProgressContainerForNormalQuest"
Slots:
-   class: "UIParticles"
    name: "BgParticle"
    position: [500.000000, 52.000000]
    scale: [1.150000, 1.300000]
    pivot: [0.450000, 0.500000]
    input: false
    effectPath: "~res:/3d/FX/UI/TasJournal/FastLine.sc2"
    autoStart: false
    startDelay: 0.100000
    components:
        Anchor:
            leftAnchorEnabled: true
            leftAnchor: 0.000000
            hCenterAnchorEnabled: false
            hCenterAnchor: 0.000000
            rightAnchorEnabled: true
            topAnchorEnabled: true
            vCenterAnchorEnabled: false
            vCenterAnchor: 0.000000
            bottomAnchorEnabled: true
        StyleSheet:
            styles: "~res:/UI/Screens3/Lobby/TaskJournal/TaskJournalTask.style.yaml"
-   class: "UIControl"
    name: "Lock"
    size: [32.000000, 32.000000]
    input: false
    classes: "black-35-bg"
    components:
        Background:
            drawType: "DRAW_STRETCH_BOTH"
            sprite: "~res:/Gfx/UI/ProfileScreen/StatsBack"
            perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
            leftRightStretchCap: 5.000000
            topBottomStretchCap: 5.000000
        UIOpacityComponent: {}
        Anchor:
            leftAnchorEnabled: true
            leftAnchor: -3.000000
            rightAnchorEnabled: true
            rightAnchor: -14.000000
            topAnchorEnabled: true
            bottomAnchorEnabled: true
        IgnoreLayout: {}
        SizePolicy: {}
        StyleSheet:
            styles: "~res:/UI/Screens3/Color.style.yaml"
    children:
    -   class: "UIControl"
        name: "LockIcon"
        size: [32.000000, 32.000000]
        input: false
        components:
            Background:
                drawType: "DRAW_SCALE_PROPORTIONAL"
                sprite: "~res:/Gfx/UI/TaskJournal/Basic/icon_lock"
            Anchor:
                rightAnchorEnabled: true
                rightAnchor: -12.000000
                topAnchorEnabled: true
                topAnchor: 4.000000
                bottomAnchorEnabled: true
                bottomAnchor: 2.000000
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
        bindings:
        - ["visible", "displayingTask.isQuestLocked"]
-   class: "UIControl"
    name: "PremiumQuestAnchor"
    size: [32.000000, 32.000000]
    input: false
-   class: "UIControl"
    name: "ProgressContainerForLockedQuest"
    input: false
    components:
        Anchor:
            vCenterAnchorEnabled: true
        LinearLayout:
            enabled: true
            spacing: 12.000000
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "childrenSum + 16"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "ButtonWrapper"
        size: [32.000000, 32.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 50.000000
                verticalPolicy: "FixedSize"
                verticalValue: 50.000000
        bindings:
        - ["visible", "displayingTask.isQuestLocked and not displayingTask.isLessonExist"]
        children:
        -   prototype: "Button/Button"
            name: "Button"
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 52.000000
                UIDataParamsComponent:
                    args:
                        "inputDisabled": "isChangingAnimationInProgress"
                        "iconPath": "\"~res:/Gfx/UI/TaskJournal/Basic/icon_book\""
                        "caption": "\"BattlePass/BuyPaidBattlePass/Button\""
                        "type": "eButtonType.ALTERNATIVE"
                        "size": "eButtonSize.NORMAL"
                        "enabled": "true"
                    eventActions:
                    - ["ON_CLICK_BUTTON", "APPLY_QUEST_PRESSED", "displayingTask.slotId"]
            children:
            -   path: "TapArea/Content/CaptionWrapper"
                components:
                    Anchor:
                        leftAnchor: 0.000000
                        rightAnchor: 0.000000
                children: []
            -   path: "TapArea/Content/CaptionWrapper/Caption"
                visible: false
    -   class: "UIControl"
        name: "BodyRegular"
        input: false
        classes: "t-body regular color=white-wild-sand-text"
        components:
            UITextComponent:
                colorInheritType: "COLOR_IGNORE_PARENT"
                align: ["LEFT", "VCENTER"]
            Anchor:
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
        bindings:
        - ["UITextComponent.text", "str(displayingTask.currentProgress) + \" / \" + str(displayingTask.totalProgress)"]
-   class: "UIControl"
    name: "ProgressContainerForNormalQuest"
    input: false
    components:
        Anchor:
            vCenterAnchorEnabled: true
        LinearLayout:
            spacing: 12.000000
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "childrenSum + 16"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "LessonButton"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "displayingTask.isLessonExist and isGeneralPackLoaded"
                prototypePath: "~res:/UI/Screens3/Lobby/Common/IconButton.yaml"
                args:
                    "type": "eButtonType.OPTIONAL_LIGHT"
                    "sound": "eButtonSound.OK"
                    "image": "\"~res:/Gfx/Lobby/icons/icon_arrow_s\""
                eventActions:
                - ["ON_CLICK_BUTTON", "SHOW_LESSON", "displayingTask.slotId"]
        bindings:
        - ["visible", "displayingTask.isLessonExist and isGeneralPackLoaded"]
    -   class: "UIControl"
        name: "BodyRegular"
        input: false
        classes: "t-body regular color=white-wild-sand-text"
        components:
            UITextComponent:
                colorInheritType: "COLOR_IGNORE_PARENT"
                align: ["LEFT", "VCENTER"]
            Anchor:
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
        bindings:
        - ["UITextComponent.text", "str1000Separated(displayingTask.currentProgress) + \" / \" + str1000Separated(displayingTask.totalProgress)"]
    -   class: "UIControl"
        name: "AdvertisingState"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "replacementPending"
                prototypePath: "~res:/UI/Screens3/Common/Loaders/LoaderCircle.yaml"
            UIChildComponent1:
                condition: "advertisingAvailable"
                prototypePath: "~res:/UI/Screens3/Lobby/Common/IconButton.yaml"
                args:
                    "type": "eButtonType.OPTIONAL_LIGHT"
                    "sound": "eButtonSound.OPEN"
                    "image": "\"~res:/Gfx/Lobby/icons/icon_video_change_m\""
                eventActions:
                - ["ON_CLICK_BUTTON", "ADVERTISING_REPLACE", "displayingTask.slotId"]
        bindings:
        - ["visible", "advertisingAvailable or replacementPending"]
-   class: "UIControl"
    name: "ButtonWithSpacer"
    size: [32.000000, 32.000000]
    input: false
    components:
        Anchor:
            vCenterAnchorEnabled: true
        LinearLayout: {}
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "firstChild + 16"
            verticalPolicy: "PercentOfMaxChild"
        UIAttachLayoutMasterComponent: {}
    bindings:
    - ["UIAttachLayoutMasterComponent.attachId", "\"TASK_\" + displayingTask.slotId + \"_BUTTON\""]
    children:
    -   class: "UIControl"
        name: "ButtonHolder"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/Button.yaml"
                args:
                    "iconPath": "when displayingTask.isQuestLocked -> \"~res:/Gfx/UI/TaskJournal/Basic/icon_book\", \"\""
                    "enabled": "true"
                    "sound": "eButtonSound.OK"
                    "size": "eButtonSize.NORMAL"
                    "type": "when displayingTask.isPremiumQuest -> eButtonType.ALTERNATIVE, eButtonType.POSITIVE"
                    "caption": "\"missionJournal/getReward/button\""
                    "locked": "isButtonLocked"
                    "inputDisabled": "isChangingAnimationInProgress"
                eventActions:
                - ["ON_CLICK_BUTTON", "APPLY_QUEST_PRESSED", "displayingTask.slotId"]
        children:
        -   class: "UIParticles"
            name: "Button"
            position: [74.000000, 24.000000]
            scale: [1.105000, 0.894000]
            input: false
            effectPath: "~res:/3d/FX/UI/TasJournal/Button.sc2"
            autoStart: true
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    topAnchorEnabled: false
                    vCenterAnchorEnabled: true
                IgnoreLayout: {}
            bindings:
            - ["visible", "not isButtonLocked and isGeneralPackLoaded"]
    -   class: "UIControl"
        name: "LockedTapArea"
        size: [32.000000, 32.000000]
        components:
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIInputEventComponent:
                onTouchUpInside: "APPLY_QUEST_PRESSED"
                onTouchUpInsideData: "displayingTask.slotId"
        bindings:
        - ["visible", "isButtonLocked"]
-   class: "UIControl"
    name: "ButtonWithSpacerWithoutParticles"
    size: [32.000000, 32.000000]
    input: false
    components:
        Anchor:
            vCenterAnchorEnabled: true
        LinearLayout: {}
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "firstChild + 16"
            verticalPolicy: "PercentOfMaxChild"
        UIAttachLayoutMasterComponent: {}
    bindings:
    - ["UIAttachLayoutMasterComponent.attachId", "\"TASK_\" + displayingTask.slotId + \"_BUTTON\""]
    children:
    -   prototype: "Button/Button"
        name: "Button"
        components:
            UIDataParamsComponent:
                args:
                    "inputDisabled": "isChangingAnimationInProgress"
                    "locked": "isButtonLocked"
                    "caption": "\"missionJournal/getReward/button\""
                    "type": "when displayingTask.isPremiumQuest -> eButtonType.ALTERNATIVE, eButtonType.POSITIVE"
                    "size": "eButtonSize.NORMAL"
                    "sound": "eButtonSound.OK"
                    "enabled": "true"
                    "iconPath": "when displayingTask.isQuestLocked -> \"~res:/Gfx/UI/TaskJournal/Basic/icon_book\", \"\""
                eventActions:
                - ["ON_CLICK_BUTTON", "APPLY_QUEST_PRESSED", "displayingTask.slotId"]
    -   class: "UIControl"
        name: "LockedTapArea"
        size: [32.000000, 32.000000]
        components:
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIInputEventComponent:
                onTouchUpInside: "APPLY_QUEST_PRESSED"
                onTouchUpInsideData: "displayingTask.slotId"
        bindings:
        - ["visible", "isButtonLocked"]
-   class: "UIControl"
    name: "CompleteWithSpacer"
    input: false
    components:
        Anchor:
            vCenterAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "firstChild + 16"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "CompleteText"
        enabled: false
        input: false
        classes: "t-caps bold color=green-green-text"
        components:
            UITextComponent:
                text: "missionJournal/taskCompleted/status"
                colorInheritType: "COLOR_MULTIPLY_ALPHA_ONLY"
            SizePolicy:
                horizontalPolicy: "PercentOfContent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
