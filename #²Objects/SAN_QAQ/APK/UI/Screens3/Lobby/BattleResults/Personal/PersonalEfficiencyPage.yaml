Header:
    version: 144
Prototypes:
-   class: "UIControl"
    name: "PersonalEfficiencyPage"
    size: [927.000000, 480.000000]
    input: false
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/BattleResults/Personal/PersonalEfficiencyPage.animation"
        UIOpacityComponent:
            opacity: 0.000000
        LinearLayout:
            skipInvisible: false
        SizePolicy:
            horizontalPolicy: "FixedSize"
            verticalPolicy: "FixedSize"
        UIDataParamsComponent:
            params:
            - ["float", "contentSizeY", "0.000000", "690.000000"]
            - ["bool", "personalFirstShow", "false", "true"]
            - ["BattleResultsViewModel", "results", "null", "{ \"battleResult\" = BattleResult.WIN; \"gameplayMode\" = eGameMode.Rating; \"rating\" = { \"leagueType\" = eLeague.SILVER; \"currentRating\" = 2990; \"difference\" = -34; \"state\" = eBattleRatingState.HAS_RATING; \"calibrationBattlesLeft\" = 2; }; }"]
            events:
            - "SHOW_EXCELLENT_OFFER"
            - "ON_RIBBON_PRESSED"
            - "ON_ACHIEVEMENT_PRESSED"
        UIDataLocalVarsComponent:
            data:
            - ["bool", "hasHeroBonus", "when results.economics.withPremium -> results.economics.heroBonusXp.premium > 0 or results.economics.heroRewardCredits.premium > 0, results.economics.heroBonusXp.base > 0 or results.economics.heroRewardCredits.base > 0"]
            - ["bool", "isExcellentBattle", "results.excellentBattleInfoShow"]
            - ["bool", "excellentBattleInfoShow", "isExcellentBattle or hasHeroBonus"]
            - ["int", "medalsTopAnchor", "when contentSizeY <= 830 -> 24, contentSizeY <= 1080 -> 48, contentSizeY > 1080 -> 88, 0"]
            - ["color", "stripDecorationEndColor", "when results.battleResult == BattleResult.WIN -> hsba(205, 25, 95, 0.000000), results.battleResult == BattleResult.LOSE -> hsba(10, 70, 65, 0.000000), hsba(0, 0, 50, 0.000000)"]
            - ["color", "stripDecorationStartColor", "when results.battleResult == BattleResult.WIN -> hsba(205, 25, 95, 1.000000), results.battleResult == BattleResult.LOSE -> hsba(10, 70, 65, 1.000000), hsba(0, 0, 50, 1.000000)"]
            - ["color", "stripBgEndColor", "when results.battleResult == BattleResult.WIN -> hsba(210, 44, 70, 0.000000), results.battleResult == BattleResult.LOSE -> hsba(7, 50, 50, 0.000000), hsba(0, 0, 35, 0.000000)"]
            - ["color", "stripBgStartColor", "when results.battleResult == BattleResult.WIN -> hsba(210, 44, 70, 0.800000), results.battleResult == BattleResult.LOSE -> hsba(7, 50, 50, 0.800000), hsba(0, 0, 35, 0.800000)"]
            - ["float", "animationTime", "0.800000"]
            - ["bool", "personalFirstShowLocal", "personalFirstShow"]
            - ["bool", "isRatingBattle", "results.gameplayMode == eGameMode.Rating"]
            - ["bool", "hasMedals", "(Empty(results.medalsViewModel.leftMedals) != true) or (Empty(results.medalsViewModel.rightMedals) != true) or (Empty(results.medalsViewModel.leftRibbons) != true) or (Empty(results.medalsViewModel.rightRibbons) != true) or (Empty(results.medalsViewModel.epicMedals) != true)"]
            - ["int", "statsVDistance", "when hasMedals and isRatingBattle -> 48, isRatingBattle or (hasMedals and not isRatingBattle) -> 36, 24"]
            - ["bool", "hasInfoHolder", "(excellentBattleInfoShow or results.excellentBattleButtonShow)"]
            - ["bool", "showInfoHolder", "when personalFirstShow -> false, hasInfoHolder"]
            - ["bool", "showMedals", "false"]
            - ["ePersonalStatSize", "statsSizeType", "when contentSizeY >= 768 and not isRatingBattle -> ePersonalStatSize.big, contentSizeY < 768 and isRatingBattle -> ePersonalStatSize.small, ePersonalStatSize.medium"]
            - ["int", "hStatsSpacing", "when statsSizeType == ePersonalStatSize.small -> 16, 24"]
            - ["int", "vStatsSpacing", "when statsSizeType == ePersonalStatSize.medium -> 56, statsSizeType == ePersonalStatSize.big -> 64, 32"]
            - ["map<eVisibleStatType,StatsParam>", "statsParams", "{ eVisibleStatType.AssistDamage = { \"value\" = results.battleStats.assistDamage; \"textKey\" = \"#BattleResults:Personal/Stats/AssistDamage\"; \"icon\" = \"~res:/Gfx/Lobby/icons/icon_lamp_m\"; }; eVisibleStatType.PotentialEnemyDamage = { \"value\" = results.battleStats.potentialEnemyDamage; \"textKey\" = \"#BattleResults:Personal/Stats/PotentialEnemyDamage\"; \"icon\" = \"~res:/Gfx/Lobby/icons/icon_shield_m\"; }; eVisibleStatType.RammingDamage = { \"value\" = results.battleStats.rammingDamage; \"textKey\" = \"#BattleResults:Personal/Stats/RammingDamage\"; \"icon\" = \"~res:/Gfx/Lobby/icons/icon_ram_m\"; }; eVisibleStatType.HelpedToKill = { \"value\" = results.battleStats.helpedToKill; \"textKey\" = \"#BattleResults:Personal/Stats/HelpedToKill\"; \"icon\" = \"~res:/Gfx/Lobby/icons/icon_destroyed-tank_m\"; }; eVisibleStatType.ReceivedNoDmgHits = { \"value\" = results.battleStats.receivedNoDmgHits; \"textKey\" = \"#BattleResults:Personal/Stats/ReceivedNoDmgHits\"; \"icon\" = \"~res:/Gfx/Lobby/icons/icon_shield_m\"; }; eVisibleStatType.EnemiesSpotted = { \"value\" = results.battleStats.enemiesSpotted; \"textKey\" = \"#BattleResults:Personal/Stats/EnemiesSpotted\"; \"icon\" = \"~res:/Gfx/Lobby/icons/icon_lamp_m\"; }; eVisibleStatType.VehiclesDamaged = { \"value\" = results.battleStats.vehiclesDamaged; \"textKey\" = \"#BattleResults:Personal/Stats/VehiclesDamaged\"; \"icon\" = \"~res:/Gfx/Lobby/icons/icon_damage_m\"; }; eVisibleStatType.None = { \"value\" = 0; \"textKey\" = \"\"; \"icon\" = \"\"; }; }"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/BattleResults/Personal/PersonalEfficiencyPage.actions"
    bindings:
    - ["SizePolicy.horizontalValue", "screenWidth"]
    - ["SizePolicy.verticalValue", "contentSizeY - 160"]
    children:
    -   class: "UIControl"
        name: "MedalsWrapper"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor:
                topAnchorEnabled: true
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "FixedSize"
                verticalPolicy: "FixedSize"
                verticalValue: 88.000000
        bindings:
        - ["visible", "hasMedals"]
        - ["Anchor.topAnchor", "medalsTopAnchor"]
        - ["SizePolicy.horizontalValue", "screenWidth"]
        children:
        -   class: "UIControl"
            name: "Strip"
            size: [32.000000, 32.000000]
            input: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    horizontalValue: 100.000000
                    verticalPolicy: "FixedSize"
                    verticalValue: 104.000000
            children:
            -   class: "UIControl"
                name: "Bg"
                size: [32.000000, 32.000000]
                input: false
                components:
                    Background:
                        usePostProcessedSprite: true
                    UIPostProcessTextureComponent0:
                        materialPath: "~res:/Materials.custom/2d.Textured.Blur.material"
                        needClearAlphaAfterRender: true
                        scale: 0.500000
                        useVirtualCoordinateSystem: true
                        minFilter: "Linear"
                        magFilter: "Linear"
                    UIPostProcessTextureComponent1:
                        materialPath: "~res:/Materials.custom/2d.Textured.HBlur.material"
                        scale: 0.500000
                        useVirtualCoordinateSystem: true
                        minFilter: "Linear"
                        magFilter: "Linear"
                    UIPostProcessTextureComponent2:
                        materialPath: "~res:/Materials.custom/2d.Textured.UpscaleClamp.material"
                        scale: 0.500000
                        useVirtualCoordinateSystem: true
                        minFilter: "Linear"
                        magFilter: "Linear"
                    UIRoundedCornersComponent:
                        radius: "8"
                    Update:
                        updateInvisible: true
                    UIOpacityComponent:
                        opacity: 1.000000
                    Anchor:
                        hCenterAnchorEnabled: true
                    LinearLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "FixedSize"
                        verticalValue: 104.000000
                children:
                -   class: "UIControl"
                    name: "Left"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                        UIGradientComponent:
                            orientation: "RightToLeft"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    bindings:
                    - ["UIGradientComponent.startColor", "stripBgStartColor"]
                    - ["UIGradientComponent.finishColor", "stripBgEndColor"]
                -   class: "UIControl"
                    name: "Right"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                        UIGradientComponent:
                            orientation: "LeftToRight"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    bindings:
                    - ["UIGradientComponent.startColor", "stripBgStartColor"]
                    - ["UIGradientComponent.finishColor", "stripBgEndColor"]
            -   class: "UIControl"
                name: "Center"
                position: [308.000000, 437.000000]
                size: [409.600006, 83.199997]
                pivot: [0.500000, 1.000000]
                input: false
                components:
                    Background:
                        drawType: "DRAW_SCALE_TO_RECT"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_radial-half_horizontal"
                    UIOpacityComponent:
                        opacity: 0.350000
                    Anchor:
                        hCenterAnchorEnabled: true
                        bottomAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        horizontalValue: 40.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 80.000000
                bindings:
                - ["Background.color", "when results.battleResult == BattleResult.WIN -> hsb(188, 50, 100), results.battleResult == BattleResult.LOSE -> hsb(17, 80, 70), hsb(0, 0, 55)"]
            -   class: "UIControl"
                name: "DecorationTop"
                size: [32.000000, 32.000000]
                input: false
                components:
                    UIOpacityComponent:
                        opacity: 0.300000
                    Anchor:
                        hCenterAnchorEnabled: true
                        topAnchorEnabled: true
                    LinearLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "FixedSize"
                        verticalValue: 2.000000
                children:
                -   class: "UIControl"
                    name: "Left"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                        UIGradientComponent:
                            orientation: "RightToLeft"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    bindings:
                    - ["UIGradientComponent.startColor", "stripDecorationStartColor"]
                    - ["UIGradientComponent.finishColor", "stripDecorationEndColor"]
                -   class: "UIControl"
                    name: "Right"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                        UIGradientComponent:
                            orientation: "LeftToRight"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    bindings:
                    - ["UIGradientComponent.startColor", "stripDecorationStartColor"]
                    - ["UIGradientComponent.finishColor", "stripDecorationEndColor"]
            -   class: "UIControl"
                name: "DecorationBottom"
                size: [32.000000, 32.000000]
                input: false
                components:
                    UIOpacityComponent:
                        opacity: 0.700000
                    Anchor:
                        hCenterAnchorEnabled: true
                        bottomAnchorEnabled: true
                    LinearLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "FixedSize"
                        verticalValue: 2.000000
                children:
                -   class: "UIControl"
                    name: "Left"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                        UIGradientComponent:
                            orientation: "RightToLeft"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    bindings:
                    - ["UIGradientComponent.startColor", "stripDecorationStartColor"]
                    - ["UIGradientComponent.finishColor", "stripDecorationEndColor"]
                -   class: "UIControl"
                    name: "Right"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                        UIGradientComponent:
                            orientation: "LeftToRight"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    bindings:
                    - ["UIGradientComponent.startColor", "stripDecorationStartColor"]
                    - ["UIGradientComponent.finishColor", "stripDecorationEndColor"]
                -   class: "UIControl"
                    name: "Center"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        UIOpacityComponent:
                            opacity: 0.600000
                        Anchor:
                            hCenterAnchorEnabled: true
                        LinearLayout: {}
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            horizontalValue: 40.000000
                            verticalPolicy: "PercentOfParent"
                    children:
                    -   class: "UIControl"
                        name: "Left"
                        size: [32.000000, 32.000000]
                        input: false
                        components:
                            Background:
                                drawType: "DRAW_FILL"
                            UIGradientComponent:
                                startColor: [1.000000, 1.000000, 1.000000, 1.000000]
                                finishColor: [1.000000, 1.000000, 1.000000, 0.000000]
                                orientation: "RightToLeft"
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfParent"
                    -   class: "UIControl"
                        name: "Right"
                        size: [32.000000, 32.000000]
                        input: false
                        components:
                            Background:
                                drawType: "DRAW_FILL"
                            UIGradientComponent:
                                startColor: [1.000000, 1.000000, 1.000000, 1.000000]
                                finishColor: [1.000000, 1.000000, 1.000000, 0.000000]
                                orientation: "LeftToRight"
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfParent"
        -   class: "UIControl"
            name: "Medals"
            size: [32.000000, 32.000000]
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    verticalPolicy: "FixedSize"
                    verticalValue: 88.000000
                UIChildComponent0:
                    condition: "hasMedals"
                    prototypePath: "~res:/UI/Screens3/Lobby/BattleResults/Personal/AnimatedMedalContainer.yaml"
                    args:
                        "showMedals": "showMedals"
                        "animationTime": "animationTime"
                        "isFirstShow": "personalFirstShow"
                        "data": "results.medalsViewModel"
                        "width": "screenWidth"
                    eventActions:
                    - ["ON_ACHIEVEMENT_PRESSED", "ON_ACHIEVEMENT_PRESSED", "_event"]
                    - ["ON_RIBBON_PRESSED", "ON_RIBBON_PRESSED", "_event"]
            bindings:
            - ["SizePolicy.horizontalValue", "screenWidth"]
    -   class: "UIControl"
        name: "ContentWrapper"
        size: [32.000000, 32.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        children:
        -   class: "UIControl"
            name: "Stats"
            size: [32.000000, 32.000000]
            input: false
            components:
                Background:
                    usePostProcessedSprite: true
                UIPostProcessTextureComponent0:
                    materialPath: "~res:/Materials.custom/2d.Textured.Blur.material"
                    needClearAlphaAfterRender: true
                    scale: 0.500000
                    useVirtualCoordinateSystem: true
                    minFilter: "Linear"
                    magFilter: "Linear"
                UIPostProcessTextureComponent1:
                    materialPath: "~res:/Materials.custom/2d.Textured.HBlur.material"
                    scale: 0.500000
                    useVirtualCoordinateSystem: true
                    minFilter: "Linear"
                    magFilter: "Linear"
                UIPostProcessTextureComponent2:
                    materialPath: "~res:/Materials.custom/2d.Textured.UpscaleClamp.material"
                    scale: 0.500000
                    useVirtualCoordinateSystem: true
                    minFilter: "Linear"
                    magFilter: "Linear"
                UIRoundedCornersComponent:
                    radius: "8"
                Update:
                    updateInvisible: true
                Anchor:
                    rightAnchorEnabled: true
                    vCenterAnchorEnabled: true
                LinearLayout:
                    orientation: "TopDown"
                    skipInvisible: false
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "min(parent, 616)"
                    verticalPolicy: "PercentOfChildrenSum"
            bindings:
            - ["Anchor.vCenterAnchor", "statsVDistance"]
            - ["LinearLayout.spacing", "when isRatingBattle -> (when results.rating.leagueType == 4 -> 8, 32), 0"]
            children:
            -   class: "UIControl"
                name: "RatingHolder"
                position: [32.000000, 0.000000]
                size: [32.000000, 32.000000]
                input: false
                components:
                    UIOpacityComponent: {}
                    Anchor:
                        leftAnchorEnabled: true
                    SizePolicy:
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        condition: "isRatingBattle"
                        prototypePath: "~res:/UI/Screens3/Lobby/BattleResults/Personal/RatingStat.yaml"
                        args:
                            "baseTimeAnimation": "animationTime"
                            "rating": "results.rating"
                            "isFirstShow": "personalFirstShowLocal"
                            "isBigSize": "screenWidth > 1168"
                        eventActions:
                        - ["END_RATING_ANIMATION", "END_RATING_ANIMATION", ""]
                bindings:
                - ["visible", "isRatingBattle"]
                - ["UIOpacityComponent.opacity", "when personalFirstShowLocal -> 0, 1"]
                - ["Anchor.leftAnchor", "when screenWidth > 1168 -> 32, 0"]
            -   class: "UIControl"
                name: "StatsWrapper"
                size: [32.000000, 32.000000]
                input: false
                components:
                    Anchor:
                        leftAnchorEnabled: true
                    LinearLayout:
                        orientation: "LeftToRight"
                        skipInvisible: false
                    SizePolicy:
                        verticalPolicy: "PercentOfFirstChild"
                bindings:
                - ["Anchor.leftAnchor", "when screenWidth > 1168 -> 80, 48"]
                - ["LinearLayout.spacing", "hStatsSpacing"]
                children:
                -   class: "UIControl"
                    name: "Left"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        LinearLayout:
                            orientation: "TopDown"
                        SizePolicy:
                            horizontalPolicy: "PercentOfMaxChild"
                            verticalPolicy: "PercentOfChildrenSum"
                    bindings:
                    - ["LinearLayout.spacing", "vStatsSpacing"]
                    children:
                    -   class: "UIControl"
                        name: "DamageDealt"
                        size: [32.000000, 32.000000]
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfFirstChild"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                prototypePath: "~res:/UI/Screens3/Lobby/BattleResults/Personal/PersonalStat.yaml"
                                args:
                                    "isTheLastOne": "results.battleStats.vehiclesDestroyed == 0 and statsParams[results.battleResultsStatsViewModel.visibleParamFirst].value == 0 and statsParams[results.battleResultsStatsViewModel.visibleParamSecond].value == 0"
                                    "isFirstShow": "personalFirstShowLocal"
                                    "animationIndex": "0"
                                    "value": "results.battleStats.damageDealt"
                                    "icon": "\"~res:/Gfx/Lobby/icons/icon_damage_m\""
                                    "sizeType": "statsSizeType"
                                    "labelText": "\"#BattleResults:Personal/Stats/Damage\""
                    -   class: "UIControl"
                        name: "VehiclesDestroyed"
                        size: [32.000000, 32.000000]
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfFirstChild"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                prototypePath: "~res:/UI/Screens3/Lobby/BattleResults/Personal/PersonalStat.yaml"
                                args:
                                    "isTheLastOne": "statsParams[results.battleResultsStatsViewModel.visibleParamFirst].value == 0 and statsParams[results.battleResultsStatsViewModel.visibleParamSecond].value == 0"
                                    "isFirstShow": "personalFirstShowLocal"
                                    "animationIndex": "1"
                                    "value": "results.battleStats.vehiclesDestroyed"
                                    "icon": "\"~res:/Gfx/Lobby/icons/icon_destroyed-tank_m\""
                                    "sizeType": "statsSizeType"
                                    "labelText": "\"#BattleResults:Personal/Stats/Destroyed\""
                -   class: "UIControl"
                    name: "Right"
                    size: [32.000000, 32.000000]
                    input: false
                    components:
                        LinearLayout:
                            orientation: "TopDown"
                        SizePolicy:
                            horizontalPolicy: "PercentOfMaxChild"
                            verticalPolicy: "PercentOfChildrenSum"
                    bindings:
                    - ["LinearLayout.spacing", "vStatsSpacing"]
                    children:
                    -   class: "UIControl"
                        name: "VisibleParamFirst"
                        size: [32.000000, 32.000000]
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfFirstChild"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                condition: "statsParams[results.battleResultsStatsViewModel.visibleParamFirst].value != 0"
                                prototypePath: "~res:/UI/Screens3/Lobby/BattleResults/Personal/PersonalStat.yaml"
                                args:
                                    "isTheLastOne": "statsParams[results.battleResultsStatsViewModel.visibleParamSecond].value == 0"
                                    "isFirstShow": "personalFirstShowLocal"
                                    "animationIndex": "2"
                                    "value": "statsParams[results.battleResultsStatsViewModel.visibleParamFirst].value"
                                    "icon": "statsParams[results.battleResultsStatsViewModel.visibleParamFirst].icon"
                                    "sizeType": "statsSizeType"
                                    "labelText": "localize(statsParams[results.battleResultsStatsViewModel.visibleParamFirst].textKey)"
                    -   class: "UIControl"
                        name: "VisibleParamSecond"
                        size: [32.000000, 32.000000]
                        input: false
                        components:
                            SizePolicy:
                                horizontalPolicy: "PercentOfFirstChild"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                condition: "statsParams[results.battleResultsStatsViewModel.visibleParamSecond].value != 0"
                                prototypePath: "~res:/UI/Screens3/Lobby/BattleResults/Personal/PersonalStat.yaml"
                                args:
                                    "isTheLastOne": "true"
                                    "isFirstShow": "personalFirstShowLocal"
                                    "animationIndex": "3"
                                    "value": "statsParams[results.battleResultsStatsViewModel.visibleParamSecond].value"
                                    "icon": "statsParams[results.battleResultsStatsViewModel.visibleParamSecond].icon"
                                    "sizeType": "statsSizeType"
                                    "labelText": "localize(statsParams[results.battleResultsStatsViewModel.visibleParamSecond].textKey)"
                                eventActions:
                                - ["END_STATS_ANIMATION", "END_STATS_ANIMATION", "_event"]
    -   class: "UIControl"
        name: "InfoBlock"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor:
                topAnchorEnabled: true
                bottomAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
        bindings:
        - ["Anchor.topAnchor", "medalsTopAnchor + 96"]
        children:
        -   class: "UIControl"
            name: "InfoWrapper"
            size: [32.000000, 32.000000]
            input: false
            components:
                Anchor:
                    bottomAnchorEnabled: true
                LinearLayout:
                    orientation: "TopDown"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                    verticalFormula: "min(parent, screenWidth*0.35)"
            children:
            -   class: "UIControl"
                name: "Spacer"
                size: [32.000000, 32.000000]
                input: false
                components:
                    SizePolicy:
                        verticalPolicy: "FixedSize"
                bindings:
                - ["SizePolicy.verticalValue", "when contentSizeY < 800 -> contentSizeY * 0.030000, contentSizeY * 0.100000"]
            -   class: "UIControl"
                name: "InfoHolder"
                position: [110.000000, 101.000000]
                size: [32.000000, 32.000000]
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                        vCenterAnchor: 0.000000
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 260.000000
                    UIChildComponent0:
                        condition: "showInfoHolder"
                        prototypePath: "~res:/UI/Screens3/Lobby/BattleResults/Personal/PersonalInfo.yaml"
                        args:
                            "showExcellentButton": "results.excellentBattleButtonShow"
                            "isFirstShow": "personalFirstShowLocal"
                            "xpValue": "when results.economics.withPremium -> results.economics.heroBonusXp.premium, results.economics.heroBonusXp.base"
                            "creditsValue": "when results.economics.withPremium -> results.economics.heroRewardCredits.premium, results.economics.heroRewardCredits.base"
                            "result": "results.battleResult"
                        eventActions:
                        - ["SHOW_EXCELLENT_OFFER", "SHOW_EXCELLENT_OFFER", ""]
                        - ["END_INFO_ANIMATION", "END_INFO_ANIMATION", ""]
                bindings:
                - ["visible", "showInfoHolder"]
                - ["Anchor.hCenterAnchor", "screenWidth * 0.060000"]
