Header:
    version: 150
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/IconButtonNoBlur.yaml"
Prototypes:
-   class: "UIControl"
    name: "Showcase"
    size: [1024.000000, 768.000000]
    input: false
    components:
        UIAnimationComponent:
            animations: "BACK_EVENT,~res:/UI/Screens3/Lobby/Showcase/BackEvent.animation"
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        UILayoutEventComponent:
            sizeChangedEvent: "SHOWCASE_SIZE_CHANGED"
            sizeChangedEventData: "_absoluteRect"
        ModalInput: {}
        UIVirtualActionEventComponent0:
            virtualKeyAction: "Options"
            keyDownEvent: "GO_TO_SHOP"
        UIVirtualActionEventComponent1:
            virtualKeyAction: "Escape"
            keyDownEvent: "CAPTURED_BACK_EVENT"
        UIVirtualActionEventComponent2:
            virtualKeyAction: "Extra2"
            keyDownEvent: "ACTION_Y"
        UIShortcutEventComponent:
            shortcuts: "CAPTURED_BACK_EVENT, Escape; CAPTURED_BACK_EVENT, Back;"
        UIDataParamsComponent:
            params:
            - ["SessionDataModel", "session", "null", "{ }"]
            - ["ShowcaseModel", "showcaseModel", "null", "{ \"state\" = eShowcaseState.kPreview; }"]
            - ["AppDataModel", "app", "null", "{ }"]
            - ["TankParams", "tankParams", "null", "{ }"]
            - ["AccountDataModel", "account", "null", "{ }"]
            - ["LobbyDataModel", "lobby", "null", "{ }"]
            - ["TanksPanelViewModel", "tanksPanel", "null", "{ }"]
        UIDataLocalVarsComponent:
            data:
            - ["bool", "enableBlur", "false"]
            - ["bool", "captureInput", "false"]
        UIDataLocalBindingsComponent:
            data:
            - ["eCurrentScreen", "currentScreen", "when showcaseModel.state == eShowcaseState.kPreview -> eCurrentScreen.kShowcase, eCurrentScreen.kHangar"]
            - ["StuffResource", "stuff", "showcaseModel.previewModel.resource.stuff"]
            - ["UnlockItemResource", "unlock", "when not isNull(stuff) and not isNull(stuff.coupon) and not stuff.coupon.appliesToUnlocks.Empty() -> stuff.coupon.appliesToUnlocks[0], showcaseModel.previewModel.resource.unlock"]
            - ["bool", "isTanksPanelExists", "not isNull(tanksPanel) and tanksPanel.size > 1"]
            - ["bool", "isCamoUnlock", "not isNull(stuff) and stuff.type == ArtefactType.camo_unlock"]
            - ["bool", "isCamoPreview", "(showcaseModel.previewModel.previewType == ePreviewType.CamoWithPanel or showcaseModel.previewModel.previewType == ePreviewType.UnlockableCamo or showcaseModel.previewModel.previewType == ePreviewType.BuyCamo) and (not isNull(unlock) or isCamoUnlock)"]
            - ["bool", "canBeFullscreened", "(showcaseModel.state == eShowcaseState.kPreview and not isTanksPanelExists) or showcaseModel.state == eShowcaseState.kBuy"]
            - ["bool", "hasTrademark", "when showcaseModel.state == eShowcaseState.kBuy -> showcaseModel.buyTankModel.hasTrademark, showcaseModel.state == eShowcaseState.kPreview -> showcaseModel.previewModel.hasTrademark, showcaseModel.state == eShowcaseState.kFanfares -> showcaseModel.fanfaresModel.hasTrademark, false"]
            - ["bool", "tankInfoVisible", "showcaseModel.state != eShowcaseState.kTrain and (showcaseModel.state != eShowcaseState.kPreview or not isCamoPreview)"]
            - ["bool", "backButtonVisible", "showcaseModel.state != eShowcaseState.kTrain"]
            - ["bool", "DLCDownloadButtonVisible", "app.sDlc.state != SmartDLCState.kDone"]
            - ["bool", "DLCDownloadErrorVisible", "app.sDlc.state == SmartDLCState.kError"]
            - ["bool", "isValidResource", "not isNull(showcaseModel.previewModel.resource.unlock) or (not isNull(showcaseModel.previewModel.resource.stuff) and (showcaseModel.previewModel.resource.stuff.type == ArtefactType.coupon or stuff.type == ArtefactType.camo_unlock))"]
            - ["string", "yButtonText", "when showcaseModel.state == eShowcaseState.kFanfares -> \"#hangar_showcase:ToTankButton\", showcaseModel.state == eShowcaseState.kBuy -> \"#hangar_showcase:PurchaseButton\", \"\""]
            - ["string", "camoInfoTankLevels", "when not isNull(stuff) and not isNull(stuff.coupon) and stuff.coupon.appliesToLevels.Size() > 0 -> localize(\"storage/Items/CamouflageCertificate/Features\", { \"coupon.levels\" = join(stuff.coupon.appliesToLevels, localize(\"#common:Symbol/CommaWithWhitespace\"), 100); }), \"\""]
            - ["string", "resourceInfoType", "when not isNull(unlock) -> (when not isNull(stuff) -> (when unlock.kind == eCamouflageKind.CUSTOM_SET -> localize(\"#hangar_showcase:CustomSetCertificate/Title\"), localize(\"#hangar_showcase:CamouflageCertificate/Title\")), (when unlock.kind == eCamouflageKind.CUSTOM_SET -> localize(\"#hangar_showcase:CustomSet/Title\"), localize(\"#hangar_showcase:Camouflage/Title\"))), \"\""]
            - ["string", "resourceInfoTitle", "when not isNull(unlock) -> unlock.title, when isCamoUnlock -> stuff.title, \"\""]
            - ["string", "resourceInfoDescription", "when not empty(camoInfoTankLevels) -> camoInfoTankLevels, when isCamoUnlock -> stuff.description, \"\""]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Showcase/Showcase.actions"
        UIDataOnEventComponent0:
            eventName: "CAPTURE_INPUT"
            modelFieldExpression: "captureInput"
            dataExpression: "_event"
        UIDataOnEventComponent1:
            eventName: "ENABLE_BLUR"
            modelFieldExpression: "enableBlur"
            dataExpression: "_event"
    children:
    -   class: "UI3DView"
        customClass: "UIHangar3dView"
        name: "HangarScene"
        components:
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
    -   class: "UIControl"
        name: "Content"
        input: false
        components:
            UITextComponent: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        children:
        -   class: "UIControl"
            name: "MainContent"
            input: false
            components:
                LinearLayout:
                    orientation: "TopDown"
                    skipInvisible: false
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIControl"
                name: "HeaderWrapper"
                input: false
                components:
                    UIOpacityComponent: {}
                    LinearLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfMaxChild"
                children:
                -   class: "UIControl"
                    name: "Background"
                    input: false
                    components:
                        Anchor:
                            hCenterAnchorEnabled: false
                            rightAnchorEnabled: true
                            topAnchorEnabled: true
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            horizontalFormula: "parent + 88 + safeAreaInsets.left"
                            verticalPolicy: "PercentOfMaxChild"
                    bindings:
                    - ["visible", "showcaseModel.state != eShowcaseState.kTrain"]
                    children:
                    -   class: "UIControl"
                        name: "TopLinearGradient"
                        position: [36.000000, 0.000000]
                        input: false
                        classes: "black-70-bg"
                        components:
                            Background:
                                drawType: "DRAW_SCALE_TO_RECT"
                                sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_vertical_0-100"
                                spriteModification: ["FLIP_VERTICAL"]
                            Anchor:
                                hCenterAnchorEnabled: true
                                topAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "FixedSize"
                                verticalValue: 384.000000
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Color.style.yaml"
                    -   class: "UIControl"
                        name: "LeftRadialGradient"
                        input: false
                        classes: "black-35-bg"
                        components:
                            Background:
                                drawType: "DRAW_SCALE_TO_RECT"
                                sprite: "~res:/Gfx/Lobby/backgrounds/bg_radial-gradient_quarter"
                            Anchor:
                                leftAnchorEnabled: true
                                topAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "FixedSize"
                                horizontalValue: 384.000000
                                verticalPolicy: "FixedSize"
                                verticalValue: 384.000000
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Color.style.yaml"
                -   class: "UIControl"
                    name: "Header"
                    input: false
                    components:
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfFirstChild"
                        UIChildComponent0:
                            childType: "kPrototype"
                            prototypePath: "~res:/UI/Screens3/Lobby/Common/Headers/HangarHeader.yaml"
                            args:
                                "isBackButtonHasSounds": "false"
                                "session": "session"
                                "lobby": "lobby"
                                "playerName": "session.playerName"
                                "clanTag": "when not isNull(session.clanInfo.clan) -> session.clanInfo.clan.tag, \"\""
                                "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                                "isTutorialActive": "account.tutorialData.isTutorialActive"
                                "firstLessonCompleted": "account.tutorialData.currentLesson > eTutorialLesson.kTurretUnlock"
                                "showBackButton": "backButtonVisible"
                                "isFullScreen": "true"
                            eventActions:
                            - ["GO_TO_SHOP", "GO_TO_SHOP", ""]
                            - ["SHOP_BUTTON", "SHOP_BUTTON", "_event.requiredResource"]
                            - ["BACK_EVENT", "BACK_EVENT", ""]
                            - ["SHOW_ACHIEVEMENTS", "SHOW_ACHIEVEMENTS", ""]
                            - ["PREMIUM_INFO_EVENT", "PREMIUM_INFO_EVENT", ""]
            -   class: "UIControl"
                name: "MainControls"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIChildComponent0:
                        condition: "showcaseModel.state == eShowcaseState.kBuy"
                        prototypePath: "~res:/UI/Screens3/Lobby/Showcase/ShowcaseTypes/TankPurchase.yaml"
                        args:
                            "tankParams": "tankParams"
                            "session": "session"
                            "buyTankModel": "showcaseModel.buyTankModel"
                            "app": "app"
                            "account": "account"
                        eventActions:
                        - ["SHOW_MECHANIC_INFO", "SHOW_MECHANIC_INFO", "_event"]
                        - ["PURCHASE", "PURCHASE", ""]
                        - ["ON_FULLSCREEN_CHANGED", "ShowcaseFullscreen", "_event"]
                    UIChildComponent1:
                        condition: "showcaseModel.state == eShowcaseState.kTrain"
                        prototypePath: "~res:/UI/Screens3/Lobby/Showcase/ShowcaseTypes/CrewTraining.yaml"
                        args:
                            "crewTrainingModel": "showcaseModel.crewTrainingModel"
                            "session": "session"
                        eventActions:
                        - ["TRAIN", "TRAIN", "_event"]
                    UIChildComponent2:
                        condition: "showcaseModel.state == eShowcaseState.kFanfares"
                        prototypePath: "~res:/UI/Screens3/Lobby/Showcase/ShowcaseTypes/ShowcaseFanfares.yaml"
                        args:
                            "fanfaresModel": "showcaseModel.fanfaresModel"
                            "session": "session"
                            "account": "account"
                        eventActions:
                        - ["TO_HANGAR", "TO_HANGAR", ""]
                        - ["TO_TOP", "TO_TOP", "_event"]
                    UIChildComponent3:
                        condition: "showcaseModel.state == eShowcaseState.kPreview"
                        prototypePath: "~res:/UI/Screens3/Lobby/Showcase/ShowcaseTypes/TankPreview.yaml"
                        args:
                            "rankConfig": "session.rankConfig"
                            "isTanksPanelExists": "isTanksPanelExists"
                            "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                            "previewModel": "showcaseModel.previewModel"
                            "account": "account"
                            "lobby": "lobby"
                            "tanksPanel": "tanksPanel"
                            "tankParams": "tankParams"
                        eventActions:
                        - ["SHOW_MECHANIC_INFO", "SHOW_MECHANIC_INFO", "_event"]
                        - ["PREVIEW_SIZE_CHANGED", "PREVIEW_SIZE_CHANGED", "_event"]
                        - ["PREVIEW_PARAMS_SIZE_CHANGED", "PREVIEW_PARAMS_SIZE_CHANGED", "_event"]
                        - ["ON_FULLSCREEN_CHANGED", "ShowcaseFullscreen", "_event"]
                        - ["PREVIEW_STUFF_USE", "PREVIEW_STUFF_USE", "_event"]
            -   class: "UIControl"
                name: "Spacer"
                size: [32.000000, 32.000000]
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "FixedSize"
                bindings:
                - ["SizePolicy.verticalValue", "when isTanksPanelExists and showcaseModel.previewModel.previewType == ePreviewType.CamoWithPanel -> 120, 0"]
        -   class: "UIControl"
            name: "LeftPartWrapper"
            input: false
            components:
                Anchor:
                    leftAnchorEnabled: true
                    leftAnchor: 50.000000
                    topAnchorEnabled: true
                    topAnchor: 100.000000
                LinearLayout:
                    orientation: "TopDown"
                    spacing: 32.000000
                    skipInvisible: false
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfChildrenSum"
            children:
            -   class: "UIControl"
                name: "InfoWrapper"
                input: false
                components:
                    UIOpacityComponent: {}
                    Anchor:
                        leftAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIAnchorSafeAreaComponent:
                        leftSafeInset: "INSET"
                    UIChildComponent0:
                        condition: "tankInfoVisible"
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/TankInfo/TankInfo.yaml"
                        args:
                            "tank": "showcaseModel.info"
                    UIChildComponent1:
                        childType: "kControl"
                        condition: "not tankInfoVisible and isValidResource"
                        control: "ResourceInfo"
            -   prototype: "IconButtonNoBlur/IconButton"
                name: "IconButton"
                components:
                    SizePolicy: {}
                    UIDataParamsComponent:
                        args:
                            "visible": "canBeFullscreened"
                            "image": "\"~res:/Gfx/Lobby/icons/icon_eye_s\""
                            "type": "eButtonType.OPTIONAL_DARK"
                            "sound": "eButtonSound.CHOOSE"
                            "enabled": "true"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "FULLSCREEN", ""]
                bindings:
                - ["SizePolicy.horizontalValue", "buttonSize"]
                - ["SizePolicy.verticalValue", "buttonSize"]
                children:
                -   path: "TapArea/Content/Icon"
                    components:
                        Background:
                            drawType: "DRAW_ALIGNED"
        -   class: "UIControl"
            name: "DLCDownloadButtonHolder"
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                    rightAnchor: 100.000000
                    vCenterAnchorEnabled: true
                    vCenterAnchor: 100.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildAnimatedSwitchingComponent:
                    switchPolicy: "kAfterRemovingAnimation"
                    keepUpdateBindings: true
                UIChildComponent0:
                    condition: "DLCDownloadButtonVisible"
                    prototypePath: "~res:/UI/Screens3/Lobby/SmartDLC/DLCDownloadProgress.yaml"
                    args:
                        "model": "app.sDlc"
                    eventActions:
                    - ["SHOW_SMART_DLC_SCREEN", "SHOW_SMART_DLC_SCREEN", ""]
        -   class: "UIControl"
            name: "DLCDownloadErrorHolder"
            input: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                    vCenterAnchor: -250.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildAnimatedSwitchingComponent:
                    switchPolicy: "kAfterRemovingAnimation"
                    keepUpdateBindings: false
                UIChildComponent0:
                    condition: "DLCDownloadErrorVisible"
                    prototypePath: "~res:/UI/Screens3/Lobby/SmartDLC/DLCDownloadError.yaml"
                    args:
                        "errorDescription": "app.sDlc.errorMessage"
                    eventActions:
                    - ["SHOW_SMART_DLC_SCREEN", "SHOW_SMART_DLC_SCREEN", ""]
        -   class: "UIControl"
            name: "FadedBlur"
            components:
                UIOpacityComponent:
                    opacity: 0.000000
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UIInputEventComponent:
                    onTouchUpInside: "SwitchFilterAnimation"
                    onTouchUpInsideData: "false"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Common/OverlayBlur.yaml"
                StyleSheet: {}
            bindings:
            - ["visible", "enableBlur"]
            - ["input", "captureInput"]
        -   class: "UIControl"
            name: "TanksPanelHolder"
            input: false
            components:
                Anchor:
                    leftAnchorEnabled: true
                    rightAnchorEnabled: true
                    bottomAnchorEnabled: true
                UIChildComponent0:
                    condition: "isTanksPanelExists"
                    prototypePath: "~res:/UI/Screens3/Lobby/Hangar/TanksPanel/TanksPanel.yaml"
                    args:
                        "showSlot": "false"
                        "isGeneralPackLoaded": "true"
                        "filter": "tanksPanel.filter"
                        "selectedVehicle": "tanksPanel.selectedVehicle"
                        "tanks": "tanksPanel.tanks"
                        "resources": "lobby.battleResources"
                        "isFullscreen": "true"
                        "showBonus": "false"
                        "serverTime": "session.serverTime"
                        "ranksConfig": "session.rankConfig"
                    eventActions:
                    - ["RESET_FILTER", "RESET_FILTER", ""]
                    - ["SWITCH_LEVEL_FILTER", "SWITCH_LEVEL_FILTER", "_event"]
                    - ["SWITCH_CLASS_FILTER", "SWITCH_CLASS_FILTER", "_event"]
                    - ["SWITCH_NATION_FILTER", "SWITCH_NATION_FILTER", "_event"]
                    - ["SWITCH_FAVORITE_FILTER", "SWITCH_FAVORITE_FILTER", ""]
                    - ["SWITCH_CERIFICATE_BONUS_FILTER", "SWITCH_CERIFICATE_BONUS_FILTER", ""]
                    - ["SWITCH_NON_ELITE_FILTER", "SWITCH_NON_ELITE_FILTER", ""]
                    - ["SWITCH_ELITE_FILTER", "SWITCH_ELITE_FILTER", ""]
                    - ["SWITCH_RESEARCHABLE_FILTER", "SWITCH_RESEARCHABLE_FILTER", ""]
                    - ["SWITCH_PREMIUM_FILTER", "SWITCH_PREMIUM_FILTER", ""]
                    - ["SWITCH_COLLECTIBLE_FILTER", "SWITCH_COLLECTIBLE_FILTER", ""]
                    - ["SWITCH_TANK_FAVORITE", "SWITCH_TANK_FAVORITE", "_event"]
                    - ["SELECT_PLAYER_TANK", "SELECT_PLAYER_TANK", "_event"]
                    - ["SWITCH_FILTER", "SwitchFilterAnimation", "_event.show"]
                    - ["FILTER_ANIMATION_FINISHED", "FILTER_ANIMATION_FINISHED", ""]
            bindings:
            - ["visible", "isTanksPanelExists"]
        -   class: "UIControl"
            name: "TankTrademarkPopover"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfFirstChild"
                    verticalPolicy: "PercentOfFirstChild"
                UIAttachLayoutSlaveComponent:
                    attachId: "SHOWCASE_FOOTER"
                    masterAlign: "TopCenter"
                    slaveAlign: "BottomCenter"
                    additionalOffset: [0.000000, -16.000000]
                UIChildComponent0:
                    condition: "hasTrademark"
                    prototypePath: "~res:/UI/Screens3/Lobby/Showcase/ShowcaseTypes/TankTrademarkPopover.yaml"
                    args:
                        "visible": "hasTrademark"
                    eventActions:
                    - ["ON_POPOVER_BUTTON_CLICKED", "ON_POPOVER_BUTTON_CLICKED", ""]
    -   class: "UIControl"
        name: "NavigationPanel"
        size: [32.000000, 32.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "not account.tutorialData.isTutorialActive and isGamepad and showcaseModel.state != eShowcaseState.kTrain"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "NavigationPanelContent"
            UIChildComponent1:
                childType: "kPrototype"
                condition: "account.tutorialData.isTutorialActive and isGamepad"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "TutorialModulesPanel"
Slots:
-   class: "UIControl"
    name: "ResourceInfo"
    input: false
    components:
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 650.000000
            verticalPolicy: "PercentOfChildrenSum"
    children:
    -   class: "UIControl"
        name: "Type"
        input: false
        classes: "t-overline bold white-wild-sand-text"
        components:
            UITextComponent:
                align: ["LEFT", "VCENTER"]
            Anchor:
                vCenterAnchorEnabled: true
                vCenterAnchor: 2.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["UITextComponent.text", "resourceInfoType"]
    -   class: "UIControl"
        name: "Title"
        input: false
        classes: "t-content-h2 bold white-wild-sand-text"
        components:
            UITextComponent:
                multiline: "MULTILINE_ENABLED"
                align: ["LEFT", "VCENTER"]
            Anchor:
                vCenterAnchorEnabled: true
                vCenterAnchor: 2.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["UITextComponent.text", "localize(resourceInfoTitle)"]
    -   class: "UIControl"
        name: "Description"
        input: false
        classes: "t-subtitle regular white-wild-sand-text"
        components:
            RichContent:
                baseClasses: "t-subtitle regular color=white-wild-sand-70-text"
            RichContentAliases0:
                aliases:
                - ["text_white_bold", "<span class=\"t-subtitle bold color=white-wild-sand-text\" />"]
                - ["text2_white_bold", "<span class=\"t-subtitle bold color=white-wild-sand-text\" />"]
            Anchor:
                vCenterAnchorEnabled: true
                vCenterAnchor: 2.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfContent"
            FlowLayout:
                hDynamicPadding: false
                alignment: "Left"
                useRtl: true
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
        bindings:
        - ["RichContent.text", "localize(resourceInfoDescription)"]
-   class: "UIControl"
    name: "NavigationPanelContent"
    size: [32.000000, 32.000000]
    input: false
    components:
        LinearLayout:
            spacing: 24.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "ButtonB"
        size: [221.000000, 24.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/Back\""
                    "icon": "eNintendoSwitchControls.B"
    -   class: "UIControl"
        name: "ButtonY"
        size: [32.000000, 32.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                condition: "showcaseModel.state != eShowcaseState.kPreview"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "yButtonText"
                    "icon": "eNintendoSwitchControls.Y"
-   class: "UIControl"
    name: "TutorialModulesPanel"
    size: [768.000000, 40.000000]
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfMaxChild"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/TutorialNavigationPanel.yaml"
            args:
                "currentHiglightControl": "account.tutorialData.currentHighlightControl"
