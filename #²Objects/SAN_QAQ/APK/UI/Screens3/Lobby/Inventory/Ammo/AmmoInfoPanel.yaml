Header:
    version: 150
Prototypes:
-   class: "UIControl"
    name: "InfoPanel"
    size: [700.000000, 600.000000]
    input: true
    classes: "button-choose-sound"
    components:
        UIAnimationComponent:
            animations: "SELECTED,~res:/UI/Screens3/Lobby/Inventory/Ammo/AmmoInfoPanel.animation;UNSELECTED,~res:/UI/Screens3/Lobby/Inventory/Ammo/AmmoInfoPanelDisable.animation;_INIT,~res:/UI/Screens3/Lobby/Inventory/Ammo/AmmoInfoPanel.animation"
        LinearLayout:
            orientation: "TopDown"
            dynamicPadding: true
            spacing: 16.000000
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 112.000000
            verticalPolicy: "Formula"
            verticalFormula: "childrenSum + 32"
        UIInputEventComponent:
            onTouchUpInside: "SHELL_SELECTED"
            onTouchUpInsideData: "slot.index"
        UIDataParamsComponent:
            params:
            - ["bool", "isSelected", "false", "true"]
            - ["InventoryAmmoSlot", "slot", "null", "{ \"shellTitle\" = \"Осколочно-фугасный снаряд\"; \"shellDesc\" = \"УОФ — 365БМ100\"; \"shellHint\" = \"Осколочно-фугасный снаряд (ОФ) — обладает низкой бронепробиваемостью. Если снаряд всё же пробивает броню, он низкий высокий урон. При столкновении с препятствием снаряд взрывается и может нанести небольшой урон от разлёта осколков. Наиболее эффективен при использовании в орудиях с калибром 152мм. Не рекошетит.\"; \"isExplosive\" = true; }"]
            events:
            - "SHELL_SELECTED"
        UIDataLocalVarsComponent:
            data:
            - ["bool", "internalSelected", "false"]
        UIDataLocalBindingsComponent:
            data:
            - ["string", "iconPath", "when slot.iconType == \"ap\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/ap_s\", when slot.iconType == \"ap_premium\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/ap_premium_s\", when slot.iconType == \"ap_cr\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/ap_cr_s\", when slot.iconType == \"ap_cr_premium\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/ap_cr_premium_s\", when slot.iconType == \"he\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/he_s\", when slot.iconType == \"he_premium\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/he_premium_s\", when slot.iconType == \"hc\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/hc_s\", when slot.iconType == \"hc_premium\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/hc_premium_s\", when slot.iconType == \"atgm_heat\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/atgm_heat_s\", when slot.iconType == \"atgm_he\" -> \"~res:/Gfx/Shared/tank-supply/ammunition/small/atgm_he_s\", \"~res:/Gfx/Shared/tank-supply/ammunition/small/ap_s\""]
        UIEventOnDataComponent0:
            watchedDataExpression: "isSelected"
            ifExpression: "true"
            eventName: "SELECTED"
        UIEventOnDataComponent1:
            watchedDataExpression: "isSelected"
            ifExpression: "false"
            eventName: "UNSELECTED"
        Sound: {}
        StyleSheet:
            styles: "~res:/UI/Screens3/ButtonSound.style.yaml"
    children:
    -   class: "UIControl"
        name: "IconHolder"
        position: [28.000000, 0.000000]
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
        children:
        -   class: "UIControl"
            name: "Icon"
            input: false
            components:
                Background:
                    drawType: "DRAW_STRETCH_BOTH"
                    perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    horizontalValue: 40.000000
                    verticalPolicy: "FixedSize"
                    verticalValue: 40.000000
            bindings:
            - ["Background.sprite", "iconPath"]
        -   class: "UIControl"
            name: "Control"
            position: [0.000000, 11.000000]
            input: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                UIChildComponent0:
                    prototypePath: "~res:/UI/Screens3/Lobby/Inventory/Ammo/SlotSelection.yaml"
                    args:
                        "isVisible": "isSelected"
    -   class: "UIControl"
        name: "ParamsHolder"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
                spacing: 8.000000
            SizePolicy:
                horizontalPolicy: "PercentOfMaxChild"
                verticalPolicy: "PercentOfChildrenSum"
        children:
        -   class: "UIControl"
            name: "Damage"
            input: false
            components:
                UITextComponent:
                    colorInheritType: "COLOR_IGNORE_PARENT"
                    align: ["LEFT", "VCENTER"]
                Anchor:
                    leftAnchorEnabled: true
                    useRtl: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["classes", "when isSelected == true -> \"t-body bold white-wild-sand-text\", \"t-body bold white-wild-sand-50-text\""]
            - ["UITextComponent.text", "str(slot.damageMin, 0) + \" – \" + str(slot.damageMax, 0)"]
        -   class: "UIControl"
            name: "Piercing"
            input: false
            components:
                UITextComponent:
                    colorInheritType: "COLOR_IGNORE_PARENT"
                    align: ["LEFT", "VCENTER"]
                Anchor:
                    leftAnchorEnabled: true
                    useRtl: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["classes", "when isSelected == true -> \"t-body bold white-wild-sand-text\", \"t-body bold white-wild-sand-50-text\""]
            - ["UITextComponent.text", "str(slot.piercingMin, 0) + \" – \" + str(slot.piercingMax, 0)"]
        -   class: "UIControl"
            name: "Radius"
            input: false
            components:
                UITextComponent:
                    colorInheritType: "COLOR_IGNORE_PARENT"
                    align: ["LEFT", "VCENTER"]
                Anchor:
                    leftAnchorEnabled: true
                    useRtl: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["classes", "when isSelected == true -> \"t-body bold white-wild-sand-text\", \"t-body bold white-wild-sand-50-text\""]
            - ["UITextComponent.text", "when slot.isExplosive -> str(slot.explosionRadius, 0), \"—\""]
        -   class: "UIControl"
            name: "Caliber"
            input: false
            components:
                UITextComponent:
                    colorInheritType: "COLOR_IGNORE_PARENT"
                    align: ["LEFT", "VCENTER"]
                Anchor:
                    leftAnchorEnabled: true
                    useRtl: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["classes", "when isSelected == true -> \"t-body bold white-wild-sand-text\", \"t-body bold white-wild-sand-50-text\""]
            - ["UITextComponent.text", "str(slot.caliber)"]
        -   class: "UIControl"
            name: "Count"
            input: false
            components:
                UITextComponent:
                    colorInheritType: "COLOR_IGNORE_PARENT"
                    align: ["LEFT", "VCENTER"]
                Anchor:
                    leftAnchorEnabled: true
                    useRtl: true
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["classes", "when isSelected == true -> \"t-body bold white-wild-sand-text\", \"t-body bold white-wild-sand-50-text\""]
            - ["UITextComponent.text", "str(slot.currentAmmo) + \" / \" + str(slot.tankAmmo)"]
    -   class: "UIControl"
        name: "PremiumBG"
        input: false
        components:
            UIOpacityComponent:
                opacity: 0.100000
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        bindings:
        - ["visible", "internalSelected"]
        children:
        -   class: "UIControl"
            name: "Top"
            input: false
            components:
                Background:
                    drawType: "DRAW_SCALE_TO_RECT"
                    sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_vertical_0-100"
                Anchor:
                    hCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                    verticalValue: 50.000000
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["classes", "when slot.isPrem == true -> \"orange-orange-peel-bg\", \"white-wild-sand-50-bg\""]
        -   class: "UIControl"
            name: "Bottom"
            position: [96.000000, 110.000000]
            input: false
            components:
                Background:
                    drawType: "DRAW_SCALE_TO_RECT"
                    sprite: "~res:/Gfx/Lobby/backgrounds/bg_gradient_vertical_0-100"
                    spriteModification: ["FLIP_VERTICAL"]
                Anchor:
                    hCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
                    verticalValue: 50.000000
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["classes", "when slot.isPrem == true -> \"orange-orange-peel-bg\", \"white-wild-sand-50-bg\""]
