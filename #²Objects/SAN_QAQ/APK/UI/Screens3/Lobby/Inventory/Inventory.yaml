Header:
    version: 157
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/SideBar.yaml"
- "~res:/UI/Screens3/Lobby/InventoryPanel/InventoryPanel.yaml"
- "~res:/UI/Screens3/Lobby/Common/BlurDynamic.yaml"
Prototypes:
-   class: "UIControl"
    name: "Inventory"
    size: [1280.000000, 728.000000]
    input: false
    components:
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        UILayoutEventComponent:
            sizeChangedEvent: "INVENTORY_SIZE_CHANGED"
            sizeChangedEventData: "_absoluteRect"
        ModalInput: {}
        UIVirtualActionEventComponent0:
            virtualKeyAction: "Options"
            keyDownEvent: "GO_TO_SHOP"
        UIVirtualActionEventComponent1:
            virtualKeyAction: "Escape"
            keyDownEvent: "BACK_SHORTCUT"
        UIShortcutEventComponent:
            shortcuts: "BACK_SHORTCUT,Back;BACK_SHORTCUT,Escape;ToggleDebugMode,Shift+D"
        UIDataParamsComponent:
            params:
            - ["CrewViewModel", "crewViewModel", "null", "{ }"]
            - ["CrewMasteryViewModel", "crewMasteryViewModel", "null", "{ }"]
            - ["CrewSkillsViewModel", "crewSkillsViewModel", "null", "{ }"]
            - ["CrewSkillsAccelerationViewModel", "crewSkillsAccelerationViewModel", "null", "{ }"]
            - ["OptionalDevices", "optionalDevices", "null", "{ }"]
            - ["AppDataModel", "app", "null", "{ }"]
            - ["GlobalConstants", "constants", "null", "{ }"]
            - ["AccountDataModel", "account", "null", "{ }"]
            - ["DiaryDataModel", "diary", "null", "{ }"]
            - ["InventoryPanelViewModel", "inventoryPanel", "null", "{ \"optionalDevices\" = [ { }; { }; { }; ]; }"]
            - ["LobbyDataModel", "lobby", "null", "{ }"]
            - ["TankModulesTreeModel", "modulesModel", "null", "{ \"currentVehicle\" = { \"compactDescr\" = 0; }; }"]
            - ["InventoryAmmoModel", "ammoModel", "null", "{ \"slots\" = [ { \"title\" = \"ammo1\"; }; { \"index\" = 1; \"title\" = \"ammo2\"; }; ]; }"]
            - ["SessionDataModel", "session", "null", "{ }"]
            - ["InventoryItemsView", "itemsModel", "null", "{ }"]
            - ["CamouflagesList", "camouflages", "null", "{ }"]
            - ["InventoryViewModel", "view", "null", "{ \"selectedTab\" = InventoryTabType.PROGRESS; }"]
            - ["TankParams", "tankParams", "null", "{ }"]
            - ["TankProgressViewModel", "tankProgress", "null", "{ \"currentTab\" = eTankProgressTab.Achievements; }"]
        UIDataLocalVarsComponent:
            data:
            - ["bool", "debugMode", "false"]
            - ["bool", "isShopButtonAvailable", "true"]
            - ["string", "equipmentActionText", "\"\""]
            - ["eInventoryPanelAnimation", "panelInitializationAnimation", "eInventoryPanelAnimation.kFallDown"]
        UIDataLocalBindingsComponent:
            data:
            - ["eTutorialHighlights", "highlightscontrolForNavigatPanel", "when account.tutorialData.currentHighlightControl == eTutorialHighlights.kResearchButton -> when modulesModel.currentAction == eModulesAction.BUY -> eTutorialHighlights.kBuyButton, eTutorialHighlights.kResearchButton, account.tutorialData.currentHighlightControl"]
            - ["int", "backButtonLayer", "when (account.tutorialData.currentHighlightControl == eTutorialHighlights.kBack) -> 1, 0"]
            - ["eCurrentScreen", "currentScreen", "when view.selectedTab == InventoryTabType.CREW -> eCurrentScreen.kInventoryCrew, view.selectedTab == InventoryTabType.PROGRESS -> eCurrentScreen.kInventoryModules, view.selectedTab == InventoryTabType.PROGRESS -> eCurrentScreen.kInventoryModules, view.selectedTab == InventoryTabType.CAMOUFLAGES -> eCurrentScreen.kInventoryCamouflages, view.selectedTab == InventoryTabType.PROVISIONS -> eCurrentScreen.kInventoryProvisions, view.selectedTab == InventoryTabType.CONSUMABLES -> eCurrentScreen.kInventoryConsumables, view.selectedTab == InventoryTabType.AMMUNITION -> eCurrentScreen.kInventoryAmmunition, view.selectedTab == InventoryTabType.OPTIONAL_DEVICES -> eCurrentScreen.kInventoryOptionalDevices, eCurrentScreen.kUnknown"]
            - ["int", "provisionSlotsCount", "when not isNull(session.playerTanks.currentTank) -> session.playerTanks.currentTank.info.provisionSlots, 0"]
            - ["OwnedTank", "tank", "session.playerTanks.currentTank"]
            - ["string", "inventoryTitle", "when view.selectedTab == InventoryTabType.CAMOUFLAGES -> \"ApppearancePanel/Header/Appearance\", view.selectedTab == InventoryTabType.CONSUMABLES -> \"ConsumablesPanel/Header/Consumables\", view.selectedTab == InventoryTabType.PROVISIONS -> \"ProvisionsPanel/Header/Provisions\", view.selectedTab == InventoryTabType.CREW -> \"CrewPanel/Header/Crew\", view.selectedTab == InventoryTabType.AMMUNITION -> \"AmmunitionPanel/Header/Ammunition\", view.selectedTab == InventoryTabType.OPTIONAL_DEVICES -> \"EquipmentPanel/Header/Equipment\", view.selectedTab == InventoryTabType.PROGRESS and tankProgress.currentTab == eTankProgressTab.Achievements -> \"TankRank/InventoryPanel/Title\", view.selectedTab == InventoryTabType.PROGRESS and tankProgress.currentTab == eTankProgressTab.Modules -> \"UpgradesPanel/Header/Upgrades\", view.selectedTab == InventoryTabType.PROGRESS and tankProgress.currentTab == eTankProgressTab.Statistics -> \"TankRank/Inventory/Header/Statistics\", \"\""]
            - ["StatsDataModel", "stats", "session.stats"]
            - ["string", "hangarTankName", "when not isNull(tank) -> localize(tank.nameWithCamo), \"\""]
            - ["string", "inventoryTankName", "when not isNull(tankProgress) and (isNull(tank) or (tankProgress.tankDescr != tank.info.tankDescriptor.rawDescr)) -> localize(tankProgress.tankInfo.name), hangarTankName"]
            - ["string", "modulesNPText", "when isNull(modulesModel) -> \"\", modulesModel.currentAction == eModulesAction.RESEARCH -> \"#modules_tech_tree:ResearchButton\", modulesModel.currentAction == eModulesAction.INSTALL -> \"#modules_tech_tree:InstallButton\", modulesModel.currentAction == eModulesAction.BUY -> \"#modules_tech_tree:BuyButton\", modulesModel.currentAction == eModulesAction.SELL -> \"#modules_tech_tree:SellButton\", modulesModel.currentAction == eModulesAction.REPAIR -> \"hangar/RepairButton\", modulesModel.currentAction == eModulesAction.SHOW_TANK -> \"#modules_tech_tree:ModulesButton\", \"\""]
            - ["bool", "currentTankSelected", "isNull(tankProgress) or (not isNull(tank) and tankProgress.tankDescr == tank.info.tankDescriptor.rawDescr)"]
            - ["bool", "ranksAvailable", "not isNull(tankProgress) and not isNull(tankProgress.tankDossier) and tankProgress.tankDossier.rankState.enabled"]
            - ["eTankProgressTab", "progressTab", "when not isNull(tankProgress) -> tankProgress.currentTab, eTankProgressTab.Modules"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Inventory/Inventory.actions"
        UIDataOnEventComponent0:
            eventName: "INVENTORY_INITIALIZED"
            modelFieldExpression: "panelInitializationAnimation"
            dataExpression: "eInventoryPanelAnimation.kNoAnimation"
        UIDataOnEventComponent1:
            eventName: "ToggleDebugMode"
            modelFieldExpression: "debugMode"
            dataExpression: "not debugMode and app.constants.developerUI"
        UIEventOnDataComponent0:
            watchedDataExpression: "view.selectedTab"
            eventName: "OnSelectedTabChanged"
        UIEventOnDataComponent1:
            watchedDataExpression: "progressTab"
            eventName: "OnAchievementsContentPositionChanged"
            eventData: "0"
    children:
    -   class: "UIControl"
        name: "Background"
        input: false
        components:
            IgnoreLayout: {}
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIChildComponent0:
                childType: "kPrototype"
                condition: "view.selectedTab == InventoryTabType.PROGRESS and tankProgress.currentTab == eTankProgressTab.Achievements"
                prototypePath: "~res:/UI/Screens3/Lobby/Inventory/TankProgress/Background.yaml"
    -   class: "UIControl"
        name: "Content"
        input: false
        components:
            LinearLayout:
                orientation: "RightToLeft"
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        children:
        -   class: "UI3DView"
            customClass: "UIHangar3dView"
            name: "HangarScene"
            components:
                SceneComponent:
                    drawToFramebuffer: true
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            bindings:
            - ["visible", "view.selectedTab == InventoryTabType.CAMOUFLAGES"]
        -   class: "UIControl"
            name: "ContentAndHeader"
            input: false
            components:
                LinearLayout:
                    orientation: "BottomUp"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfParent"
            children:
            -   class: "UIControl"
                name: "Content"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIChildComponent0:
                        condition: "view.selectedTab == InventoryTabType.PROGRESS and tankProgress.currentTab == eTankProgressTab.Modules"
                        prototypePath: "~res:/UI/Screens3/Lobby/ModulesTree/ModulesTree.yaml"
                        args:
                            "currentTankSelected": "currentTankSelected"
                            "session": "session"
                            "account": "account"
                            "modulesModel": "modulesModel"
                            "tankParams": "tankParams"
                            "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                        eventActions:
                        - ["SHOW_ACHIEVEMENT_INFO", "SHOW_ACHIEVEMENT_INFO", "_event"]
                        - ["SHOW_MECHANIC_INFO", "SHOW_MECHANIC_INFO", "_event"]
                        - ["ON_SHOW_TRADEMARK_CLICKED", "ON_SHOW_TRADEMARK_CLICKED", ""]
                        - ["BACK_EVENT", "BACK_EVENT", ""]
                        - ["TO_TOP_INFO", "TO_TOP_INFO", "_event"]
                        - ["VEHICLE_INFO", "VEHICLE_INFO", "_event"]
                        - ["DOUBLE_TAP_ACTION", "DOUBLE_TAP_ACTION", "_event"]
                        - ["PREMIUMIZE", "PREMIUMIZE", "_event"]
                        - ["UPGRADE_TO_TOP", "UPGRADE_TO_TOP", "_event"]
                        - ["MODULES_MAIN_ACTION", "MODULES_MAIN_ACTION", "_event"]
                        - ["SHOWCASE_PRESSED", "SHOWCASE_PRESSED", "_event"]
                        - ["ITEM_SELECTED", "ITEM_SELECTED", "_event"]
                        - ["SHOW_TANK_MODULES", "SHOW_TANK_MODULES", "_event"]
                    UIChildComponent1:
                        condition: "view.selectedTab == InventoryTabType.PROGRESS and tankProgress.currentTab == eTankProgressTab.Achievements"
                        prototypePath: "~res:/UI/Screens3/Lobby/Inventory/TankProgress/AchievementsTab.yaml"
                        args:
                            "vehicleId": "tankProgress.tankDescr"
                            "tankInfo": "tankProgress.tankInfo"
                            "tankStats": "tankProgress.tankStats"
                            "rankConfig": "session.rankConfig"
                            "dossier": "tankProgress.tankDossier"
                            "ranksCache": "lobby.ranksCache"
                            "debug": "debugMode"
                        eventActions:
                        - ["OnContentPositionChanged", "OnAchievementsContentPositionChanged", "_event.position"]
                        - ["OnCounterClicked", "OnCounterClicked", "_event"]
                        - ["ShowAchievementInfo", "ShowAchievementInfo", "_event.achievementName"]
                        - ["UnlockRank", "UnlockRank", ""]
                        - ["OnPromoRankInfoClicked", "OnPromoRankInfoClicked", ""]
                    UIChildComponent2:
                        condition: "view.selectedTab == InventoryTabType.PROGRESS and tankProgress.currentTab == eTankProgressTab.Statistics"
                        prototypePath: "~res:/UI/Screens3/Lobby/Inventory/TankProgress/StatisticsTab.yaml"
                        args:
                            "dossier": "tankProgress.tankDossier"
                    UIChildComponent3:
                        condition: "view.selectedTab == InventoryTabType.CREW and crewViewModel.selectedScreen == eCrewSelectedScreen.kMastery"
                        prototypePath: "~res:/UI/Screens3/Lobby/Inventory/Crew/MasteryScreen.yaml"
                        args:
                            "model": "crewMasteryViewModel"
                            "session": "session"
                            "tankParams": "tankParams"
                    UIChildComponent4:
                        condition: "view.selectedTab == InventoryTabType.CREW and crewViewModel.selectedScreen == eCrewSelectedScreen.kSkills"
                        prototypePath: "~res:/UI/Screens3/Lobby/Inventory/Crew/SkillsScreen.yaml"
                        args:
                            "tutorialModel": "account.tutorialData"
                            "model": "crewSkillsViewModel"
                    UIChildComponent5:
                        condition: "view.selectedTab == InventoryTabType.CREW and crewViewModel.selectedScreen == eCrewSelectedScreen.kAcceleration"
                        prototypePath: "~res:/UI/Screens3/Lobby/Inventory/Crew/AccelerationScreen.yaml"
                        args:
                            "model": "crewSkillsAccelerationViewModel"
                    UIChildComponent6:
                        condition: "view.selectedTab == InventoryTabType.CONSUMABLES or view.selectedTab == InventoryTabType.PROVISIONS"
                        prototypePath: "~res:/UI/Screens3/Lobby/Inventory/Equipment/Equipment.yaml"
                        args:
                            "artefacts": "session.artefacts"
                            "stats": "stats"
                            "model": "itemsModel"
                            "tankParams": "tankParams"
                        eventActions:
                        - ["ON_ITEM_SHOP_ACTION", "ON_ITEM_SHOP_ACTION", "itemsModel.selected, itemsModel.selectedSlotIndex"]
                        - ["ON_AUTO_RESUPPLY_CHANGED", "ON_AUTO_RESUPPLY_CHANGED", "_event.isResupplyOn"]
                        - ["ITEM_SELECTED", "ITEM_SELECTED", "_event"]
                    UIChildComponent7:
                        condition: "view.selectedTab == InventoryTabType.AMMUNITION"
                        prototypePath: "~res:/UI/Screens3/Lobby/Inventory/InventoryAmmo.yaml"
                        args:
                            "artefacts": "session.artefacts"
                            "tutorialData": "account.tutorialData"
                            "stats": "session.stats"
                            "ammoModel": "ammoModel"
                        eventActions:
                        - ["ON_SLIDER_EDITING_FINISHED", "ON_SLIDER_EDITING_FINISHED", "_event.value, _event.index"]
                        - ["ON_SLIDER_CHANGED", "ON_SLIDER_CHANGED", "_event.value, _event.index"]
                        - ["ON_SHELL_ICON_PRESSED", "ON_SHELL_ICON_PRESSED", "_event"]
                        - ["ON_AUTO_RESUPPLY_CHANGED", "ON_AUTO_RESUPPLY_CHANGED", "_event.isResupplyOn"]
                        - ["ON_APPLY_AMMO", "ON_APPLY_AMMO", ""]
                        - ["ON_SLIDER_CONVERT", "ON_SLIDER_CONVERT", "_event"]
                        - ["ON_SLIDER_TOUCHED", "ON_SLIDER_TOUCHED", "_event.index"]
                        - ["ON_SLIDER_MINUS", "ON_SLIDER_MINUS", "_event.index"]
                        - ["ON_SLIDER_PLUS", "ON_SLIDER_PLUS", "_event.index"]
                    UIChildComponent8:
                        condition: "view.selectedTab == InventoryTabType.OPTIONAL_DEVICES"
                        prototypePath: "~res:/UI/Screens3/Lobby/Inventory/OptionalDevices/OptionalDevices.yaml"
                        args:
                            "tankParams": "tankParams"
                            "session": "session"
                            "devices": "optionalDevices"
                        eventActions:
                        - ["UNLOCK_SLOT", "UNLOCK_SLOT", "_event"]
                        - ["SHOW_INFO", "SHOW_INFO", "_event"]
                        - ["ITEM_SELECTED", "ITEM_SELECTED", "_event"]
                    UIChildComponent9:
                        condition: "view.selectedTab == InventoryTabType.CAMOUFLAGES"
                        prototypePath: "~res:/UI/Screens3/Lobby/Inventory/Camouflages/CamouflagesShop.yaml"
                        args:
                            "currentTankRank": "when not isNull(tank) -> tank.dossier.rankState.level, 0"
                            "rankConfig": "session.rankConfig"
                            "fullscreenMode": "camouflages.fullscreen"
                            "artefacts": "session.artefacts"
                            "stats": "session.stats"
                            "camouflages": "camouflages.slots[camouflages.selectedSlot]"
                        eventActions:
                        - ["SHOP_BUTTON_AVAILABLE", "SHOP_BUTTON_AVAILABLE", "_event"]
                        - ["CAMOUFLAGES_SIZE_CHANGED", "CAMOUFLAGES_SIZE_CHANGED", "_event"]
                        - ["ON_FULLSCREEN_CHANGED", "InventoryFullscreen", "_event"]
                        - ["ON_FULLSCREEN_CLICKED", "ON_FULLSCREEN_CLICKED", ""]
                        - ["ON_CAMO_CLICKED", "ON_CAMO_CHANGED", "_event"]
                        - ["ON_CLICK_ACTION", "ON_CLICK_ACTION", ""]
            -   class: "UIControl"
                name: "TopPart"
                input: false
                components:
                    LinearLayout:
                        orientation: "TopDown"
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfChildrenSum"
                children:
                -   class: "UIControl"
                    name: "BlurAndFade"
                    input: false
                    components:
                        UIOpacityComponent: {}
                        IgnoreLayout: {}
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                    children:
                    -   prototype: "BlurDynamic/BlurDynamic"
                        name: "BlurDynamic"
                        visible: false
                        components:
                            IgnoreLayout: {}
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfParent"
                -   class: "UIControl"
                    name: "TopContent"
                    input: false
                    components:
                        LinearLayout:
                            orientation: "BottomUp"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfChildrenSum"
                    children:
                    -   class: "UIControl"
                        name: "InventoryWrapper"
                        input: false
                        components:
                            UIOpacityComponent: {}
                            Anchor:
                                hCenterAnchorEnabled: true
                            LinearLayout: {}
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfMaxChild"
                        children:
                        -   prototype: "InventoryPanel/Inventory"
                            name: "Inventory"
                            components:
                                UIDataParamsComponent:
                                    args:
                                        "canMoveSelectionByHotKeys": "not (account.tutorialData.isTutorialActive or account.tutorialData.currentHint != eTutorialHint.kUnknown or account.tutorialData.currentHighlightControl != eTutorialHighlights.kUnknown)"
                                        "tankPanelVisible": "false"
                                        "optionalDevicesAreVisible": "account.tutorialData.completedLessons.Contains(eTutorialLesson.kBattle4Reward)"
                                        "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                                        "modulesLayer": "0"
                                        "ammoLayer": "0"
                                        "ammoMasterId": "\"\""
                                        "modulesMasterId": "\"MODULES\""
                                        "visible": "currentTankSelected"
                                        "camoIsVisible": "diary.isCustomizationAvailable"
                                        "tank": "session.playerTanks.currentTank"
                                        "selectedTab": "view.selectedTab"
                                        "ammoIsVisible": "account.tutorialData.completedLessons.Contains(eTutorialLesson.kBattle4Reward)"
                                        "consumablesIsVisible": "account.tutorialData.completedLessons.Contains(eTutorialLesson.kBattle2Reward)"
                                        "provisionsIsVisible": "not isNull(session.playerTanks.currentTank) and session.playerTanks.currentTank.info.provisionSlots > 0 and not account.tutorialData.isTutorialActive"
                                        "crewFragmentVisible": "lobby.crewFragmentVisible"
                                        "session": "session"
                                        "panel": "inventoryPanel"
                                        "initializationAnimation": "panelInitializationAnimation"
                                        "lobby": "lobby"
                                        "showBackground": "view.selectedTab != InventoryTabType.CAMOUFLAGES and (view.selectedTab != InventoryTabType.PROGRESS or tankProgress.currentTab != eTankProgressTab.Achievements)"
                                    eventActions:
                                    - ["CREW_PRESSED", "CREW_PRESSED", ""]
                                    - ["INVENTORY_INITIALIZED", "INVENTORY_INITIALIZED", ""]
                        -   class: "UIControl"
                            name: "SafeArea"
                            input: false
                            components:
                                Background: {}
                                SizePolicy:
                                    horizontalPolicy: "Formula"
                                    horizontalFormula: "safeAreaInsets.right"
                                    verticalPolicy: "PercentOfParent"
                                StyleSheet:
                                    styles: "~res:/UI/Screens3/Color.style.yaml"
                            bindings:
                            - ["classes", "when view.selectedTab == InventoryTabType.CAMOUFLAGES -> \"grey-shark-70-bg\", \"\""]
                    -   class: "UIControl"
                        name: "Header"
                        input: false
                        components:
                            UIOpacityComponent: {}
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                prototypePath: "~res:/UI/Screens3/Lobby/Common/Headers/InventoryHeader.yaml"
                                args:
                                    "statsPanelAdditionalContent": "when view.selectedTab == InventoryTabType.PROGRESS and tankProgress.currentTab == eTankProgressTab.Modules -> CurrentTankXp, null"
                                    "session": "session"
                                    "lobby": "lobby"
                                    "title": "inventoryTankName"
                                    "subtitle": "inventoryTitle"
                                    "isGeneralPackLoaded": "app.sDlc.isGeneralPackLoaded"
                                    "isTutorialActive": "account.tutorialData.isTutorialActive"
                                    "firstLessonCompleted": "account.tutorialData.currentLesson > eTutorialLesson.kTurretUnlock"
                                    "currentScreen": "currentScreen"
                                    "isFullScreen": "false"
                                eventActions:
                                - ["GO_TO_SHOP", "GO_TO_SHOP", ""]
                                - ["PREMIUM_INFO_EVENT", "PREMIUM_INFO_EVENT", ""]
                                - ["BACK_EVENT", "BACK_EVENT", ""]
                                - ["SHOP_BUTTON", "SHOP_BUTTON", "_event.requiredResource"]
        -   class: "UIControl"
            name: "SidebarWrapper"
            input: false
            components:
                UIOpacityComponent: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfParent"
            children:
            -   prototype: "SideBar/Sidebar"
                name: "Sidebar"
                components:
                    UIDataParamsComponent:
                        args:
                            "backButtonLayer": "when (account.tutorialData.currentHighlightControl == eTutorialHighlights.kInventoryBack or account.tutorialData.currentHighlightControl == eTutorialHighlights.kBack) -> 1, 0"
                            "rightSeparatorWidth": "when currentScreen == eCurrentScreen.kInventoryCamouflages -> 1, 0"
                            "bgStyle": "when currentScreen == eCurrentScreen.kInventoryCamouflages -> \"black-50-bg\", \"\""
                            "content": "SidebarContent"
                            "isBackButtonHasSounds": "false"
                        eventActions:
                        - ["ON_CLICK_BACK", "BACK_EVENT", ""]
                children:
                -   path: "Content/Top"
                    components:
                        UILayerComponent: {}
                    bindings:
                    - ["UILayerComponent.layer", "0"]
                    children: []
                -   path: "Content/Top/BackButton/TapArea"
                    exclusiveInput: true
                    components:
                        UIInputEventComponent:
                            onTouchUpInside: "BACK_EVENT"
                    children: []
    -   class: "UIControl"
        name: "NavigationPanel"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "not account.tutorialData.isTutorialActive and isGamepad and view.selectedTab == InventoryTabType.PROGRESS and not isNull(tankProgress) and tankProgress.currentTab == eTankProgressTab.Modules"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "ModulesPanel"
            UIChildComponent1:
                condition: "account.tutorialData.isTutorialActive and isGamepad and view.selectedTab == InventoryTabType.PROGRESS and not isNull(tankProgress) and tankProgress.currentTab == eTankProgressTab.Modules"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "TutorialModulesPanel"
            UIChildComponent2:
                condition: "not account.tutorialData.isTutorialActive and isGamepad and view.selectedTab == InventoryTabType.OPTIONAL_DEVICES"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "OptionaalDevicesPanel"
            UIChildComponent3:
                condition: "isGamepad and view.selectedTab == InventoryTabType.CAMOUFLAGES"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "CamouflagesPanel"
            UIChildComponent4:
                condition: "isGamepad and (view.selectedTab == InventoryTabType.CONSUMABLES or view.selectedTab == InventoryTabType.PROVISIONS)"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "EquipmentPanel"
            UIChildComponent5:
                condition: "isGamepad and (view.selectedTab == InventoryTabType.CREW or view.selectedTab == InventoryTabType.AMMUNITION or view.selectedTab == InventoryTabType.PROGRESS)"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/NavigationPanel.yaml"
                args:
                    "content": "OtherPanel"
Slots:
-   class: "UIControl"
    name: "ModulesPanel"
    size: [768.000000, 40.000000]
    input: false
    components:
        LinearLayout:
            spacing: 24.000000
            dynamicSpacing: true
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "Back"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/Back\""
                    "icon": "eNintendoSwitchControls.B"
    -   class: "UIControl"
        name: "ChoiceTab"
        size: [32.000000, 32.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconsWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/ChooseInventoryScreen\""
                    "nsControls": "[ eNintendoSwitchControls.LeftShoulder; eNintendoSwitchControls.RightShoulder; ]"
        bindings:
        - ["visible", "currentTankSelected"]
    -   class: "UIControl"
        name: "ChoiceTankOrModule"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Modules/ChoiceModule\""
                    "icon": "eNintendoSwitchControls.AllArrows"
    -   class: "UIControl"
        name: "ShowModules"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Modules/ToTank\""
                    "icon": "eNintendoSwitchControls.X"
        bindings:
        - ["visible", "modulesModel.selectedNode.contentType == eModuleNodeContentType.VEHICLE and modulesModel.selectedCompactDescr != modulesModel.currentVehicle.compactDescr"]
    -   class: "UIControl"
        name: "FooterButtonAction"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor: {}
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "modulesModel.currentAction != eModulesAction.NONE and modulesModel.currentAction != eModulesAction.SHOW_TANK"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconsWithLabel.yaml"
                args:
                    "text": "localize(modulesNPText)"
                    "nsControls": "[ eNintendoSwitchControls.Y; ]"
-   class: "UIControl"
    name: "OptionaalDevicesPanel"
    size: [768.000000, 40.000000]
    input: false
    components:
        LinearLayout:
            spacing: 24.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "Labels"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "icon": "eNintendoSwitchControls.B"
                    "text": "\"Switch/HubridPanel/Lobby/Back\""
    -   class: "UIControl"
        name: "ChoiceTab"
        size: [32.000000, 32.000000]
        visible: true
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "currentTankSelected"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconsWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/ChooseInventoryScreen\""
                    "nsControls": "[ eNintendoSwitchControls.LeftShoulder; eNintendoSwitchControls.RightShoulder; ]"
    -   class: "UIControl"
        name: "FooterButtonAction"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor: {}
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "optionalDevices.unlockStatus == eOptionalDeviceUnlockStatus.READY_TO_UNLOCK"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconsWithLabel.yaml"
                args:
                    "text": "localize(\"#lobby:MainScreen/optionalDevices/Button/Unlock\")"
                    "nsControls": "[ eNintendoSwitchControls.Y; ]"
-   class: "UIControl"
    name: "TutorialModulesPanel"
    size: [768.000000, 40.000000]
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfMaxChild"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/TutorialNavigationPanel.yaml"
            args:
                "currentHiglightControl": "highlightscontrolForNavigatPanel"
-   class: "UIControl"
    name: "OtherPanel"
    input: false
    components:
        LinearLayout:
            spacing: 24.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "Back"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/Back\""
                    "icon": "eNintendoSwitchControls.B"
    -   class: "UIControl"
        name: "ChoiceTab"
        size: [32.000000, 32.000000]
        visible: true
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "currentTankSelected"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconsWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/ChooseInventoryScreen\""
                    "nsControls": "[ eNintendoSwitchControls.LeftShoulder; eNintendoSwitchControls.RightShoulder; ]"
-   class: "UIControl"
    name: "CamouflagesPanel"
    size: [768.000000, 40.000000]
    input: false
    components:
        LinearLayout:
            spacing: 24.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "Back"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/Back\""
                    "icon": "eNintendoSwitchControls.B"
    -   class: "UIControl"
        name: "ChoiceTab"
        size: [32.000000, 32.000000]
        visible: true
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "not camouflages.fullscreen"
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconsWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/ChooseInventoryScreen\""
                    "nsControls": "[ eNintendoSwitchControls.LeftShoulder; eNintendoSwitchControls.RightShoulder; ]"
-   class: "UIControl"
    name: "SidebarContent"
    input: false
    components:
        Anchor:
            hCenterAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "PercentOfMaxChild"
            verticalPolicy: "PercentOfMaxChild"
        UIChildComponent0:
            condition: "view.selectedTab == InventoryTabType.CONSUMABLES or view.selectedTab == InventoryTabType.PROVISIONS"
            prototypePath: "~res:/UI/Screens3/Lobby/Inventory/Equipment/EquipmentSlots.yaml"
            args:
                "itemsModel": "itemsModel"
            eventActions:
            - ["SLOT_SELECTED", "SLOT_SELECTED", "_event"]
        UIChildComponent1:
            condition: "view.selectedTab == InventoryTabType.CAMOUFLAGES"
            prototypePath: "~res:/UI/Screens3/Lobby/Inventory/Camouflages/CamouflageSlotList.yaml"
            args:
                "slots": "camouflages.slots"
                "selectedSlot": "camouflages.selectedSlot"
            eventActions:
            - ["SLOT_SELECTED", "SLOT_SELECTED", "_event"]
        UIChildComponent2:
            childType: "kControl"
            condition: "view.selectedTab == InventoryTabType.PROGRESS and not isNull(tankProgress.tankDossier)"
            control: "TankProgressSideBarContent"
        UIChildComponent3: {}
-   class: "UIControl"
    name: "EquipmentPanel"
    size: [768.000000, 40.000000]
    input: false
    components:
        LinearLayout:
            spacing: 24.000000
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "Back"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/Back\""
                    "icon": "eNintendoSwitchControls.B"
    -   class: "UIControl"
        name: "ChoiceTab"
        size: [32.000000, 32.000000]
        visible: true
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconsWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/Lobby/ChooseInventoryScreen\""
                    "nsControls": "[ eNintendoSwitchControls.LeftShoulder; eNintendoSwitchControls.RightShoulder; ]"
    -   class: "UIControl"
        name: "ChoiceVertical"
        size: [32.000000, 32.000000]
        input: false
        components:
            LinearLayout:
                spacing: 24.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "text": "\"Switch/HubridPanel/ConsumablesOrProvisions/ChooseSlot\""
                    "icon": "eNintendoSwitchControls.VArrows"
    -   class: "UIControl"
        name: "ChooseItem"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor: {}
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "icon": "eNintendoSwitchControls.HArrows"
                    "text": "when view.selectedTab == InventoryTabType.CONSUMABLES -> \"Switch/HubridPanel/Consumables/ChooseItem\", \"Switch/HubridPanel/Provisions/ChooseItem\""
    -   class: "UIControl"
        name: "FotterButtonAction"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor: {}
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Common/NintendoSwitch/NavigationPanel/IconWithLabel.yaml"
                args:
                    "icon": "eNintendoSwitchControls.Y"
                    "text": "equipmentActionText"
-   class: "UIControl"
    name: "TankProgressSideBarContent"
    size: [88.000000, 640.000000]
    input: false
    components:
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "PercentOfMaxChild"
            verticalPolicy: "PercentOfChildrenSum"
    children:
    -   class: "UIControl"
        name: "Modules"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Inventory/TankProgress/SideBarItem.yaml"
                args:
                    "index": "0"
                    "icon": "\"~res:/Gfx/Lobby/icons/icon_tanks-tree_n\""
                    "selected": "tankProgress.currentTab == eTankProgressTab.Modules"
                eventActions:
                - ["ON_ITEM_PRESSED", "ON_TANK_RPOGRESS_TAB", "eTankProgressTab.Modules"]
            UIIdentifierComponent:
                id: "sidebar_modules"
        bindings:
        - ["selected", "tankProgress.currentTab == eTankProgressTab.Modules"]
    -   class: "UIControl"
        name: "Achievements"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                condition: "ranksAvailable"
                prototypePath: "~res:/UI/Screens3/Lobby/Inventory/TankProgress/SideBarItem.yaml"
                args:
                    "index": "1"
                    "icon": "\"~res:/Gfx/Lobby/backgrounds/tank-rank/icon_tanks-rank_m\""
                    "selected": "tankProgress.currentTab == eTankProgressTab.Achievements"
                    "enabled": "app.sDlc.isGeneralPackLoaded"
                eventActions:
                - ["ON_ITEM_PRESSED", "ON_TANK_RPOGRESS_TAB", "eTankProgressTab.Achievements"]
            UIIdentifierComponent:
                id: "sidebar_rank"
        bindings:
        - ["selected", "tankProgress.currentTab == eTankProgressTab.Achievements"]
    -   class: "UIControl"
        name: "Statistics"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Inventory/TankProgress/SideBarItem.yaml"
                args:
                    "index": "when ranksAvailable -> 2, 1"
                    "icon": "\"~res:/Gfx/Lobby/icons/icon_statistic_m\""
                    "selected": "tankProgress.currentTab == eTankProgressTab.Statistics"
                eventActions:
                - ["ON_ITEM_PRESSED", "ON_TANK_RPOGRESS_TAB", "eTankProgressTab.Statistics"]
            UIIdentifierComponent:
                id: "sidebar_statistics"
        bindings:
        - ["selected", "tankProgress.currentTab == eTankProgressTab.Statistics"]
-   class: "UIControl"
    name: "CurrentTankXp"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfParent"
        UIChildComponent0:
            condition: "not isNull(modulesModel) and modulesModel.currentVehicle.vehicle.status != eVehicleNodeStatus.LOCKED and modulesModel.currentVehicle.vehicle.status != eVehicleNodeStatus.CAN_BE_RESEARCHED and (not modulesModel.isSeasonTank or modulesModel.currentVehicle.vehicle.tankStatsModel.isElite)"
            prototypePath: "~res:/UI/Screens3/Lobby/StatsInfoPanelItem.yaml"
            args:
                "enabled": "false"
                "resource": "{ \"type\" = when modulesModel.currentVehicle.vehicle.tankStatsModel.isElite -> ResourceType.elite_xp, ResourceType.xp; \"quantity\" = modulesModel.currentVehicle.vehicle.tankStatsModel.xp; }"
                "serverTime": "session.serverTime"
                "isCurrencyPlusVisible": "false"
        UIChildComponent1:
            condition: "not isNull(modulesModel) and modulesModel.currentVehicle.vehicle.status != eVehicleNodeStatus.LOCKED and modulesModel.currentVehicle.vehicle.status != eVehicleNodeStatus.CAN_BE_RESEARCHED and modulesModel.isSeasonTank and not isNull(modulesModel.progressingNode)"
            prototypePath: "~res:/UI/Screens3/Lobby/StatsInfoPanelItem.yaml"
            args:
                "customQuantity": "when session.artefacts.artefactIds.Contains(modulesModel.progressingNode.module.price.name) -> session.artefacts.artefactIds[modulesModel.progressingNode.module.price.name], 0"
                "resource": "modulesModel.progressingNode.module.price"
                "isCurrencyPlusVisible": "false"
                "enabled": "false"
    bindings:
    - ["visible", "not isNull(modulesModel) and modulesModel.currentVehicle.vehicle.status != eVehicleNodeStatus.LOCKED and modulesModel.currentVehicle.vehicle.status != eVehicleNodeStatus.CAN_BE_RESEARCHED"]
