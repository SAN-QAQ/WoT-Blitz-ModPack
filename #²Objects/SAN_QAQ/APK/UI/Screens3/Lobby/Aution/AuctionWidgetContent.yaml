Header:
    version: 161
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/Paginator/Paginator.yaml"
Prototypes:
-   class: "UIControl"
    name: "AuctionWidgetContent"
    input: false
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Auction/AuctionWidgetContent.animation"
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
        UIDataParamsComponent:
            params:
            - ["int64", "serverTime", "1561565973L", "1561565973L"]
            - ["AuctionHangarEntry", "data", "{ }", "{ }"]
            - ["eScreenSizeType", "deviceType", "eScreenSizeType.Large", "eScreenSizeType.Large"]
            - ["control", "imageOverlay", "null", "null"]
            - ["control", "imageUnderlay", "null", "null"]
            - ["vector4", "ltrbSafeZone", "vec4(0.000000, 0.000000, 0.000000, 0.000000)", "vec4(16.000000, 16.000000, 16.000000, 16.000000)"]
            events:
            - "ON_TOUCH"
        UIDataLocalVarsComponent:
            data:
            - ["float", "pageWidth", "96.000000"]
            - ["int", "leftIndex", "data.currentWidgetIndex"]
            - ["int", "rightIndex", "data.currentWidgetIndex"]
            - ["float", "leftPosition", "0.000000"]
            - ["float", "rightPosition", "0.000000"]
            - ["float", "leftProportion", "1.000000"]
            - ["float", "rightProportion", "1.000000"]
            - ["float", "slideShowTime", "10"]
            - ["float", "paginatorProgress", "1.000000"]
            - ["bool", "pageChanging", "false"]
            - ["bool", "swipeStarted", "false"]
            - ["float", "lastPaginatorProgress", "paginatorProgress"]
            - ["float", "startPaginatorProgress", "1.000000"]
            - ["int", "paginatorAnchor", "10"]
            - ["vector2", "imageSize", "vec2(96.000000, 96.000000)"]
        UIDataLocalBindingsComponent:
            data:
            - ["int", "pageCount", "when (data.state == eAuctionState.Active) -> data.activedSlots.Size(), 0"]
            - ["bool", "isProcessStage", "true"]
            - ["float", "farPosition", "-pageWidth"]
            - ["bool", "isReady", "false"]
            - ["bool", "showTimer", "true"]
            - ["string", "hintInfo", "when (data.state == eAuctionState.Preparation) -> localize(\"auction-event-2025-newyear/StatePreparationShort\"), when (data.state == eAuctionState.Intermission) -> localize(\"auction-event-2025-newyear/StateIntermissionShort\"), when (data.state == eAuctionState.Close) -> localize(\"auction-event-2025-newyear/StateCloseShort\"), \"\""]
            - ["string", "backgroundURL", "data.resources.graphics[\"EventWidgetBGUrl\"]"]
            - ["string", "timerIcon", "\"~res:/Gfx/Lobby/icons/icon_timer\""]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Auction/AuctionWidgetContent.actions"
        UIDataOnEventComponent0:
            eventName: "CHANGED_SELECTED_ITEM"
            modelFieldExpression: "data.currentWidgetIndex"
            dataExpression: "_event"
        UIDataOnEventComponent1:
            eventName: "GO_TO_NEXT"
            modelFieldExpression: "data.currentWidgetIndex"
            dataExpression: "when (data.currentWidgetIndex + 1) < pageCount -> (data.currentWidgetIndex + 1), 0"
        UIEventOnDataComponent0:
            watchedDataExpression: "data.currentWidgetIndex"
            eventName: "START_SLIDE_SHOW"
            eventData: "startPaginatorProgress"
        UIEventOnDataComponent1:
            watchedDataExpression: "pageCount"
            eventName: "OnPageCountChanged"
            broadcast: false
    children:
    -   class: "UIControl"
        name: "AuctionContent"
        visible: true
        input: false
        components:
            UIOpacityComponent:
                opacity: 1.000000
            LinearLayout:
                orientation: "TopDown"
                padding: "0"
                skipInvisible: false
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
                verticalValue: 100.000000
        children:
        -   class: "UIControl"
            name: "AuctionWrapper"
            pivot: [0.500000, 0.500000]
            input: false
            components:
                Anchor:
                    hCenterAnchorEnabled: true
                    vCenterAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfLastChild"
                    verticalPolicy: "PercentOfLastChild"
            children:
            -   class: "UIControl"
                name: "Underlay"
                input: false
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    UIChildComponent0:
                        childType: "kControl"
                        condition: "not isNull(imageUnderlay)"
                        control: "imageUnderlay"
            -   class: "UIControl"
                name: "Control_1"
                visible: true
                input: false
                components:
                    Background:
                        drawType: "DRAW_SCALE_PROPORTIONAL_ONE"
                        perPixelAccuracy: "PER_PIXEL_ACCURACY_FORCED"
                    ClipContent:
                        top: false
                        bottom: false
                    UIUrlImageComponent:
                        placeholderScenePath: "~res:/UI/Screens3/Common/LoadingOverlay.yaml"
                        placeholderControlName: "LoadingOverlay"
                        checkUpdate: true
                        imageLoadedEvent: ""
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        verticalPolicy: "FixedSize"
                    UIChildComponent0:
                        childType: "kControl"
                        condition: "pageCount > 0"
                        control: "ContentWarpSlider"
                    UIChildComponent1:
                        childType: "kControl"
                        condition: "pageCount == 0"
                        control: "ControlHint"
                bindings:
                - ["UIUrlImageComponent.imageUrl", "backgroundURL"]
                - ["SizePolicy.horizontalValue", "pageWidth"]
                - ["SizePolicy.verticalValue", "pageWidth"]
        -   class: "UIControl"
            name: "TopWrapper"
            position: [0.000000, 96.000000]
            visible: true
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfFirstChild"
            children:
            -   class: "UIControl"
                name: "TimerWrapper"
                input: false
                components:
                    Anchor:
                        leftAnchorEnabled: false
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: false
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalValue: 100.000000
                        horizontalFormula: "when maxChild < 80 -> 80, maxChild > imageSize.X + ltrbSafeZone.X + ltrbSafeZone.Z -> imageSize.X + ltrbSafeZone.X + ltrbSafeZone.Z, maxChild"
                        verticalPolicy: "Formula"
                        verticalFormula: "max(maxChild, 24)"
                bindings:
                - ["visible", "showTimer"]
                children:
                -   class: "UIControl"
                    name: "Bg"
                    input: false
                    classes: "black-70-bg"
                    components:
                        Background:
                            drawType: "DRAW_FILL"
                        UIRoundedCornersComponent:
                            radius: "2"
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "PercentOfParent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                -   class: "UIControl"
                    name: "TimerHolder"
                    position: [15.000000, 2.000000]
                    input: false
                    components:
                        Anchor:
                            hCenterAnchorEnabled: true
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfFirstChild"
                            verticalPolicy: "PercentOfFirstChild"
                        UIChildComponent0:
                            childType: "kPrototype"
                            prototypePath: "~res:/UI/Screens3/Lobby/Common/Timer.yaml"
                            args:
                                "serverTime": "serverTime"
                                "time": "data.finishTime"
                                "bgStyle": "\"black-70-bg\""
                                "customIcon": "timerIcon"
                    bindings:
                    - ["visible", "not isReady"]
                -   class: "UIControl"
                    name: "ClaimLabel"
                    input: false
                    classes: "t-caption bold white-wild-sand-text"
                    components:
                        UITextComponent:
                            text: "blitz_birthday_event/get_reward/button"
                        Anchor:
                            hCenterAnchorEnabled: true
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfContent"
                            verticalPolicy: "PercentOfContent"
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Font.style.yaml"
                    bindings:
                    - ["visible", "isReady"]
    -   class: "UIControl"
        name: "PaginatorContainer"
        input: false
        components:
            Anchor:
                leftAnchorEnabled: true
                leftAnchor: 8.000000
                rightAnchorEnabled: false
                rightAnchor: 0.000000
                topAnchorEnabled: true
                bottomAnchorEnabled: false
            Background:
                usePostProcessedSprite: true
            UIPostProcessTextureComponent0:
                materialPath: "~res:/Materials.custom/2d.Textured.Blur.material"
                needClearAlphaAfterRender: true
                scale: 0.500000
                useVirtualCoordinateSystem: true
                minFilter: "Linear"
                magFilter: "Linear"
            UIPostProcessTextureComponent1:
                materialPath: "~res:/Materials.custom/2d.Textured.HBlur.material"
                scale: 0.500000
                useVirtualCoordinateSystem: true
                minFilter: "Linear"
                magFilter: "Linear"
            UIPostProcessTextureComponent2:
                materialPath: "~res:/Materials.custom/2d.Textured.UpscaleClamp.material"
                scale: 0.500000
                useVirtualCoordinateSystem: true
                minFilter: "Linear"
                magFilter: "Linear"
            UIRoundedCornersComponent:
                radius: "8"
            SizePolicy:
                horizontalPolicy: "PercentOfLastChild"
                verticalPolicy: "FixedSize"
                verticalValue: 0.000000
        bindings:
        - ["visible", "pageCount > 0"]
        - ["Anchor.topAnchor", "paginatorAnchor"]
        children:
        -   prototype: "Paginator/Paginator"
            name: "Paginator"
            components:
                Anchor:
                    vCenterAnchorEnabled: true
                UIDataParamsComponent:
                    args:
                        "points": "data.activedSlotIndexes"
                        "pointSize": "4"
                        "PointCellWidth": "10"
                        "PointCellHeight": "10"
                        "selectedItem": "when data.currentWidgetIndex < data.activedSlotIndexes.Size() -> data.currentWidgetIndex, 0"
                        "progressVisible": "true"
                        "progress": "when swipeStarted -> lastPaginatorProgress, paginatorProgress"
                        "invert": "true"
Slots:
-   class: "UIControl"
    name: "ContentWarpSlider"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 96.000000
            verticalPolicy: "FixedSize"
            verticalValue: 96.000000
    children:
    -   class: "UIControl"
        name: "AuctioinBoxHolder"
        pivot: [0.500000, 1.000000]
        visible: true
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
                bottomAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "PercentOfFirstChild"
                verticalPolicy: "PercentOfFirstChild"
            UISwipeComponent:
                mode: "Page"
                direction: "RightLeft"
                swipeOffsetEvent: "SwipeOffset"
                swipeOffsetEventData: "_leftIndex, _rightIndex, _leftPosition, _rightPosition, _leftProportion, _rightProportion, _isInertion"
                swipeStartedEvent: "SwipeStarted"
                swipeFinishedEvent: "SwipeFinished"
                swipeCancelEvent: "SwipeCanceled"
                pagesLooped: true
                pageChangedEvent: "PageChanged"
                pageChangedEventData: "_pageIndex"
                pageChangingEvent: "PageChanging"
                pageChangingEventData: "_pageIndex"
            UIRepeatComponent:
                control: "~res:/UI/Screens3/Lobby/Auction/AuctionWrapContent.yaml"
                dataContainer: "data.activedSlots"
                args:
                    "data": "_item"
                    "resource": "data.resources"
                    "serverTime": "serverTime"
                    "index": "_index"
                    "hidden": "_index != leftIndex and _index != rightIndex"
                    "width": "pageWidth"
                    "point": "when _index == leftIndex -> leftPosition, (when _index == rightIndex -> rightPosition, farPosition)"
                    "imageOverlay": "imageOverlay"
                    "deviceType": "deviceType"
                    "isAnimated": "isAnimated"
                eventActions: []
        bindings:
        - ["UISwipeComponent.pageCount", "pageCount"]
        - ["UISwipeComponent.currentPageIndex", "when data.currentWidgetIndex < pageCount -> data.currentWidgetIndex, 0"]
    -   class: "UIControl"
        name: "Overlay"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
            UIChildComponent0:
                childType: "kControl"
                condition: "not isNull(imageOverlay)"
                control: "imageOverlay"
-   class: "UIControl"
    name: "ControlHint"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
    children:
    -   class: "UIControl"
        name: "Title"
        size: [96.000000, 80.000000]
        input: false
        classes: "t-caption bold white-wild-sand-text"
        components:
            UITextComponent:
                colorInheritType: "COLOR_IGNORE_PARENT"
                multiline: "MULTILINE_DISABLED"
                fitting: "FITTING_POINTS"
                align: ["RIGHT", "VCENTER"]
            Anchor:
                enabled: true
                leftAnchorEnabled: false
                leftAnchor: 0.000000
                hCenterAnchorEnabled: false
                rightAnchorEnabled: true
                rightAnchor: 2.000000
                vCenterAnchorEnabled: false
                vCenterAnchor: 0.000000
                bottomAnchorEnabled: true
                bottomAnchor: 25.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                horizontalValue: 100.000000
                verticalPolicy: "PercentOfContent"
                verticalValue: 80.000000
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["UITextComponent.text", "hintInfo"]
