Header:
    version: 157
Prototypes:
-   class: "UIControl"
    name: "RewardBig"
    classes: "battlepass-reward button-open-sound"
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Common/Resource/RewardBigOnInit.animation"
        UIOpacityComponent: {}
        SizePolicy:
            horizontalPolicy: "PercentOfChildrenSum"
            verticalPolicy: "PercentOfChildrenSum"
        UIAttachLayoutMasterComponent: {}
        UIInputEventComponent:
            onTouchUpInside: "ON_REWARD_CLICKED"
        UIDataParamsComponent:
            params:
            - ["bool", "showInfoButton", "false", "false"]
            - ["bool", "ownedItem", "false", "false"]
            - ["string", "vehicleIconWithCamo", "\"\"", "\"\""]
            - ["string", "attachId", "\"\"", "\"\""]
            - ["bool", "isClickable", "false", "false"]
            - ["ResourceDetailed", "reward", "null", "{ \"type\" = ResourceType.premium; }"]
            - ["vector2", "pivot", "vec2(0.000000, 0.000000)", "vec2(0.000000, 0.000000)"]
            - ["vector2", "scale", "vec2(1.000000, 1.000000)", "vec2(1.000000, 1.000000)"]
            - ["float", "opacity", "1.000000", "1.000000"]
            - ["bool", "showUnlockStub", "false", "false"]
            - ["bool", "showRewardText", "true", "true"]
            events:
            - "ON_REWARD_CLICKED"
        UIDataLocalBindingsComponent:
            data:
            - ["bool", "isBasicReward", "reward.type == ResourceType.gold or reward.type == ResourceType.free_xp or reward.type == ResourceType.elite_xp or reward.type == ResourceType.premium or reward.type == ResourceType.xp or reward.type == ResourceType.tankmenXP or reward.type == ResourceType.credits or reward.type == ResourceType.slots"]
            - ["string", "basicTitle", "when reward.type == ResourceType.credits -> \"shop/Credits\", reward.type == ResourceType.free_xp -> \"#battle_results:DetailsPage/ExperiencePage/FreeXp\", reward.type == ResourceType.gold -> \"shop/Gold\", reward.type == ResourceType.premium -> \"storage/Items/PremiumAccount/Title\", reward.type == ResourceType.tankmenXP -> \"#battle_results:DetailsPage/ExperiencePage/CrewXp\", reward.type == ResourceType.xp -> \"#battle_results:DetailsPage/ExperiencePage/Xp\", \"\""]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Common/Resource/RewardBig.actions"
        Sound: {}
        StyleSheet:
            styles: "~res:/UI/Screens3/ButtonSound.style.yaml;~res:/UI/Screens3/Common/Hover.style.yaml"
    bindings:
    - ["enabled", "opacity > 0 and isClickable"]
    - ["input", "opacity > 0 and isClickable"]
    - ["UIOpacityComponent.opacity", "opacity"]
    - ["UIAttachLayoutMasterComponent.attachId", "attachId"]
    children:
    -   class: "UIControl"
        name: "Content"
        pivot: [0.500000, 0.500000]
        input: false
        classes: "content-area"
        components:
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "firstChild"
                verticalPolicy: "Formula"
                verticalFormula: "max (firstChild, parentLine)"
            StyleSheet:
                styles: "~res:/UI/Screens3/Common/Touch.style.yaml"
        children:
        -   class: "UIControl"
            name: "ContentWrapper"
            input: false
            components:
                UIOpacityComponent: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfLastChild"
                    verticalPolicy: "Formula"
                    verticalFormula: "max (lastChild, parentLine)"
            bindings:
            - ["UIOpacityComponent.opacity", "when ownedItem -> 0.500000, 1"]
            children:
            -   class: "UIControl"
                name: "Bg"
                input: false
                components:
                    Background:
                        usePostProcessedSprite: true
                    UIPostProcessTextureComponent0:
                        materialPath: "~res:/Materials.custom/2d.Textured.Blur.material"
                        needClearAlphaAfterRender: true
                        scale: 0.500000
                        useVirtualCoordinateSystem: true
                        minFilter: "Linear"
                        magFilter: "Linear"
                    UIPostProcessTextureComponent1:
                        materialPath: "~res:/Materials.custom/2d.Textured.HBlur.material"
                        scale: 0.500000
                        useVirtualCoordinateSystem: true
                        minFilter: "Linear"
                        magFilter: "Linear"
                    UIPostProcessTextureComponent2:
                        materialPath: "~res:/Materials.custom/2d.Textured.UpscaleClamp.material"
                        scale: 0.500000
                        useVirtualCoordinateSystem: true
                        minFilter: "Linear"
                        magFilter: "Linear"
                    UIRoundedCornersComponent:
                        radius: "8"
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
            -   class: "UIControl"
                name: "ContentHolder"
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        topAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        childType: "kControl"
                        condition: "reward.type == ResourceType.vehicle and not isNull(reward.vehicle)"
                        control: "VehicleHolder"
                    UIChildComponent1:
                        childType: "kControl"
                        condition: "reward.type == ResourceType.stuff and not isNull(reward.stuff)"
                        control: "StuffHolder"
                    UIChildComponent2:
                        childType: "kControl"
                        condition: "(isBasicReward and not isNull(reward.basic)) or reward.type == ResourceType.equipment_slots"
                        control: "BasicHolder"
                    UIChildComponent3:
                        childType: "kControl"
                        condition: "reward.type == ResourceType.unlocks"
                        control: "UnlockHolder"
                    UIChildComponent4:
                        childType: "kControl"
                        condition: "reward.type == ResourceType.module and not isNull(reward.module)"
                        control: "ModuleHolder"
            -   class: "UIControl"
                name: "InfoButton"
                pivot: [0.500000, 0.500000]
                input: false
                components:
                    UITextureComponent:
                        spritePath: "~res:/Gfx/Lobby/icons/icon_info_xs"
                    Anchor:
                        rightAnchorEnabled: true
                        rightAnchor: 8.000000
                        topAnchorEnabled: true
                        topAnchor: 8.000000
                        bottomAnchorEnabled: false
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 24.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 24.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/ButtonSound.style.yaml;~res:/UI/Screens3/Common/Hover.style.yaml;~res:/UI/Screens3/Common/Touch.style.yaml"
                bindings:
                - ["visible", "showInfoButton and reward.type == ResourceType.vehicle"]
        -   class: "UIControl"
            name: "Mark"
            input: false
            components:
                Anchor:
                    rightAnchorEnabled: true
                    rightAnchor: -4.000000
                    topAnchorEnabled: true
                    topAnchor: -4.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfMaxChild"
                    verticalPolicy: "PercentOfMaxChild"
                UIChildComponent0:
                    condition: "ownedItem"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/CheckMark.yaml"
                    args:
                        "isVisible": "true"
            bindings:
            - ["visible", "ownedItem"]
Slots:
-   class: "UIControl"
    name: "BasicHolder"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/RewardBigContent.yaml"
            args:
                "image": "ImageHolder"
                "timer": "null"
                "title": "when showRewardText -> basicTitle, \"\""
                "description": "\"\""
                "quantity": "when not showRewardText -> \"\", reward.type == ResourceType.premium and toDays(reward.basic.quantity) > 0L -> str(toDays(reward.basic.quantity)) + localize(\"#common:Time/Days\"), reward.type == ResourceType.premium and toHours(reward.basic.quantity) > 0L -> str(toHours(reward.basic.quantity)) + localize(\"#common:Time/Hours\"), reward.type == ResourceType.premium -> str(reward.basic.quantity / 60) + localize(\"#common:Time/Minutes\"), reward.type == ResourceType.equipment_slots -> \"Ã—\" + str1000Separated(reward.devices.amount), str1000Separated(reward.basic.quantity)"
                "imageBg": "\"\""
-   class: "UIControl"
    name: "StuffHolder"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/RewardBigContent.yaml"
            args:
                "image": "ImageHolder"
                "timer": "when showRewardText and reward.stuff.lifetime > 0L -> TimerHolder, null"
                "title": "when not showRewardText -> \"\", reward.stuff.title"
                "description": "\"\""
                "quantity": "when not showRewardText -> \"\", \"Ã—\" + str1000Separated(reward.stuff.quantity)"
                "imageBg": "\"\""
-   class: "UIControl"
    name: "UnlockHolder"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/RewardBigContent.yaml"
            args:
                "image": "ImageHolder"
                "timer": "null"
                "title": "when not showRewardText -> \"\", reward.unlock.title"
                "description": "when not showRewardText -> \"\",  reward.unlock.kind == eCamouflageKind.CUSTOM_SET -> \"#hangar_showcase:CustomSet\", \"#hangar_showcase:Camouflage\""
                "quantity": "\"\""
                "imageBg": "\"\""
-   class: "UIControl"
    name: "VehicleHolder"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/RewardBigContent.yaml"
            args:
                "image": "ImageHolder"
                "timer": "null"
                "titleContent": "when not showRewardText -> null, VehicleTitle"
                "title": "\"\""
                "description": "when not showRewardText -> \"\", str(reward.vehicle.info.tankClass, eTankClass, \"localizationString\")"
                "quantity": "\"\""
                "imageBg": "when empty(reward.vehicle.info.subnation) -> \"~res:/Gfx/Lobby/flags/flag_tank-node_I_\" + str(reward.vehicle.info.nation, eNation, \"autotests\"), \"~res:/Gfx/Lobby/flags/flag_tank-node_I_\" + reward.vehicle.info.subnation"
                "vehicle": "reward.vehicle.info"
-   class: "UIControl"
    name: "ImageHolder"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/Detailed/IconXLDeprecated.yaml"
            args:
                "vehicleIconWithCamo": "vehicleIconWithCamo"
                "resource": "reward"
                "showUnlockStub": "showUnlockStub"
                "showVehicleLabel": "false"
-   class: "UIControl"
    name: "ModuleHolder"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/RewardBigContent.yaml"
            args:
                "image": "ImageHolder"
                "timer": "null"
                "title": "when not showRewardText -> \"\", localize(reward.module.imageCode)"
                "description": "when not showRewardText -> \"\", localize(\"vehicleModule\")"
                "quantity": "\"\""
                "imageBg": "\"\""
-   class: "UIControl"
    name: "TimerHolder"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfFirstChild"
            verticalPolicy: "PercentOfFirstChild"
        UIChildComponent0:
            childType: "kPrototype"
            condition: "reward.stuff.lifetime > 0L"
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Timer.yaml"
            args:
                "serverTime": "0L"
                "time": "reward.stuff.lifetime"
-   class: "UIControl"
    name: "VehicleTitle"
    input: false
    components:
        UITextComponent:
            fitting: "FITTING_POINTS"
        Anchor:
            hCenterAnchorEnabled: true
            bottomAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "parent - 8"
            verticalPolicy: "PercentOfContent"
        StyleSheet:
            styles: "~res:/UI/Screens3/Font.style.yaml;"
    bindings:
    - ["visible", "not isNull(reward.vehicle)"]
    - ["classes", "\"t-subtitle bold \" + (when reward.vehicle.info.isPremium or reward.vehicle.stats.isPremiumized -> \"yellow-lightning-text\", reward.vehicle.info.isCollectible -> \"blue-rimmi-text\", \"white-wild-sand-text\")"]
    - ["UITextComponent.text", "when not isNull(reward.vehicle) -> localize(reward.vehicle.info.shortName), \"\""]