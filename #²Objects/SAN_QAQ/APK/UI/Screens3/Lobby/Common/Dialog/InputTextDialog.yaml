Header:
    version: 153
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
- "~res:/UI/Screens3/Common/OverlayBlur.yaml"
- "~res:/UI/Screens3/Common/TextFieldWithValidator.yaml"
Prototypes:
-   class: "UIControl"
    name: "InputTextDialog"
    size: [960.000000, 640.000000]
    input: true
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Common/Dialog/DialogOpen.animation"
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        UILayoutEventComponent:
            visibilityMarginsEvent: "KEYBOARD_EVENT"
            visibilityMarginsEventData: "_visibilityMargins.bottom"
        ModalInput: {}
        UIVirtualActionEventComponent0:
            virtualKeyAction: "Escape"
            keyDownEvent: "BACK_SHORTCUT"
        UIVirtualActionEventComponent1:
            virtualKeyAction: "Extra2"
            keyDownEvent: "ENTER_SHORTCUT"
        UIShortcutEventComponent:
            shortcuts: "BACK_SHORTCUT,Back;BACK_SHORTCUT,Escape;ENTER_SHORTCUT,Enter"
        UIDataParamsComponent:
            params:
            - ["CustomRegionsYamlCredentials", "customInputInfo", "null", "{ }"]
            - ["bool", "closeOnAcceptAction", "true", "true"]
            - ["bool", "backEnabled", "true", "true"]
            - ["control", "acceptButtonControl", "null", "null"]
            - ["eDialogType", "type", "eDialogType.INFO", "eDialogType.PUSH"]
            - ["string", "validatorRegex", "\"\"", "\"^(https?:\\/\\/.*\\.yaml)|(\\/.*\\.yaml)$\""]
            - ["string", "defaultText", "\"\"", "\"default text\""]
            - ["string", "filterRegex", "\"\"", "\"\""]
            - ["string", "textFieldHint", "\"\"", "\"hint\""]
            - ["string", "header", "\"Header\"", "\"Header\""]
            - ["string", "headerImage", "\"\"", "\"~res:/Gfx/UI/Tutorial/icon_congratulations.psd\""]
            - ["string", "applyButtonText", "\"#APPLY\"", "\"APPLY\""]
            - ["string", "resetButtonText", "\"#RESET\"", "\"RESET\""]
            - ["string", "cancelButtonText", "\"#Cancel\"", "\"CANCEL\""]
            - ["control", "metaphorContent", "null", "null"]
            - ["bool", "reversedButtons", "false", "false"]
            - ["bool", "acceptButtonEnabled", "true", "true"]
            - ["int", "maxInputLength", "100", "100"]
            events:
            - "ResetPressed"
            - "CancelPressed"
            - "InputChanged(string text, bool valid)"
            - "ApplyPressed"
        UIDataLocalVarsComponent:
            data:
            - ["float", "keyboardHeight", "0"]
            - ["bool", "inputTextValid", "true"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Common/Dialog/InputDialog.actions"
        UIDataOnEventComponent0:
            eventName: "InputChanged"
            modelFieldExpression: "inputTextValid"
            dataExpression: "_event1"
    children:
    -   prototype: "OverlayBlur/BlurAndFade"
        name: "BlurAndFade"
    -   class: "UIControl"
        name: "ScrollContainer"
        size: [200.000000, 200.000000]
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "PercentOfParent"
        children:
        -   class: "UIScrollView"
            name: "Scroll"
            autoUpdate: true
            centerContent: true
            components:
                Anchor:
                    leftAnchorEnabled: true
                    rightAnchorEnabled: true
                    rightAnchor: 0.000000
                    topAnchorEnabled: false
                    bottomAnchorEnabled: false
                    bottomAnchor: 0.000000
                LinearLayout:
                    orientation: "TopDown"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "Formula"
                    verticalFormula: "parent - keyboardHeight"
            children:
            -   class: "UIScrollViewContainer"
                name: "scrollContainerControl"
                position: [640.000000, 240.000000]
                scrollDirection: "kVertical"
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                children:
                -   class: "UIControl"
                    name: "TapArea"
                    components:
                        Anchor:
                            hCenterAnchorEnabled: true
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "Formula"
                            horizontalFormula: "parent - 32"
                            verticalPolicy: "Formula"
                            verticalFormula: "parent - 32"
                        UIInputEventComponent:
                            onTouchUpInside: "OPTIONAL_ACTION"
                            onTouchUpInsideData: "true"
                -   class: "UIControl"
                    name: "DialogContent"
                    pivot: [0.500000, 0.500000]
                    classes: "black-50-bg"
                    components:
                        Background:
                            drawType: "DRAW_STRETCH_BOTH"
                            sprite: "~res:/Gfx/Lobby/backgrounds/bg_r16.psd"
                            leftRightStretchCap: 16.000000
                            topBottomStretchCap: 16.000000
                        UIOpacityComponent: {}
                        Anchor:
                            hCenterAnchorEnabled: true
                            vCenterAnchorEnabled: true
                        LinearLayout:
                            orientation: "TopDown"
                        SizePolicy:
                            horizontalPolicy: "FixedSize"
                            horizontalValue: 448.000000
                            verticalPolicy: "Formula"
                            verticalFormula: "when parent == 0 -> childrenSum,min(childrenSum, parent-80)"
                        UIChildComponent0: {}
                        StyleSheet:
                            styles: "~res:/UI/Screens3/Color.style.yaml"
                    children:
                    -   class: "UIControl"
                        name: "Metaphor"
                        components:
                            Background:
                                align: ["HCENTER", "BOTTOM"]
                            Anchor:
                                hCenterAnchorEnabled: true
                                topAnchorEnabled: true
                                topAnchor: -76.000000
                            IgnoreLayout: {}
                            SizePolicy:
                                horizontalPolicy: "FixedSize"
                                verticalPolicy: "FixedSize"
                            UIChildComponent0:
                                childType: "kControl"
                                condition: "not isNull(metaphorContent) and headerImage.empty()"
                                control: "metaphorContent"
                        bindings:
                        - ["visible", "(type == eDialogType.INFO or type == eDialogType.CHOOSE) and (headerImage != \"\" or not isNull(metaphorContent))"]
                        - ["input", "headerImage != \"\" or not isNull(metaphorContent)"]
                        - ["Background.sprite", "headerImage"]
                    -   class: "UIControl"
                        name: "Header"
                        input: false
                        components:
                            LinearLayout:
                                orientation: "TopDown"
                                padding: "24"
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "PercentOfMaxChild"
                        bindings:
                        - ["visible", "(type == eDialogType.INFO and header != \"\") or type == eDialogType.PUSH or type == eDialogType.FILL or type == eDialogType.SELECT"]
                        children:
                        -   class: "UIControl"
                            name: "Value"
                            input: false
                            classes: "t-subtitle regular white-wild-sand-text"
                            components:
                                UITextComponent:
                                    colorInheritType: "COLOR_IGNORE_PARENT"
                                    multiline: "MULTILINE_ENABLED"
                                    forceBiDiSupport: false
                                Anchor:
                                    hCenterAnchorEnabled: true
                                SizePolicy:
                                    horizontalPolicy: "Formula"
                                    horizontalFormula: "min(parent - 48, content)"
                                    verticalPolicy: "PercentOfContent"
                                StyleSheet:
                                    styles: "~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Font.style.yaml"
                            bindings:
                            - ["UITextComponent.text", "localize(header)"]
                    -   class: "UIControl"
                        name: "SeparatorTop"
                        input: false
                        classes: "white-wild-sand-10-bg"
                        components:
                            Background:
                                drawType: "DRAW_FILL"
                            UIOpacityComponent: {}
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "FixedSize"
                                verticalValue: 1.000000
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Color.style.yaml"
                        bindings:
                        - ["visible", "type == eDialogType.FILL"]
                    -   prototype: "TextFieldWithValidator/TextField"
                        name: "InputTextField"
                        position: [24.000000, 72.000000]
                        size: [400.000000, 48.000000]
                        visible: true
                        components:
                            SizePolicy:
                                horizontalPolicy: "Ignore"
                            UIAttachLayoutMasterComponent:
                                attachId: "LOGIN"
                            UIDataParamsComponent:
                                args:
                                    "keyboardType": "eKeyboardType.KEYBOARD_TYPE_URL"
                                    "textFieldType": "eTextFieldType.Text"
                                    "isEnabled": "true"
                                    "canCleaned": "true"
                                    "validatorRegExp": "validatorRegex"
                                    "filterRegExp": "filterRegex"
                                    "validatedWithError": "customInputInfo.validationState == eRegionsYamlValidationState.Invalid"
                                    "showValidate": "customInputInfo.validationState != eRegionsYamlValidationState.None"
                                    "placeholderText": "textFieldHint"
                                    "text": "defaultText"
                                    "textStyle": "\"t-subtitle regular\""
                                    "placeholderTextColor": "\"white-wild-sand-50-text\""
                                    "bgStyle": "\"black-50-bg\""
                                    "leftIconImage": "\"~res:/Gfx/Lobby/icons/icon_search_s\""
                                    "maxLength": "maxInputLength"
                                eventActions:
                                - ["FIELD_CLICKED", "", ""]
                                - ["EDITING_STARTED", "", ""]
                                - ["TEXT_CHANGED", "InputChanged", "_event.text, _event.valid"]
                        children:
                        -   path: "Content"
                            size: [300.000000, 48.000000]
                            components:
                                Anchor:
                                    leftAnchorEnabled: true
                                LinearLayout:
                                    orientation: "LeftToRight"
                            children: []
                        -   path: "Error"
                            enabled: true
                    -   class: "UIControl"
                        name: "SeparatorBottom"
                        input: false
                        classes: "white-wild-sand-10-bg"
                        components:
                            Background:
                                drawType: "DRAW_FILL"
                            UIOpacityComponent: {}
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "FixedSize"
                                verticalValue: 1.000000
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Color.style.yaml"
                        bindings:
                        - ["visible", "type == eDialogType.FILL"]
                    -   class: "UIControl"
                        name: "Footer"
                        input: false
                        components:
                            LinearLayout:
                                padding: "24"
                                spacing: 24.000000
                            SizePolicy:
                                horizontalPolicy: "PercentOfParent"
                                verticalPolicy: "FixedSize"
                                verticalValue: 96.000000
                        bindings:
                        - ["visible", "type != eDialogType.SELECT"]
                        - ["LinearLayout.orientation", "when reversedButtons -> eOrientation.RightToLeft, eOrientation.LeftToRight"]
                        children:
                        -   prototype: "ButtonNoBlur/Button"
                            name: "CancelButton"
                            position: [25.000000, 24.000000]
                            size: [117.000000, 48.000000]
                            enabled: true
                            components:
                                UIDataParamsComponent:
                                    args:
                                        "enabled": "when not isNull(customInputInfo) -> customInputInfo.buttonsEnabled, true"
                                        "type": "eButtonType.ALTERNATIVE"
                                        "caption": "cancelButtonText"
                                    eventActions:
                                    - ["ON_CLICK_BUTTON", "CancelPressed", ""]
                        -   prototype: "ButtonNoBlur/Button"
                            name: "ResetButton"
                            position: [162.000000, 24.000000]
                            size: [118.000000, 48.000000]
                            components:
                                UIDataParamsComponent:
                                    args:
                                        "enabled": "when not isNull(customInputInfo) -> customInputInfo.buttonsEnabled, true"
                                        "type": "eButtonType.OPTIONAL_LIGHT"
                                        "caption": "resetButtonText"
                                    eventActions:
                                    - ["ON_CLICK_BUTTON", "ResetPressed", ""]
                        -   prototype: "ButtonNoBlur/Button"
                            name: "ApplyButton"
                            position: [303.000000, 24.000000]
                            size: [117.000000, 48.000000]
                            visible: true
                            enabled: true
                            selected: false
                            components:
                                UIDataParamsComponent:
                                    args:
                                        "enabled": "inputTextValid and (when not isNull(customInputInfo) -> customInputInfo.buttonsEnabled, true)"
                                        "caption": "applyButtonText"
                                    eventActions:
                                    - ["ON_CLICK_BUTTON", "ApplyPressed", ""]
                                UIChildComponent0:
                                    args:
                                        "bgIsVisible": "true"
