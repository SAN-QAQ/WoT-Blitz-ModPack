Header:
    version: 159
Prototypes:
-   class: "UIControl"
    name: "IconButton"
    components:
        SizePolicy:
            horizontalPolicy: "FixedSize"
            verticalPolicy: "FixedSize"
        UIInputEventComponent:
            onTouchUpInside: "ON_CLICK_BUTTON"
            blockDuplicatedEvents: true
        UIDataParamsComponent:
            params:
            - ["int", "flipImage", "0", "0"]
            - ["bool", "isRoundedProgressBar", "false", "true"]
            - ["float", "value", "0.000000", "0.400000"]
            - ["bool", "rounded", "false", "true"]
            - ["bool", "locked", "false", "false"]
            - ["bool", "visible", "true", "true"]
            - ["bool", "isBgVisible", "true", "true"]
            - ["string", "image", "\"\"", "\"~res:/Gfx/Lobby/icons/icon_statistic_m\""]
            - ["int", "buttonSize", "48", "48"]
            - ["int", "imageSize", "24", "24"]
            - ["float", "imageOpacity", "1.000000", "1.000000"]
            - ["eButtonType", "type", "eButtonType.OPTIONAL_LIGHT", "eButtonType.OPTIONAL_DARK"]
            - ["eButtonSound", "sound", "eButtonSound.UNKNOWN", "eButtonSound.UNKNOWN"]
            - ["bool", "enabled", "true", "true"]
            - ["bool", "hasSound", "true", "true"]
            - ["bool", "inputDisabled", "false", "false"]
            - ["bool", "isBadgeVisible", "false", "false"]
            - ["eBadgeType", "badgeType", "eBadgeType.Empty", "eBadgeType.Camouflage"]
            - ["string", "badgeValue", "\"\"", "\"2\""]
            - ["string", "iconColorStyle", "\"white-wild-sand-bg\"", "\"white-wild-sand-bg\""]
            events:
            - "ON_CLICK_BUTTON"
        UIDataLocalBindingsComponent:
            data:
            - ["string", "hoverStyle", "(when isBgVisible -> \"button-fade \", \"button-fade-non-hide \") + (when type == eButtonType.OPTIONAL_DARK or type == eButtonType.SCENE -> \"black-10-bg\", \"white-wild-sand-10-bg\")"]
            - ["eButtonSound", "soundType", "when not hasSound -> eButtonSound.UNKNOWN, sound != eButtonSound.UNKNOWN -> sound, type == eButtonType.POSITIVE or type == eButtonType.NO_BG or type == eButtonType.NO_BG_WHITE -> eButtonSound.OPEN, type == eButtonType.ALTERNATIVE -> eButtonSound.OK, type == eButtonType.ALTERNATIVE -> eButtonSound.OK, type == eButtonType.NEGATIVE -> eButtonSound.SELL, eButtonSound.CANCEL"]
            - ["string", "bgStyle", "when type == eButtonType.OPTIONAL_LIGHT -> \"white-wild-sand-15-bg\", type == eButtonType.OPTIONAL_DARK -> \"black-25-bg\", type == eButtonType.SCENE -> \"grey-shark-70-bg\", type == eButtonType.POSITIVE -> \"green-la-palma-bg\", \"\""]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Common/Button.actions"
        StyleSheet:
            styles: "~res:/UI/Screens3/Color.style.yaml"
    bindings:
    - ["visible", "visible"]
    - ["input", "locked"]
    - ["SizePolicy.horizontalValue", "buttonSize"]
    - ["SizePolicy.verticalValue", "buttonSize"]
    children:
    -   class: "UIControl"
        name: "TapArea"
        exclusiveInput: true
        classes: "button button-tap-area"
        components:
            UIOpacityComponent: {}
            Anchor:
                leftAnchorEnabled: true
                rightAnchorEnabled: true
                topAnchorEnabled: true
                bottomAnchorEnabled: true
            UIInputEventComponent:
                onTouchUpInside: "BUTTON_CLICKED"
                blockDuplicatedEvents: true
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Lobby/Common/Button.style.yaml"
        bindings:
        - ["enabled", "enabled and not locked"]
        - ["input", "not inputDisabled"]
        children:
        -   class: "UIControl"
            name: "Content"
            pivot: [0.500000, 0.500000]
            input: false
            classes: "content-area"
            components:
                Background: {}
                UIRoundedCornersComponent:
                    radius: "20"
                Anchor:
                    leftAnchorEnabled: true
                    rightAnchorEnabled: true
                    topAnchorEnabled: true
                    bottomAnchorEnabled: true
            children:
            -   class: "UIControl"
                name: "Background"
                input: false
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        leftRightStretchCap: 1.000000
                        topBottomStretchCap: 1.000000
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                bindings:
                - ["visible", "isBgVisible"]
                - ["classes", "bgStyle"]
                - ["Background.sprite", "when rounded -> \"~res:/Gfx/Shared/backgrounds/bg_r48\", \"~res:/Gfx/Lobby/backgrounds/bg_r1\""]
            -   class: "UIControl"
                name: "Fade"
                input: false
                components:
                    Background:
                        drawType: "DRAW_STRETCH_BOTH"
                        leftRightStretchCap: 1.000000
                        topBottomStretchCap: 1.000000
                    UIOpacityComponent: {}
                    IgnoreLayout: {}
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfParent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Lobby/Common/Button.style.yaml"
                bindings:
                - ["visible", "not rounded"]
                - ["classes", "hoverStyle"]
                - ["Background.sprite", "when rounded -> \"~res:/Gfx/Lobby/backgrounds/bg_r48\", \"~res:/Gfx/Lobby/backgrounds/bg_r1\""]
            -   class: "UIControl"
                name: "Icon"
                input: false
                components:
                    Background:
                        drawType: "DRAW_SCALE_PROPORTIONAL"
                        perPixelAccuracy: "PER_PIXEL_ACCURACY_ENABLED"
                    UIOpacityComponent: {}
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        verticalPolicy: "FixedSize"
                bindings:
                - ["classes", "iconColorStyle"]
                - ["Background.sprite", "image"]
                - ["Background.spriteModification", "flipImage"]
                - ["UIOpacityComponent.opacity", "imageOpacity"]
                - ["SizePolicy.horizontalValue", "imageSize"]
                - ["SizePolicy.verticalValue", "imageSize"]
            -   class: "UIControl"
                name: "RoundedProgressBar"
                size: [48.000000, 48.000000]
                pivot: [0.500000, 0.500000]
                input: false
                classes: "white-wild-sand-50-bg"
                components:
                    Background:
                        drawType: "DRAW_SCALE_TO_RECT"
                        sprite: "~res:/Gfx/Lobby/backgrounds/bg_circle-hollow_44"
                    UIClipPolygon: {}
                    RadialProgressComponent: {}
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "FixedSize"
                        horizontalValue: 44.000000
                        verticalPolicy: "FixedSize"
                        verticalValue: 44.000000
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml"
                bindings:
                - ["visible", "isRoundedProgressBar"]
                - ["RadialProgressComponent.progress", "value"]
            -   class: "UIControl"
                name: "BadgeHolder"
                size: [32.000000, 32.000000]
                input: false
                components:
                    Anchor:
                        rightAnchorEnabled: true
                        topAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfFirstChild"
                        verticalPolicy: "PercentOfFirstChild"
                    UIChildComponent0:
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/BadgeHolder.yaml"
                        args:
                            "value": "badgeValue"
                            "type": "badgeType"
                bindings:
                - ["visible", "isBadgeVisible"]
                - ["Anchor.rightAnchor", "when badgeValue == \" \" -> 4, -8"]
                - ["Anchor.topAnchor", "when badgeValue == \" \" -> 4, -8"]
