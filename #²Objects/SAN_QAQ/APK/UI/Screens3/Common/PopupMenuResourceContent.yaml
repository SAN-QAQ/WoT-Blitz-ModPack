Header:
    version: 161
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/GradesSmall.yaml"
- "~res:/UI/Screens3/Lobby/Common/ButtonNoBlur.yaml"
Prototypes:
-   class: "UIControl"
    name: "Content"
    input: false
    components:
        LinearLayout:
            orientation: "TopDown"
            spacing: 8.000000
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "max(parent, maxChild)"
            verticalPolicy: "PercentOfChildrenSum"
        UIDataParamsComponent:
            params:
            - ["TanksRankConfigurationModel", "rankConfig", "null", "{ }"]
            - ["bool", "turnOffChestPreview", "false", "false"]
            - ["bool", "showImageAndQuantity", "false", "false"]
            - ["bool", "isAlignLeft", "true", "false"]
            - ["string", "colorClass", "\"color=white-wild-sand-text\"", "\"color=white-wild-sand-text\""]
            - ["RewardPopupResource", "popupResource", "null", "{ \"resource\" = { \"type\" = ResourceType.slots; \"basic\" = { \"quantity\" = 2000000; }; \"stuff\" = null; }; }"]
            - ["eCurrentScreen", "currentScreen", "eCurrentScreen.kUnknown", "eCurrentScreen.kStory"]
            events:
            - "ON_CLICK_BUTTON"
            - "ON_ACTION(eArtefactAction actionType)"
        UIDataLocalVarsComponent:
            data:
            - ["bool", "buttonIsClicked", "false"]
        UIDataLocalBindingsComponent:
            data:
            - ["TankStats", "vehicleStats", "popupResource.vehicleStats"]
            - ["VehicleDataModel", "vehicleInfo", "popupResource.vehicleInfo"]
            - ["bool", "isInstalled", "popupResource.isInstalled"]
            - ["ArtefactAction", "action", "popupResource.primaryAction"]
            - ["bool", "isActionButtonVisible", "popupResource.showActions and (action.actionType == eArtefactAction.Use or action.actionType == eArtefactAction.Open or action.actionType == eArtefactAction.Install or action.actionType == eArtefactAction.Preview)"]
            - ["ResourceDetailed", "resource", "popupResource.resource"]
            - ["float", "maxTextWidth", "when showImageAndQuantity -> 288.000000, 368.000000"]
            - ["bool", "buttonVisible", "not isNull(resource.vehicle) or (not isNull(resource.stuff) and (resource.stuff.type == ArtefactType.coupon and not isNull(resource.stuff.coupon) and not resource.stuff.coupon.appliesToUnlocks.Empty() or resource.stuff.type == ArtefactType.profile_background or (resource.stuff.type == ArtefactType.reactions_pack and currentScreen != eCurrentScreen.kStory) or resource.stuff.type == ArtefactType.camo_unlock or resource.stuff.type == ArtefactType.quest_activator or (resource.stuff.type == ArtefactType.chest and not turnOffChestPreview) or resource.stuff.type == ArtefactType.decoration)) or (not isNull(resource.unlock) and resource.type == ResourceType.unlocks and (popupResource.suitableForAnyTank or (not isNull(vehicleStats) and not isNull(vehicleInfo))))"]
            - ["string", "alignStyle", "when isAlignLeft -> \" text-align-left\", \" text-align-center\""]
            - ["bool", "isBasicResource", "resource.type == ResourceType.gold or resource.type == ResourceType.free_xp or resource.type == ResourceType.premium or resource.type == ResourceType.xp or resource.type == ResourceType.tankmenXP or resource.type == ResourceType.credits or resource.type == ResourceType.slots or resource.type == ResourceType.equipment_slots"]
            - ["bool", "isStuff", "resource.type == ResourceType.stuff"]
            - ["bool", "isStuffQuest", "isStuff and not isNull(resource.stuff) and resource.stuff.type == ArtefactType.quest_activator and not isNull(resource.stuff.quest)"]
            - ["string", "name", "when resource.type == ResourceType.gold -> \"shop/Gold\", resource.type == ResourceType.credits -> \"shop/Credits\", resource.type == ResourceType.free_xp -> \"hangar/freeXP\", resource.type == ResourceType.xp -> \"hangar/XP\", resource.type == ResourceType.stuff -> resource.stuff.title, not isNull(resource.unlock) and resource.unlock.type == eItemType.CAMOUFLAGE -> (when resource.unlock.kind == eCamouflageKind.CUSTOM_SET -> localize(\"storage/Items/CustomSetUnlock/Title\", { \"camouflage\" = localize(resource.unlock.title); }), not (resource.unlock.kind == eCamouflageKind.UNKNOWN) -> localize(\"storage/Items/CamoUnlock/Title\", { \"camouflage\" = localize(resource.unlock.title); }), \"\"), resource.type == ResourceType.unlocks -> resource.unlock.title, resource.type == ResourceType.vehicle -> resource.vehicle.info.name, resource.type == ResourceType.premium -> \"storage/Items/PremiumAccount/Title\", resource.type == ResourceType.slots -> \"storage/Items/SlotCertificate/Title\", when resource.type == ResourceType.equipment_slots -> \"optionalDevice\", \"#Resource Name\""]
            - ["string", "description", "when resource.type == ResourceType.gold -> \"BattlePass/Tooltip/Gold\", resource.type == ResourceType.credits -> \"BattlePass/Tooltip/Silver\", resource.type == ResourceType.free_xp -> \"BattlePass/Tooltip/FreeXP\", resource.type == ResourceType.xp -> \"BattlePass/Tooltip/XP\", resource.type == ResourceType.stuff and resource.stuff.type == ArtefactType.resource and not isNull(popupResource.resourceProgress) and not empty(popupResource.features) -> popupResource.features, resource.type == ResourceType.stuff -> resource.stuff.description, resource.type == ResourceType.unlocks -> resource.unlock.description, resource.type == ResourceType.vehicle -> \"\", resource.type == ResourceType.premium -> \"BattlePass/Tooltip/Premium\", resource.type == ResourceType.slots -> localize(\"storage/Items/SlotCertificate/Description\", { \"slot\" = \"1\"; }), \"#Resource Description\""]
            - ["ArtefactGrade", "grade", "when not isStuff -> ArtefactGrade.unknown, resource.stuff.grade"]
            - ["string", "textStyle", "\"t-subtitle regular \" + colorClass + alignStyle"]
            - ["string", "titleStyle", "\"t-subtitle bold \" + colorClass + alignStyle"]
            - ["int", "quantity", "when resource.type == ResourceType.stuff -> resource.stuff.quantity, resource.type == ResourceType.unlocks -> resource.unlock.quantity, resource.type == ResourceType.achievement -> 1, resource.type == ResourceType.equipment_slots -> resource.devices.amount, not isNull(resource.basic) -> resource.basic.quantity, 0"]
            - ["string", "itemQuantity", "when resource.type == ResourceType.real_currency -> resource.realCurrency.localizedValue, resource.type == ResourceType.premium and toDays(resource.basic.quantity) > 0L -> str(toDays(resource.basic.quantity)) + localize(\"#common:Time/Days\"), resource.type == ResourceType.premium and toHours(resource.basic.quantity) > 0L -> str(toHours(resource.basic.quantity)) + localize(\"#common:Time/Hours\"), resource.type == ResourceType.premium -> str(resource.basic.quantity / 60) + localize(\"#common:Time/Minutes\"), quantity < 1000000 -> str1000Separated(quantity), shortStr(quantity)"]
            - ["float", "maxTitleWidth", "maxTextWidth - (when buttonVisible -> 40, 0) - (when showImageAndQuantity -> 32, 0)"]
            - ["string", "previewKey", "when not empty(popupResource.previewString) -> popupResource.previewString, isStuff and resource.stuff.type == ArtefactType.chest -> \"Chest/Preview/Button\", \"BattlePass/Reward/InfoPopup/Button/Preview\""]
            - ["bool", "showTankRankRequirement", "(resource.type == ResourceType.unlocks and not isNull(resource.unlock) and resource.unlock.tankRank > 0) or (not isNull(resource.stuff) and not isNull(resource.stuff.coupon) and not resource.stuff.coupon.appliesToUnlocks.Empty() and resource.stuff.coupon.appliesToUnlocks[0].tankRank > 0)"]
        UIDataOnEventComponent0:
            eventName: "ON_ACTION"
            modelFieldExpression: "buttonIsClicked"
            dataExpression: "true"
        UIDataOnEventComponent1:
            eventName: "ON_CLICK_BUTTON"
            modelFieldExpression: "buttonIsClicked"
            dataExpression: "true"
    children:
    -   class: "UIControl"
        name: "TopContent"
        size: [380.000000, 48.000000]
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
            LinearLayout:
                orientation: "LeftToRight"
                padding: "16"
                spacing: 16.000000
                useRtl: true
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "max(parent, childrenSum + 32)"
                verticalPolicy: "PercentOfMaxChild"
        children:
        -   class: "UIControl"
            name: "Icon"
            input: false
            components:
                Anchor:
                    topAnchorEnabled: true
                SizePolicy:
                    horizontalPolicy: "PercentOfChildrenSum"
                    horizontalMin: 64.000000
                    verticalPolicy: "PercentOfChildrenSum"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "isBasicResource and not isNull(resource.basic)"
                    control: "BasicIcon"
                UIChildComponent1:
                    childType: "kControl"
                    condition: "resource.type == ResourceType.vehicle"
                    control: "VehicleIcon"
                UIChildComponent2:
                    childType: "kControl"
                    condition: "resource.type == ResourceType.stuff and not isNull(resource.stuff)"
                    control: "StuffIcon"
            bindings:
            - ["visible", "showImageAndQuantity"]
        -   class: "UIControl"
            name: "RightContent"
            size: [32.000000, 32.000000]
            input: false
            components:
                LinearLayout:
                    orientation: "TopDown"
                    spacing: 4.000000
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "max(maxChild, parentRest)"
                    verticalPolicy: "PercentOfChildrenSum"
            children:
            -   prototype: "GradesSmall/GradesSmall"
                name: "GradesSmall"
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        useRtl: true
                    UIDataParamsComponent:
                        args:
                            "grade": "grade"
            -   class: "UIControl"
                name: "TitleWrapper"
                size: [32.000000, 32.000000]
                input: false
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                        vCenterAnchorEnabled: true
                    LinearLayout:
                        orientation: "LeftToRight"
                        spacing: 16.000000
                        dynamicSpacing: true
                        useRtl: true
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalFormula: "min(maxTextWidth, max(parent, childrenSum))"
                        verticalPolicy: "PercentOfMaxChild"
                children:
                -   class: "UIControl"
                    name: "TitleAndQuantity"
                    input: false
                    components:
                        Anchor:
                            leftAnchorEnabled: true
                            leftAnchor: 16.000000
                            rightAnchorEnabled: true
                            rightAnchor: 16.000000
                        LinearLayout:
                            spacing: 8.000000
                        SizePolicy:
                            horizontalPolicy: "PercentOfChildrenSum"
                            verticalPolicy: "PercentOfMaxChild"
                    children:
                    -   class: "UIControl"
                        name: "Title"
                        input: false
                        components:
                            UITextComponent:
                                colorInheritType: "COLOR_IGNORE_PARENT"
                                multiline: "MULTILINE_ENABLED"
                                useRtlAlign: "USE_BY_SYSTEM"
                            SizePolicy:
                                horizontalPolicy: "Formula"
                                horizontalFormula: "min(content, maxTitleWidth)"
                                verticalPolicy: "PercentOfContent"
                            StyleSheet:
                                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Common/PopupMenu.style.yaml"
                        bindings:
                        - ["classes", "titleStyle"]
                        - ["UITextComponent.text", "localize(name)"]
                    -   class: "UIControl"
                        name: "Quantity"
                        size: [32.000000, 32.000000]
                        input: false
                        components:
                            Anchor:
                                vCenterAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfChildrenSum"
                                verticalPolicy: "PercentOfChildrenSum"
                            UIChildComponent0:
                                prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/ItemCount.yaml"
                                args:
                                    "stringedCount": "itemQuantity"
                                    "backgroundStyle": "\"white-wild-sand-15-bg\""
                                    "roundedCorners": "true"
                        bindings:
                        - ["visible", "showImageAndQuantity"]
                -   class: "UIControl"
                    name: "ButtonWrapper"
                    input: false
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "FixedSize"
                            horizontalValue: 24.000000
                            verticalPolicy: "FixedSize"
                            verticalValue: 24.000000
                    bindings:
                    - ["visible", "buttonVisible"]
                    children:
                    -   class: "UIControl"
                        name: "ButtonHolder"
                        exclusiveInput: true
                        components:
                            Anchor:
                                hCenterAnchorEnabled: true
                                vCenterAnchorEnabled: true
                            SizePolicy:
                                horizontalPolicy: "PercentOfFirstChild"
                                verticalPolicy: "PercentOfFirstChild"
                            UIChildComponent0:
                                prototypePath: "~res:/UI/Screens3/Lobby/Common/IconButtonNoBlur.yaml"
                                args:
                                    "inputDisabled": "buttonIsClicked"
                                    "enabled": "true"
                                    "image": "\"~res:/Gfx/Lobby/icons/icon_eye_s\""
                                    "isBgVisible": "false"
                                    "sound": "eButtonSound.CHOOSE"
                                eventActions:
                                - ["ON_CLICK_BUTTON", "ON_CLICK_BUTTON", ""]
                        bindings:
                        - ["visible", "buttonVisible and showImageAndQuantity"]
            -   class: "UIControl"
                name: "TankRankRequirementWrapper"
                input: false
                components:
                    LinearLayout:
                        orientation: "TopDown"
                        padding: "16"
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfChildrenSum"
                bindings:
                - ["visible", "showTankRankRequirement"]
                children:
                -   class: "UIControl"
                    name: "TankRankRequirement"
                    input: false
                    components:
                        Anchor:
                            leftAnchorEnabled: true
                            useRtl: true
                        SizePolicy:
                            horizontalPolicy: "Formula"
                            horizontalFormula: "min(childrenSum, maxTextWidth)"
                            verticalPolicy: "PercentOfChildrenSum"
                        UIChildComponent0:
                            condition: "showTankRankRequirement"
                            prototypePath: "~res:/UI/Screens3/Lobby/Inventory/TankProgress/TankRankConditionLabel.yaml"
                            args:
                                "baseFontColor": "\"white-wild-sand-70-text\""
                                "rankConfig": "rankConfig"
                                "requiredTankRank": "when resource.type == ResourceType.unlocks -> resource.unlock.tankRank, resource.stuff.coupon.appliesToUnlocks[0].tankRank"
            -   class: "UIControl"
                name: "Description"
                input: false
                components:
                    Anchor:
                        leftAnchorEnabled: true
                        useRtl: true
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalFormula: "min(childrenSum, maxTextWidth)"
                        verticalPolicy: "PercentOfChildrenSum"
                    UIChildComponent0:
                        condition: "resource.type == ResourceType.equipment_slots"
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/RewardInfoTankName.yaml"
                        args:
                            "stats": "resource.devices.vehicleStats"
                            "vehicle": "resource.devices.vehicleInfo"
                    UIChildComponent1:
                        condition: "resource.type == ResourceType.unlocks and not isNull(vehicleStats) and not isNull(vehicleInfo)"
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/RewardInfoTankName.yaml"
                        args:
                            "vehicle": "vehicleInfo"
                            "stats": "vehicleStats"
                    UIChildComponent2:
                        childType: "kControl"
                        condition: "isStuffQuest"
                        control: "StuffQuestDescription"
                    UIChildComponent3:
                        condition: "isStuff and not isNull(resource.stuff) and resource.stuff.type == ArtefactType.certificate_victory_multiplier"
                        prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/RewardInfoVictoryMultiplier.yaml"
                        args:
                            "width": "maxTextWidth"
                            "resource": "resource"
                    UIChildComponent4:
                        childType: "kControl"
                        control: "Text"
    -   class: "UIControl"
        name: "ResourceProgress"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "parent - 32"
                verticalPolicy: "PercentOfChildrenSum"
            UIChildComponent0:
                childType: "kControl"
                condition: "not isNull(popupResource.resourceProgress)"
                control: "Progress"
    -   class: "UIControl"
        name: "BottomSpacer"
        input: false
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "FixedSize"
                verticalValue: 8.000000
        bindings:
        - ["visible", "isActionButtonVisible and not isNull(popupResource.resourceProgress)"]
    -   class: "UIControl"
        name: "ButtonsWrapper"
        size: [32.000000, 32.000000]
        input: false
        components:
            Anchor:
                leftAnchorEnabled: true
                leftAnchor: 16.000000
                rightAnchorEnabled: true
                rightAnchor: 16.000000
            LinearLayout:
                orientation: "TopDown"
                spacing: 4.000000
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 400.000000
                verticalPolicy: "PercentOfChildrenSum"
        children:
        -   class: "UIControl"
            name: "ActionButtonWrapper"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfMaxChild"
            bindings:
            - ["visible", "isActionButtonVisible"]
            children:
            -   prototype: "ButtonNoBlur/Button"
                name: "Button"
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                    UIDataParamsComponent:
                        args:
                            "inputDisabled": "buttonIsClicked"
                            "caption": "when action.actionType == eArtefactAction.Install and isInstalled -> \"#common:DialogButton/Remove\", action.userString"
                            "type": "when action.actionType == eArtefactAction.Install and isInstalled -> eButtonType.OPTIONAL_LIGHT, action.buttonType"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "ON_ACTION", "action.actionType"]
        -   class: "UIControl"
            name: "PreviewButtonWrapper"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfMaxChild"
            bindings:
            - ["visible", "buttonVisible and not showImageAndQuantity"]
            children:
            -   prototype: "ButtonNoBlur/Button"
                name: "Button"
                components:
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                    UIDataParamsComponent:
                        args:
                            "inputDisabled": "buttonIsClicked"
                            "caption": "previewKey"
                            "type": "eButtonType.OPTIONAL_LIGHT"
                        eventActions:
                        - ["ON_CLICK_BUTTON", "ON_CLICK_BUTTON", ""]
Slots:
-   class: "UIControl"
    name: "StuffIcon"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 64.000000
            verticalPolicy: "FixedSize"
            verticalValue: 78.000000
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/Detailed/StuffIcon.yaml"
            args:
                "stuff": "resource.stuff"
-   class: "UIControl"
    name: "BasicIcon"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 64.000000
            verticalPolicy: "FixedSize"
            verticalValue: 64.000000
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/Detailed/BasicIcon.yaml"
            args:
                "basic": "resource.basic"
                "type": "resource.type"
-   class: "UIControl"
    name: "VehicleIcon"
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "FixedSize"
            horizontalValue: 64.000000
            verticalPolicy: "FixedSize"
            verticalValue: 45.000000
        UIChildComponent0:
            prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/Detailed/VehicleIcon.yaml"
            args:
                "vehicle": "resource.vehicle"
-   class: "UIControl"
    name: "Text"
    size: [0.000000, 160.000000]
    input: false
    components:
        RichContent:
            baseClasses: "t-body regular color=white-wild-sand-70-text"
        RichContentAliases0:
            aliases:
            - ["text_white_bold", "<span class=\"t-body bold white-wild-sand-text\" />"]
            - ["text2_white_bold", "<span class=\"t-body bold white-wild-sand-text\" />"]
            - ["price", "<object class=\"XP\" name=\"Price\" path=\"~res:/UI/Screens/Lobby/Common/Price.yaml\" prototype=\"Price\" />"]
            - ["proxy", "<control control=\"~res:/UI/Screens3/Lobby/Common/Resource/Currency.yaml\" args1=\"resource=resource\" args2=\"hideGrade=true\" args3=\"currencySize=eCurrencySize.HUGE_REGULAR\"/>"]
        Anchor:
            leftAnchorEnabled: true
        SizePolicy:
            horizontalPolicy: "Formula"
            horizontalFormula: "min(childrenSum, maxTextWidth)"
            verticalPolicy: "PercentOfChildrenSum"
        FlowLayout:
            hDynamicPadding: false
            hSpacing: 4.000000
            useRtl: true
        StyleSheet:
            styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Common/PopupMenu.style.yaml"
    bindings:
    - ["RichContent.text", "localize(description, { \"highlight_start\" = \"<text_white_bold>\"; \"highlight_end\" = \"</text_white_bold>\"; })"]
-   class: "UIControl"
    name: "StuffQuestDescription"
    size: [32.000000, 32.000000]
    input: false
    components:
        Anchor:
            leftAnchorEnabled: true
            useRtl: true
        LinearLayout:
            orientation: "TopDown"
        SizePolicy:
            horizontalPolicy: "PercentOfMaxChild"
            verticalPolicy: "PercentOfChildrenSum"
    children:
    -   class: "UIControl"
        name: "Text"
        size: [0.000000, 160.000000]
        input: false
        components:
            RichContent:
                baseClasses: "t-body regular color=white-wild-sand-70-text"
            RichContentAliases0:
                aliases:
                - ["text_white_bold", "<span class=\"t-body bold white-wild-sand-text\" />"]
                - ["text2_white_bold", "<span class=\"t-body bold white-wild-sand-text\" />"]
                - ["price", "<object class=\"XP\" name=\"Price\" path=\"~res:/UI/Screens/Lobby/Common/Price.yaml\" prototype=\"Price\" />"]
                - ["proxy", "<control control=\"~res:/UI/Screens3/Lobby/Common/Resource/Currency.yaml\" args1=\"resource=resource\" args2=\"hideGrade=true\" args3=\"currencySize=eCurrencySize.HUGE_REGULAR\"/>"]
            Anchor:
                leftAnchorEnabled: true
                useRtl: true
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "min(childrenSum, maxTextWidth)"
                verticalPolicy: "PercentOfChildrenSum"
            FlowLayout:
                hSpacing: 4.000000
                useRtl: true
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml;~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Common/PopupMenu.style.yaml"
        bindings:
        - ["RichContent.text", "localize(description, { \"highlight_start\" = \"<text_white_bold>\"; \"highlight_end\" = \"</text_white_bold>\"; })"]
    -   class: "UIControl"
        name: "ParamsContainer"
        input: false
        components:
            Anchor:
                hCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
                padding: "3"
            SizePolicy:
                horizontalPolicy: "FixedSize"
                verticalPolicy: "PercentOfFirstChild"
        bindings:
        - ["visible", "isStuffQuest"]
        - ["SizePolicy.horizontalValue", "maxTextWidth"]
        children:
        -   class: "UIControl"
            name: "Params"
            input: false
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfFirstChild"
                UIChildComponent0:
                    condition: "isStuffQuest"
                    prototypePath: "~res:/UI/Screens3/Lobby/Common/Resource/Detailed/StuffQuestParams.yaml"
                    args:
                        "filter": "resource.stuff.quest.filter"
    -   class: "UIControl"
        name: "TimeToExecute"
        position: [0.000000, 40.000000]
        input: false
        classes: "t-body regular white-wild-sand-70-text"
        components:
            UITextComponent:
                useRtlAlign: "USE_BY_SYSTEM"
            Anchor:
                leftAnchorEnabled: true
                useRtl: true
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "min(content, maxTextWidth)"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["UITextComponent.text", "localize(\"storage/Items/StuffQuest/TimeToExecute\", { \"time\" = timeDiff(resource.stuff.quest.time); })"]
    -   class: "UIControl"
        name: "Spacer"
        input: false
        components:
            SizePolicy:
                verticalPolicy: "FixedSize"
                verticalValue: 8.000000
    -   class: "UIControl"
        name: "LifeTime"
        input: false
        classes: "t-body regular white-wild-sand-70-text"
        components:
            UITextComponent: {}
            Anchor:
                leftAnchorEnabled: true
                useRtl: true
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "min(content, maxTextWidth)"
                verticalPolicy: "PercentOfContent"
            StyleSheet:
                styles: "~res:/UI/Screens3/Font.style.yaml"
        bindings:
        - ["visible", "resource.stuff.lifetime != 0L"]
        - ["UITextComponent.text", "localize(\"storage/Items/StuffQuest/LifeTime\", { \"time\" = timeDiff(resource.stuff.lifetime); })"]
-   class: "UIControl"
    name: "Progress"
    size: [200.000000, 24.000000]
    input: false
    components:
        LinearLayout:
            spacing: 8.000000
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   class: "UIControl"
        name: "ProgressBar"
        input: false
        components:
            Anchor:
                bottomAnchorEnabled: true
                bottomAnchor: 4.000000
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
                verticalPolicy: "FixedSize"
                verticalValue: 8.000000
            UIChildComponent0:
                prototypePath: "~res:/UI/Screens3/Lobby/Common/ProgressBar.yaml"
                args:
                    "radius": "3"
                    "roundCorners": "true"
                    "maximum": "popupResource.resourceProgress.maxQuantity"
                    "value": "min(popupResource.resourceProgress.currentQuantity, popupResource.resourceProgress.maxQuantity)"
    -   class: "UIControl"
        name: "ProgressText"
        input: false
        components:
            Anchor: {}
            LinearLayout:
                spacing: 5.000000
            SizePolicy:
                horizontalPolicy: "PercentOfChildrenSum"
                verticalPolicy: "PercentOfMaxChild"
        children:
        -   class: "UIControl"
            name: "CurrentQuantity"
            input: false
            classes: "t-subtitle bold white-wild-sand-text"
            components:
                UITextComponent:
                    useRtlAlign: "USE_BY_SYSTEM"
                Anchor:
                    leftAnchorEnabled: true
                    useRtl: true
                SizePolicy:
                    horizontalPolicy: "Formula"
                    horizontalFormula: "min(content, maxTextWidth)"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
            bindings:
            - ["UITextComponent.text", "popupResource.resourceProgress.currentQuantity"]
        -   class: "UIControl"
            name: "Slash"
            input: false
            classes: "t-caps regular white-wild-sand-70-text"
            components:
                UITextComponent:
                    text: "/"
                    useRtlAlign: "USE_BY_SYSTEM"
                Anchor:
                    bottomAnchorEnabled: true
                    bottomAnchor: 1.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
        -   class: "UIControl"
            name: "MaxQuantity"
            input: false
            classes: "t-caps regular white-wild-sand-70-text"
            components:
                UITextComponent:
                    useRtlAlign: "USE_BY_SYSTEM"
                Anchor:
                    bottomAnchorEnabled: true
                    bottomAnchor: 1.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfContent"
                    verticalPolicy: "PercentOfContent"
                StyleSheet:
                    styles: "~res:/UI/Screens3/Font.style.yaml"
            bindings:
            - ["UITextComponent.text", "popupResource.resourceProgress.maxQuantity"]
